{"version":3,"file":"index.mjs","sources":["../../src/basecomponent/style/BaseComponentStyle.js","../../src/basecomponent/BaseComponent.vue"],"sourcesContent":["import BaseStyle from '@primevue/core/base/style';\n\nexport default BaseStyle.extend({\n    name: 'common'\n});\n","<script>\nimport Base from '@primevue/core/base';\nimport BaseStyle from '@primevue/core/base/style';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { Theme, ThemeService } from '@primeuix/styled';\nimport { toFlatCase, isNotEmpty, getKeyValue, isString, isArray, resolve } from '@primeuix/utils/object';\nimport { findSingle } from '@primeuix/utils/dom';\nimport { mergeProps } from 'vue';\nimport BaseComponentStyle from './style/BaseComponentStyle';\n\nexport default {\n    name: 'BaseComponent',\n    props: {\n        pt: {\n            type: Object,\n            default: undefined\n        },\n        ptOptions: {\n            type: Object,\n            default: undefined\n        },\n        unstyled: {\n            type: Boolean,\n            default: undefined\n        },\n        dt: {\n            type: Object,\n            default: undefined\n        }\n    },\n    inject: {\n        $parentInstance: {\n            default: undefined\n        }\n    },\n    watch: {\n        isUnstyled: {\n            immediate: true,\n            handler(newValue) {\n                if (!newValue) {\n                    this._loadCoreStyles();\n                    this._themeChangeListener(this._loadCoreStyles); // update styles with theme settings\n                }\n            }\n        },\n        dt: {\n            immediate: true,\n            handler(newValue) {\n                if (newValue) {\n                    this._loadScopedThemeStyles(newValue);\n                    this._themeChangeListener(() => this._loadScopedThemeStyles(newValue));\n                } else {\n                    this._unloadScopedThemeStyles();\n                }\n            }\n        }\n    },\n    scopedStyleEl: undefined,\n    rootEl: undefined,\n    beforeCreate() {\n        const _usept = this.pt?.['_usept'];\n        const originalValue = _usept ? this.pt?.originalValue?.[this.$.type.name] : undefined;\n        const value = _usept ? this.pt?.value?.[this.$.type.name] : this.pt;\n\n        (value || originalValue)?.hooks?.['onBeforeCreate']?.();\n\n        const _useptInConfig = this.$primevueConfig?.pt?.['_usept'];\n        const originalValueInConfig = _useptInConfig ? this.$primevue?.config?.pt?.originalValue : undefined;\n        const valueInConfig = _useptInConfig ? this.$primevue?.config?.pt?.value : this.$primevue?.config?.pt;\n\n        (valueInConfig || originalValueInConfig)?.[this.$.type.name]?.hooks?.['onBeforeCreate']?.();\n    },\n    created() {\n        this._hook('onCreated');\n    },\n    beforeMount() {\n        this._loadStyles();\n        this._hook('onBeforeMount');\n    },\n    mounted() {\n        // @todo - improve performance\n        this.rootEl = findSingle(this.$el, `[data-pc-name=\"${toFlatCase(this.$.type.name)}\"]`);\n\n        if (this.rootEl) {\n            this.rootEl.setAttribute(this.$attrSelector, '');\n            this.rootEl.$pc = { name: this.$.type.name, ...this.$params };\n        }\n\n        this._hook('onMounted');\n    },\n    beforeUpdate() {\n        this._hook('onBeforeUpdate');\n    },\n    updated() {\n        this._hook('onUpdated');\n    },\n    beforeUnmount() {\n        this._hook('onBeforeUnmount');\n    },\n    unmounted() {\n        this._unloadScopedThemeStyles();\n        this._hook('onUnmounted');\n    },\n    methods: {\n        _hook(hookName) {\n            if (!this.$options.hostName) {\n                const selfHook = this._usePT(this._getPT(this.pt, this.$.type.name), this._getOptionValue, `hooks.${hookName}`);\n                const defaultHook = this._useDefaultPT(this._getOptionValue, `hooks.${hookName}`);\n\n                selfHook?.();\n                defaultHook?.();\n            }\n        },\n        _mergeProps(fn, ...args) {\n            return isFunction(fn) ? fn(...args) : mergeProps(...args);\n        },\n        _loadStyles() {\n            const _load = () => {\n                // @todo\n                if (!Base.isStyleNameLoaded('base')) {\n                    BaseStyle.loadCSS(this.$styleOptions);\n                    this._loadGlobalStyles();\n\n                    Base.setLoadedStyleName('base');\n                }\n\n                this._loadThemeStyles();\n            };\n\n            _load();\n            this._themeChangeListener(_load);\n        },\n        _loadCoreStyles() {\n            if (!Base.isStyleNameLoaded(this.$style?.name) && this.$style?.name) {\n                BaseComponentStyle.loadCSS(this.$styleOptions);\n                this.$options.style && this.$style.loadCSS(this.$styleOptions);\n\n                Base.setLoadedStyleName(this.$style.name);\n            }\n        },\n        _loadGlobalStyles() {\n            /*\n             * @todo Add self custom css support;\n             * <Panel :pt=\"{ css: `...` }\" .../>\n             *\n             * const selfCSS = this._getPTClassValue(this.pt, 'css', this.$params);\n             * const defaultCSS = this._getPTClassValue(this.defaultPT, 'css', this.$params);\n             * const mergedCSS = mergeProps(selfCSS, defaultCSS);\n             * isNotEmpty(mergedCSS?.class) && this.$css.loadCustomStyle(mergedCSS?.class);\n             */\n\n            const globalCSS = this._useGlobalPT(this._getOptionValue, 'global.css', this.$params);\n\n            isNotEmpty(globalCSS) && BaseStyle.load(globalCSS, { name: 'global', ...this.$styleOptions });\n        },\n        _loadThemeStyles() {\n            if (this.isUnstyled) return;\n\n            // common\n            if (!Theme.isStyleNameLoaded('common')) {\n                const { primitive, semantic } = this.$style?.getCommonTheme?.() || {};\n\n                BaseStyle.load(primitive?.css, { name: 'primitive-variables', ...this.$styleOptions });\n                BaseStyle.load(semantic?.css, { name: 'semantic-variables', ...this.$styleOptions });\n                BaseStyle.loadTheme({ name: 'global-style', ...this.$styleOptions });\n\n                Theme.setLoadedStyleName('common');\n            }\n\n            // component\n            if (!Theme.isStyleNameLoaded(this.$style?.name) && this.$style?.name) {\n                const { css } = this.$style?.getComponentTheme?.() || {};\n\n                this.$style?.load(css, { name: `${this.$style.name}-variables`, ...this.$styleOptions });\n                this.$style?.loadTheme({ name: `${this.$style.name}-style`, ...this.$styleOptions });\n\n                Theme.setLoadedStyleName(this.$style.name);\n            }\n\n            // layer order\n            if (!Theme.isStyleNameLoaded('layer-order')) {\n                const layerOrder = this.$style?.getLayerOrderThemeCSS?.();\n\n                BaseStyle.load(layerOrder, { name: 'layer-order', first: true, ...this.$styleOptions });\n\n                Theme.setLoadedStyleName('layer-order');\n            }\n        },\n        _loadScopedThemeStyles(preset) {\n            const { css } = this.$style?.getPresetTheme?.(preset, `[${this.$attrSelector}]`) || {};\n            const scopedStyle = this.$style?.load(css, { name: `${this.$attrSelector}-${this.$style.name}`, ...this.$styleOptions });\n\n            this.scopedStyleEl = scopedStyle.el;\n        },\n        _unloadScopedThemeStyles() {\n            this.scopedStyleEl?.value?.remove();\n        },\n        _themeChangeListener(callback = () => {}) {\n            Base.clearLoadedStyleNames();\n            ThemeService.on('theme:change', callback);\n        },\n        _getHostInstance(instance) {\n            return instance ? (this.$options.hostName ? (instance.$.type.name === this.$options.hostName ? instance : this._getHostInstance(instance.$parentInstance)) : instance.$parentInstance) : undefined;\n        },\n        _getPropValue(name) {\n            return this[name] || this._getHostInstance(this)?.[name];\n        },\n        _getOptionValue(options, key = '', params = {}) {\n            return getKeyValue(options, key, params);\n        },\n        _getPTValue(obj = {}, key = '', params = {}, searchInDefaultPT = true) {\n            const searchOut = /./g.test(key) && !!params[key.split('.')[0]];\n            const { mergeSections = true, mergeProps: useMergeProps = false } = this._getPropValue('ptOptions') || this.$primevueConfig?.ptOptions || {};\n            const global = searchInDefaultPT ? (searchOut ? this._useGlobalPT(this._getPTClassValue, key, params) : this._useDefaultPT(this._getPTClassValue, key, params)) : undefined;\n            const self = searchOut ? undefined : this._getPTSelf(obj, this._getPTClassValue, key, { ...params, global: global || {} });\n            const datasets = this._getPTDatasets(key);\n\n            return mergeSections || (!mergeSections && self) ? (useMergeProps ? this._mergeProps(useMergeProps, global, self, datasets) : { ...global, ...self, ...datasets }) : { ...self, ...datasets };\n        },\n        _getPTSelf(obj = {}, ...args) {\n            return mergeProps(\n                this._usePT(this._getPT(obj, this.$name), ...args), // Exp; <component :pt=\"{}\"\n                this._usePT(this.$_attrsPT, ...args) // Exp; <component :pt:[passthrough_key]:[attribute]=\"{value}\" or <component :pt:[passthrough_key]=\"() =>{value}\"\n            );\n        },\n        _getPTDatasets(key = '') {\n            const datasetPrefix = 'data-pc-';\n            const isExtended = key === 'root' && isNotEmpty(this.pt?.['data-pc-section']);\n\n            return (\n                key !== 'transition' && {\n                    ...(key === 'root' && {\n                        [`${datasetPrefix}name`]: toFlatCase(isExtended ? this.pt?.['data-pc-section'] : this.$.type.name),\n                        ...(isExtended && { [`${datasetPrefix}extend`]: toFlatCase(this.$.type.name) })\n                    }),\n                    [`${datasetPrefix}section`]: toFlatCase(key)\n                }\n            );\n        },\n        _getPTClassValue(...args) {\n            const value = this._getOptionValue(...args);\n\n            return isString(value) || isArray(value) ? { class: value } : value;\n        },\n        _getPT(pt, key = '', callback) {\n            const getValue = (value, checkSameKey = false) => {\n                const computedValue = callback ? callback(value) : value;\n                const _key = toFlatCase(key);\n                const _cKey = toFlatCase(this.$name);\n\n                return (checkSameKey ? (_key !== _cKey ? computedValue?.[_key] : undefined) : computedValue?.[_key]) ?? computedValue;\n            };\n\n            return pt?.hasOwnProperty('_usept')\n                ? {\n                      _usept: pt['_usept'],\n                      originalValue: getValue(pt.originalValue),\n                      value: getValue(pt.value)\n                  }\n                : getValue(pt, true);\n        },\n        _usePT(pt, callback, key, params) {\n            const fn = (value) => callback(value, key, params);\n\n            if (pt?.hasOwnProperty('_usept')) {\n                const { mergeSections = true, mergeProps: useMergeProps = false } = pt['_usept'] || this.$primevueConfig?.ptOptions || {};\n                const originalValue = fn(pt.originalValue);\n                const value = fn(pt.value);\n\n                if (originalValue === undefined && value === undefined) return undefined;\n                else if (isString(value)) return value;\n                else if (isString(originalValue)) return originalValue;\n\n                return mergeSections || (!mergeSections && value) ? (useMergeProps ? this._mergeProps(useMergeProps, originalValue, value) : { ...originalValue, ...value }) : value;\n            }\n\n            return fn(pt);\n        },\n        _useGlobalPT(callback, key, params) {\n            return this._usePT(this.globalPT, callback, key, params);\n        },\n        _useDefaultPT(callback, key, params) {\n            return this._usePT(this.defaultPT, callback, key, params);\n        },\n        ptm(key = '', params = {}) {\n            return this._getPTValue(this.pt, key, { ...this.$params, ...params });\n        },\n        ptmi(key = '', params = {}) {\n            // inheritAttrs:true\n            return mergeProps(this.$_attrsWithoutPT, this.ptm(key, params));\n        },\n        ptmo(obj = {}, key = '', params = {}) {\n            return this._getPTValue(obj, key, { instance: this, ...params }, false);\n        },\n        cx(key = '', params = {}) {\n            return !this.isUnstyled ? this._getOptionValue(this.$style.classes, key, { ...this.$params, ...params }) : undefined;\n        },\n        sx(key = '', when = true, params = {}) {\n            if (when) {\n                const self = this._getOptionValue(this.$style.inlineStyles, key, { ...this.$params, ...params });\n                const base = this._getOptionValue(BaseComponentStyle.inlineStyles, key, { ...this.$params, ...params });\n\n                return [base, self];\n            }\n\n            return undefined;\n        }\n    },\n    computed: {\n        globalPT() {\n            return this._getPT(this.$primevueConfig?.pt, undefined, (value) => resolve(value, { instance: this }));\n        },\n        defaultPT() {\n            return this._getPT(this.$primevueConfig?.pt, undefined, (value) => this._getOptionValue(value, this.$name, { ...this.$params }) || resolve(value, { ...this.$params }));\n        },\n        isUnstyled() {\n            return this.unstyled !== undefined ? this.unstyled : this.$primevueConfig?.unstyled;\n        },\n        $theme() {\n            return this.$primevueConfig?.theme;\n        },\n        $style() {\n            return { classes: undefined, inlineStyles: undefined, load: () => {}, loadCSS: () => {}, loadTheme: () => {}, ...(this._getHostInstance(this) || {}).$style, ...this.$options.style };\n        },\n        $styleOptions() {\n            return { nonce: this.$primevueConfig?.csp?.nonce };\n        },\n        $primevueConfig() {\n            return this.$primevue?.config;\n        },\n        $name() {\n            return this.$options.hostName || this.$.type.name;\n        },\n        $params() {\n            const parentInstance = this._getHostInstance(this) || this.$parent;\n\n            return {\n                instance: this,\n                props: this.$props,\n                state: this.$data,\n                attrs: this.$attrs,\n                parent: {\n                    instance: parentInstance,\n                    props: parentInstance?.$props,\n                    state: parentInstance?.$data,\n                    attrs: parentInstance?.$attrs\n                }\n            };\n        },\n        $_attrsPT() {\n            return Object.entries(this.$attrs || {})\n                .filter(([key]) => key?.startsWith('pt:'))\n                .reduce((result, [key, value]) => {\n                    const [, ...rest] = key.split(':');\n\n                    rest?.reduce((currentObj, nestedKey, index, array) => {\n                        !currentObj[nestedKey] && (currentObj[nestedKey] = index === array.length - 1 ? value : {});\n\n                        return currentObj[nestedKey];\n                    }, result);\n\n                    return result;\n                }, {});\n        },\n        $_attrsWithoutPT() {\n            return Object.entries(this.$attrs || {})\n                .filter(([key]) => !key?.startsWith('pt:'))\n                .reduce((acc, [key, value]) => {\n                    acc[key] = value;\n\n                    return acc;\n                }, {});\n        },\n        $attrSelector() {\n            return UniqueComponentId('pc');\n        }\n    }\n};\n</script>\n"],"names":["BaseStyle","extend","name","props","pt","type","Object","undefined","ptOptions","unstyled","Boolean","dt","inject","$parentInstance","watch","isUnstyled","immediate","handler","newValue","_loadCoreStyles","_themeChangeListener","_this","_loadScopedThemeStyles","_unloadScopedThemeStyles","scopedStyleEl","rootEl","beforeCreate","_this$pt","_this$pt2","_this$pt3","_ref","_ref$onBeforeCreate","_this$$primevueConfig","_this$$primevue","_this$$primevue2","_this$$primevue3","_ref2","_ref2$onBeforeCreate","_usept","originalValue","$","value","hooks","call","_useptInConfig","$primevueConfig","originalValueInConfig","$primevue","config","valueInConfig","created","_hook","beforeMount","_loadStyles","mounted","findSingle","$el","concat","toFlatCase","setAttribute","$attrSelector","$pc","_objectSpread","$params","beforeUpdate","updated","beforeUnmount","unmounted","methods","hookName","$options","hostName","selfHook","_usePT","_getPT","_getOptionValue","defaultHook","_useDefaultPT","_mergeProps","fn","_len","arguments","length","args","Array","_key2","isFunction","apply","mergeProps","_this2","_load","Base","isStyleNameLoaded","loadCSS","$styleOptions","_loadGlobalStyles","setLoadedStyleName","_loadThemeStyles","_this$$style","_this$$style2","$style","BaseComponentStyle","style","globalCSS","_useGlobalPT","isNotEmpty","load","_this$$style4","_this$$style5","Theme","_this$$style3","_this$$style3$getComm","_ref3","getCommonTheme","primitive","semantic","css","loadTheme","_this$$style6","_this$$style6$getComp","_this$$style7","_this$$style8","_ref4","getComponentTheme","_this$$style9","_this$$style9$getLaye","layerOrder","getLayerOrderThemeCSS","first","preset","_this$$style10","_this$$style10$getPre","_this$$style11","_ref5","getPresetTheme","scopedStyle","el","_this$scopedStyleEl","remove","callback","clearLoadedStyleNames","ThemeService","on","_getHostInstance","instance","_getPropValue","_this$_getHostInstanc","options","key","params","getKeyValue","_getPTValue","_this$$primevueConfig2","obj","searchInDefaultPT","searchOut","test","split","_ref6","_ref6$mergeSections","mergeSections","_ref6$mergeProps","useMergeProps","global","_getPTClassValue","self","_getPTSelf","datasets","_getPTDatasets","_len2","_key3","$name","$_attrsPT","_this$pt4","_this$pt5","datasetPrefix","isExtended","_defineProperty","isString","isArray","_this3","getValue","_ref8","checkSameKey","computedValue","_key","_cKey","hasOwnProperty","_this$$primevueConfig3","_ref9","_ref9$mergeSections","_ref9$mergeProps","globalPT","defaultPT","ptm","ptmi","$_attrsWithoutPT","ptmo","cx","classes","sx","when","inlineStyles","base","computed","_this$$primevueConfig4","_this4","resolve","_this$$primevueConfig5","_this5","_this$$primevueConfig6","$theme","_this$$primevueConfig7","theme","_this$$primevueConfig8","nonce","csp","_this$$primevue4","parentInstance","$parent","$props","state","$data","attrs","$attrs","parent","entries","filter","_ref10","_ref11","_slicedToArray","startsWith","reduce","result","_ref12","_ref13","_key$split","_key$split2","_toArray","rest","slice","currentObj","nestedKey","index","array","_ref14","_ref15","acc","_ref16","_ref17","UniqueComponentId"],"mappings":";;;;;;;;AAEA,yBAAeA,SAAS,CAACC,MAAM,CAAC;AAC5BC,EAAAA,IAAI,EAAE,QAAA;AACV,CAAC,CAAC;;;;;;;;;;;;;;;;ACMF,aAAe;AACXA,EAAAA,IAAI,EAAE,eAAe;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,EAAE,EAAE;AACAC,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAASC,EAAAA,SAAAA;KACZ;AACDC,IAAAA,SAAS,EAAE;AACPH,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAASC,EAAAA,SAAAA;KACZ;AACDE,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,IAAI,EAAEK,OAAO;MACb,SAASH,EAAAA,SAAAA;KACZ;AACDI,IAAAA,EAAE,EAAE;AACAN,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAASC,EAAAA,SAAAA;AACb,KAAA;GACH;AACDK,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;MACb,SAASN,EAAAA,SAAAA;AACb,KAAA;GACH;AACDO,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE;AACRC,MAAAA,SAAS,EAAE,IAAI;MACfC,OAAO,EAAA,SAAAA,OAACC,CAAAA,QAAQ,EAAE;QACd,IAAI,CAACA,QAAQ,EAAE;UACX,IAAI,CAACC,eAAe,EAAE,CAAA;UACtB,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAACD,eAAe,CAAC,CAAE;AACrD,SAAA;AACJ,OAAA;KACH;AACDR,IAAAA,EAAE,EAAE;AACAK,MAAAA,SAAS,EAAE,IAAI;MACfC,OAAO,EAAA,SAAAA,OAACC,CAAAA,QAAQ,EAAE;AAAA,QAAA,IAAAG,KAAA,GAAA,IAAA,CAAA;AACd,QAAA,IAAIH,QAAQ,EAAE;AACV,UAAA,IAAI,CAACI,sBAAsB,CAACJ,QAAQ,CAAC,CAAA;UACrC,IAAI,CAACE,oBAAoB,CAAC,YAAA;AAAA,YAAA,OAAMC,KAAI,CAACC,sBAAsB,CAACJ,QAAQ,CAAC,CAAA;WAAC,CAAA,CAAA;AAC1E,SAAE,MAAK;UACH,IAAI,CAACK,wBAAwB,EAAE,CAAA;AACnC,SAAA;AACJ,OAAA;AACJ,KAAA;GACH;AACDC,EAAAA,aAAa,EAAEjB,SAAS;AACxBkB,EAAAA,MAAM,EAAElB,SAAS;EACjBmB,YAAY,EAAA,SAAAA,eAAG;IAAA,IAAAC,QAAA,EAAAC,SAAA,EAAAC,SAAA,EAAAC,IAAA,EAAAC,mBAAA,EAAAC,qBAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,KAAA,EAAAC,oBAAA,CAAA;AACX,IAAA,IAAMC,MAAK,GAAA,CAAAX,QAAA,GAAI,IAAI,CAACvB,EAAE,MAAA,IAAA,IAAAuB,QAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,QAAA,CAAU,QAAQ,CAAC,CAAA;AAClC,IAAA,IAAMY,aAAc,GAAED,MAAO,GAAA,CAAAV,SAAA,GAAE,IAAI,CAACxB,EAAE,MAAA,IAAA,IAAAwB,SAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,SAAA,GAAPA,SAAA,CAASW,aAAa,MAAAX,IAAAA,IAAAA,SAAA,KAAtBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAA,CAAyB,IAAI,CAACY,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAE,GAAEK,SAAS,CAAA;AACrF,IAAA,IAAMkC,KAAI,GAAIH,MAAO,GAAA,CAAAT,SAAA,GAAE,IAAI,CAACzB,EAAE,MAAAyB,IAAAA,IAAAA,SAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAA,GAAPA,SAAA,CAASY,KAAK,MAAA,IAAA,IAAAZ,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,SAAA,CAAiB,IAAI,CAACW,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAE,GAAE,IAAI,CAACE,EAAE,CAAA;AAEnE,IAAA,CAAA0B,IAAA,GAACW,SAASF,aAAa,MAAA,IAAA,IAAAT,IAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,IAAA,GAAvBA,IAAA,CAA0BY,KAAK,MAAAZ,IAAAA,IAAAA,IAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,mBAAA,GAA/BD,IAAA,CAAkC,gBAAgB,CAAC,MAAA,IAAA,IAAAC,mBAAA,KAAA,KAAA,CAAA,IAAnDA,mBAAA,CAAAY,IAAA,CAAAb,IAAsD,CAAC,CAAA;IAEvD,IAAMc,cAAe,IAAAZ,qBAAA,GAAE,IAAI,CAACa,eAAe,cAAAb,qBAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,qBAAA,GAApBA,qBAAA,CAAsB5B,EAAE,MAAA,IAAA,IAAA4B,qBAAA,KAAxBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAA2B,QAAQ,CAAC,CAAA;AAC3D,IAAA,IAAMc,wBAAwBF,oCAAiB,IAAI,CAACG,SAAS,MAAAd,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,eAAA,GAAdA,eAAA,CAAgBe,MAAM,MAAA,IAAA,IAAAf,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,eAAA,GAAtBA,eAAA,CAAwB7B,EAAE,MAAA6B,IAAAA,IAAAA,eAAA,KAA1BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,eAAA,CAA4BM,gBAAgBhC,SAAS,CAAA;IACpG,IAAM0C,gBAAgBL,qCAAiB,IAAI,CAACG,SAAS,MAAAb,IAAAA,IAAAA,gBAAA,gBAAAA,gBAAA,GAAdA,gBAAA,CAAgBc,MAAM,MAAA,IAAA,IAAAd,gBAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,gBAAA,GAAtBA,gBAAA,CAAwB9B,EAAE,cAAA8B,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA1BA,gBAAA,CAA4BO,KAAM,IAAAN,gBAAA,GAAE,IAAI,CAACY,SAAS,MAAA,IAAA,IAAAZ,gBAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,gBAAA,GAAdA,gBAAA,CAAgBa,MAAM,cAAAb,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAtBA,gBAAA,CAAwB/B,EAAE,CAAA;IAErG,CAAAgC,KAAA,GAACa,aAAc,IAAGH,qBAAqB,MAAAV,IAAAA,IAAAA,KAAA,gBAAAA,KAAA,GAAvCA,KAAA,CAA2C,IAAI,CAACI,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAC,MAAAkC,IAAAA,IAAAA,KAAA,gBAAAA,KAAA,GAA5DA,KAAA,CAA8DM,KAAK,cAAAN,KAAA,KAAA,KAAA,CAAA,IAAA,CAAAC,oBAAA,GAAnED,KAAA,CAAsE,gBAAgB,CAAC,cAAAC,oBAAA,KAAA,KAAA,CAAA,IAAvFA,oBAAA,CAAAM,IAAA,CAAAP,KAA0F,CAAC,CAAA;GAC9F;EACDc,OAAO,EAAA,SAAAA,UAAG;AACN,IAAA,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC,CAAA;GAC1B;EACDC,WAAW,EAAA,SAAAA,cAAG;IACV,IAAI,CAACC,WAAW,EAAE,CAAA;AAClB,IAAA,IAAI,CAACF,KAAK,CAAC,eAAe,CAAC,CAAA;GAC9B;EACDG,OAAO,EAAA,SAAAA,UAAG;AACN;IACA,IAAI,CAAC7B,MAAK,GAAI8B,UAAU,CAAC,IAAI,CAACC,GAAG,EAAA,kBAAA,CAAAC,MAAA,CAAoBC,UAAU,CAAC,IAAI,CAAClB,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAC,EAAA,KAAA,CAAI,CAAC,CAAA;IAEtF,IAAI,IAAI,CAACuB,MAAM,EAAE;MACb,IAAI,CAACA,MAAM,CAACkC,YAAY,CAAC,IAAI,CAACC,aAAa,EAAE,EAAE,CAAC,CAAA;AAChD,MAAA,IAAI,CAACnC,MAAM,CAACoC,GAAI,GAAAC,aAAA,CAAA;AAAI5D,QAAAA,IAAI,EAAE,IAAI,CAACsC,CAAC,CAACnC,IAAI,CAACH,IAAAA;OAAS,EAAA,IAAI,CAAC6D,OAAM,CAAG,CAAA;AACjE,KAAA;AAEA,IAAA,IAAI,CAACZ,KAAK,CAAC,WAAW,CAAC,CAAA;GAC1B;EACDa,YAAY,EAAA,SAAAA,eAAG;AACX,IAAA,IAAI,CAACb,KAAK,CAAC,gBAAgB,CAAC,CAAA;GAC/B;EACDc,OAAO,EAAA,SAAAA,UAAG;AACN,IAAA,IAAI,CAACd,KAAK,CAAC,WAAW,CAAC,CAAA;GAC1B;EACDe,aAAa,EAAA,SAAAA,gBAAG;AACZ,IAAA,IAAI,CAACf,KAAK,CAAC,iBAAiB,CAAC,CAAA;GAChC;EACDgB,SAAS,EAAA,SAAAA,YAAG;IACR,IAAI,CAAC5C,wBAAwB,EAAE,CAAA;AAC/B,IAAA,IAAI,CAAC4B,KAAK,CAAC,aAAa,CAAC,CAAA;GAC5B;AACDiB,EAAAA,OAAO,EAAE;IACLjB,KAAK,EAAA,SAAAA,KAACkB,CAAAA,QAAQ,EAAE;AACZ,MAAA,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACC,QAAQ,EAAE;AACzB,QAAA,IAAMC,WAAW,IAAI,CAACC,MAAM,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACtE,EAAE,EAAE,IAAI,CAACoC,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAC,EAAE,IAAI,CAACyE,eAAe,EAAAlB,QAAAA,CAAAA,MAAA,CAAWY,QAAQ,CAAE,CAAC,CAAA;AAC/G,QAAA,IAAMO,cAAc,IAAI,CAACC,aAAa,CAAC,IAAI,CAACF,eAAe,EAAAlB,QAAAA,CAAAA,MAAA,CAAWY,QAAQ,CAAE,CAAC,CAAA;AAEjFG,QAAAA,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,KAARA,KAAAA,CAAAA,IAAAA,QAAQ,EAAI,CAAA;AACZI,QAAAA,WAAW,KAAXA,IAAAA,IAAAA,WAAW,KAAXA,KAAAA,CAAAA,IAAAA,WAAW,EAAI,CAAA;AACnB,OAAA;KACH;IACDE,WAAW,EAAA,SAAAA,WAACC,CAAAA,EAAE,EAAW;MAAA,KAAAC,IAAAA,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAK,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAL,IAAA,EAAAK,KAAA,EAAA,EAAA;AAAJF,QAAAA,IAAI,CAAAE,KAAA,GAAAJ,CAAAA,CAAAA,GAAAA,SAAA,CAAAI,KAAA,CAAA,CAAA;AAAA,OAAA;AACnB,MAAA,OAAOC,UAAU,CAACP,EAAE,IAAIA,EAAE,CAAAQ,KAAA,CAAIJ,KAAAA,CAAAA,EAAAA,IAAI,CAAA,GAAIK,UAAU,CAAAD,KAAA,CAAA,KAAA,CAAA,EAAIJ,IAAI,CAAC,CAAA;KAC5D;IACD9B,WAAW,EAAA,SAAAA,cAAG;AAAA,MAAA,IAAAoC,MAAA,GAAA,IAAA,CAAA;AACV,MAAA,IAAMC,KAAM,GAAE,SAARA,KAAMA,GAAQ;AAChB;AACA,QAAA,IAAI,CAACC,IAAI,CAACC,iBAAiB,CAAC,MAAM,CAAC,EAAE;AACjC5F,UAAAA,SAAS,CAAC6F,OAAO,CAACJ,MAAI,CAACK,aAAa,CAAC,CAAA;UACrCL,MAAI,CAACM,iBAAiB,EAAE,CAAA;AAExBJ,UAAAA,IAAI,CAACK,kBAAkB,CAAC,MAAM,CAAC,CAAA;AACnC,SAAA;QAEAP,MAAI,CAACQ,gBAAgB,EAAE,CAAA;OAC1B,CAAA;AAEDP,MAAAA,KAAK,EAAE,CAAA;AACP,MAAA,IAAI,CAACtE,oBAAoB,CAACsE,KAAK,CAAC,CAAA;KACnC;IACDvE,eAAe,EAAA,SAAAA,kBAAG;MAAA,IAAA+E,YAAA,EAAAC,aAAA,CAAA;AACd,MAAA,IAAI,CAACR,IAAI,CAACC,iBAAiB,CAAAM,CAAAA,YAAA,GAAC,IAAI,CAACE,MAAM,MAAAF,IAAAA,IAAAA,YAAA,KAAXA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,YAAA,CAAahG,IAAI,CAAE,IAAA,CAAAiG,aAAA,GAAG,IAAI,CAACC,MAAM,MAAA,IAAA,IAAAD,aAAA,KAAA,KAAA,CAAA,IAAXA,aAAA,CAAajG,IAAI,EAAE;AACjEmG,QAAAA,kBAAkB,CAACR,OAAO,CAAC,IAAI,CAACC,aAAa,CAAC,CAAA;AAC9C,QAAA,IAAI,CAACxB,QAAQ,CAACgC,KAAM,IAAG,IAAI,CAACF,MAAM,CAACP,OAAO,CAAC,IAAI,CAACC,aAAa,CAAC,CAAA;QAE9DH,IAAI,CAACK,kBAAkB,CAAC,IAAI,CAACI,MAAM,CAAClG,IAAI,CAAC,CAAA;AAC7C,OAAA;KACH;IACD6F,iBAAiB,EAAA,SAAAA,oBAAG;AAChB;;;AAGC;AACA;AACA;;AAEA;;;AAGD,MAAA,IAAMQ,SAAQ,GAAI,IAAI,CAACC,YAAY,CAAC,IAAI,CAAC7B,eAAe,EAAE,YAAY,EAAE,IAAI,CAACZ,OAAO,CAAC,CAAA;MAErF0C,UAAU,CAACF,SAAS,CAAA,IAAKvG,SAAS,CAAC0G,IAAI,CAACH,SAAS,EAAAzC,aAAA,CAAA;AAAI5D,QAAAA,IAAI,EAAE,QAAA;AAAQ,OAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;KAChG;IACDG,gBAAgB,EAAA,SAAAA,mBAAG;MAAA,IAAAU,aAAA,EAAAC,aAAA,CAAA;MACf,IAAI,IAAI,CAAC7F,UAAU,EAAE,OAAA;;AAErB;AACA,MAAA,IAAI,CAAC8F,KAAK,CAACjB,iBAAiB,CAAC,QAAQ,CAAC,EAAE;QAAA,IAAAkB,aAAA,EAAAC,qBAAA,CAAA;QACpC,IAAAC,KAAA,GAAgC,CAAA,CAAAF,aAAA,GAAA,IAAI,CAACV,MAAM,MAAAU,IAAAA,IAAAA,aAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAXD,aAAA,CAAaG,cAAc,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA3BA,qBAAA,CAAApE,IAAA,CAAAmE,aAA8B,CAAE,KAAG,EAAE;UAA7DI,SAAS,GAAAF,KAAA,CAATE,SAAS;UAAEC,QAAO,GAAAH,KAAA,CAAPG,QAAO,CAAA;QAE1BnH,SAAS,CAAC0G,IAAI,CAACQ,SAAS,KAAA,IAAA,IAATA,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATA,SAAS,CAAEE,GAAG,EAAAtD,aAAA,CAAA;AAAI5D,UAAAA,IAAI,EAAE,qBAAA;AAAqB,SAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;QACtF9F,SAAS,CAAC0G,IAAI,CAACS,QAAQ,KAAA,IAAA,IAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAEC,GAAG,EAAAtD,aAAA,CAAA;AAAI5D,UAAAA,IAAI,EAAE,oBAAA;AAAoB,SAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;QACpF9F,SAAS,CAACqH,SAAS,CAAAvD,aAAA,CAAA;AAAG5D,UAAAA,IAAI,EAAE,cAAA;AAAc,SAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;AAEpEe,QAAAA,KAAK,CAACb,kBAAkB,CAAC,QAAQ,CAAC,CAAA;AACtC,OAAA;;AAEA;AACA,MAAA,IAAI,CAACa,KAAK,CAACjB,iBAAiB,CAAAe,CAAAA,aAAA,GAAC,IAAI,CAACP,MAAM,MAAAO,IAAAA,IAAAA,aAAA,KAAXA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAA,CAAazG,IAAI,CAAE,IAAA,CAAA0G,aAAA,GAAG,IAAI,CAACR,MAAM,MAAA,IAAA,IAAAQ,aAAA,KAAA,KAAA,CAAA,IAAXA,aAAA,CAAa1G,IAAI,EAAE;AAAA,QAAA,IAAAoH,aAAA,EAAAC,qBAAA,EAAAC,aAAA,EAAAC,aAAA,CAAA;QAClE,IAAAC,KAAA,GAAgB,CAAA,CAAAJ,aAAA,GAAA,IAAI,CAAClB,MAAM,MAAAkB,IAAAA,IAAAA,aAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAXD,aAAA,CAAaK,iBAAiB,MAAA,IAAA,IAAAJ,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA9BA,qBAAA,CAAA5E,IAAA,CAAA2E,aAAiC,CAAE,KAAG,EAAE;UAAhDF,YAAAA;AAER,QAAA,CAAAI,aAAA,GAAA,IAAI,CAACpB,MAAM,MAAAoB,IAAAA,IAAAA,aAAA,KAAXA,KAAAA,CAAAA,IAAAA,aAAA,CAAad,IAAI,CAACU,GAAG,EAAAtD,aAAA,CAAA;AAAI5D,UAAAA,IAAI,KAAAuD,MAAA,CAAK,IAAI,CAAC2C,MAAM,CAAClG,IAAI,EAAA,YAAA,CAAA;AAAY,SAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;QACxF,CAAA2B,aAAA,GAAI,IAAA,CAACrB,MAAM,MAAA,IAAA,IAAAqB,aAAA,KAAA,KAAA,CAAA,IAAXA,aAAA,CAAaJ,SAAS,CAAAvD,aAAA,CAAA;AAAG5D,UAAAA,IAAI,KAAAuD,MAAA,CAAK,IAAI,CAAC2C,MAAM,CAAClG,IAAI,EAAA,QAAA,CAAA;AAAQ,SAAA,EAAK,IAAI,CAAC4F,aAAY,CAAG,CAAC,CAAA;QAEpFe,KAAK,CAACb,kBAAkB,CAAC,IAAI,CAACI,MAAM,CAAClG,IAAI,CAAC,CAAA;AAC9C,OAAA;;AAEA;AACA,MAAA,IAAI,CAAC2G,KAAK,CAACjB,iBAAiB,CAAC,aAAa,CAAC,EAAE;QAAA,IAAAgC,aAAA,EAAAC,qBAAA,CAAA;QACzC,IAAMC,UAAW,IAAAF,aAAA,GAAE,IAAI,CAACxB,MAAM,MAAAwB,IAAAA,IAAAA,aAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAXD,aAAA,CAAaG,qBAAqB,MAAA,IAAA,IAAAF,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlCA,qBAAA,CAAAlF,IAAA,CAAAiF,aAAqC,CAAC,CAAA;AAEzD5H,QAAAA,SAAS,CAAC0G,IAAI,CAACoB,UAAU,EAAAhE,aAAA,CAAA;AAAI5D,UAAAA,IAAI,EAAE,aAAa;AAAE8H,UAAAA,KAAK,EAAE,IAAA;AAAI,SAAA,EAAK,IAAI,CAAClC,aAAY,CAAG,CAAC,CAAA;AAEvFe,QAAAA,KAAK,CAACb,kBAAkB,CAAC,aAAa,CAAC,CAAA;AAC3C,OAAA;KACH;IACD1E,sBAAsB,EAAA,SAAAA,sBAAC2G,CAAAA,MAAM,EAAE;AAAA,MAAA,IAAAC,cAAA,EAAAC,qBAAA,EAAAC,cAAA,CAAA;AAC3B,MAAA,IAAAC,KAAA,GAAgB,CAAAH,CAAAA,cAAA,OAAI,CAAC9B,MAAM,MAAA8B,IAAAA,IAAAA,cAAA,gBAAAC,qBAAA,GAAXD,cAAA,CAAaI,cAAc,MAAAH,IAAAA,IAAAA,qBAAA,KAA3BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAAxF,IAAA,CAAAuF,cAAA,EAA8BD,MAAM,EAAAxE,GAAAA,CAAAA,MAAA,CAAM,IAAI,CAACG,aAAa,EAAA,GAAA,CAAG,CAAA,KAAK,EAAE;QAA9EwD,GAAE,GAAAiB,KAAA,CAAFjB,GAAE,CAAA;AACV,MAAA,IAAMmB,WAAU,GAAAH,CAAAA,cAAA,GAAI,IAAI,CAAChC,MAAM,MAAA,IAAA,IAAAgC,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,cAAA,CAAa1B,IAAI,CAACU,GAAG,EAAAtD,aAAA,CAAA;AAAI5D,QAAAA,IAAI,EAAAuD,EAAAA,CAAAA,MAAA,CAAK,IAAI,CAACG,aAAa,EAAAH,GAAAA,CAAAA,CAAAA,MAAA,CAAI,IAAI,CAAC2C,MAAM,CAAClG,IAAI,CAAA;AAAE,OAAA,EAAK,IAAI,CAAC4F,aAAc,CAAC,CAAC,CAAA;AAExH,MAAA,IAAI,CAACtE,aAAY,GAAI+G,WAAW,CAACC,EAAE,CAAA;KACtC;IACDjH,wBAAwB,EAAA,SAAAA,2BAAG;AAAA,MAAA,IAAAkH,mBAAA,CAAA;AACvB,MAAA,CAAAA,mBAAA,GAAI,IAAA,CAACjH,aAAa,MAAAiH,IAAAA,IAAAA,mBAAA,gBAAAA,mBAAA,GAAlBA,mBAAA,CAAoBhG,KAAK,cAAAgG,mBAAA,KAAA,KAAA,CAAA,IAAzBA,mBAAA,CAA2BC,MAAM,EAAE,CAAA;KACtC;IACDtH,oBAAoB,EAAA,SAAAA,uBAAsB;AAAA,MAAA,IAArBuH,QAAS,GAAA1D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,IAAAA,SAAA,CAAA1E,CAAAA,CAAAA,KAAAA,SAAA,GAAA0E,SAAA,CAAE,CAAA,CAAA,GAAA,YAAM,EAAE,CAAA;MACpCU,IAAI,CAACiD,qBAAqB,EAAE,CAAA;AAC5BC,MAAAA,YAAY,CAACC,EAAE,CAAC,cAAc,EAAEH,QAAQ,CAAC,CAAA;KAC5C;IACDI,gBAAgB,EAAA,SAAAA,gBAACC,CAAAA,QAAQ,EAAE;AACvB,MAAA,OAAOA,QAAS,GAAG,IAAI,CAAC1E,QAAQ,CAACC,QAAO,GAAKyE,QAAQ,CAACxG,CAAC,CAACnC,IAAI,CAACH,IAAG,KAAM,IAAI,CAACoE,QAAQ,CAACC,QAAS,GAAEyE,QAAO,GAAI,IAAI,CAACD,gBAAgB,CAACC,QAAQ,CAACnI,eAAe,CAAC,GAAImI,QAAQ,CAACnI,eAAe,GAAIN,SAAS,CAAA;KACrM;IACD0I,aAAa,EAAA,SAAAA,aAAC/I,CAAAA,IAAI,EAAE;AAAA,MAAA,IAAAgJ,qBAAA,CAAA;AAChB,MAAA,OAAO,IAAI,CAAChJ,IAAI,CAAE,KAAAgJ,CAAAA,qBAAA,GAAG,IAAI,CAACH,gBAAgB,CAAC,IAAI,CAAC,MAAAG,IAAAA,IAAAA,qBAAA,uBAA3BA,qBAAA,CAA8BhJ,IAAI,CAAC,CAAA,CAAA;KAC3D;IACDyE,eAAe,EAAA,SAAAA,eAACwE,CAAAA,OAAO,EAAyB;AAAA,MAAA,IAAvBC,GAAI,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AAAA,MAAA,IAAEoE,6EAAS,EAAE,CAAA;AAC1C,MAAA,OAAOC,WAAW,CAACH,OAAO,EAAEC,GAAG,EAAEC,MAAM,CAAC,CAAA;KAC3C;IACDE,WAAW,EAAA,SAAAA,cAA4D;AAAA,MAAA,IAAAC,sBAAA,CAAA;AAAA,MAAA,IAA3DC,0EAAM,EAAE,CAAA;AAAA,MAAA,IAAEL,GAAI,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AAAA,MAAA,IAAEoE,MAAK,GAAApE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAI,EAAE,CAAA;AAAA,MAAA,IAAEyE,iBAAkB,GAAAzE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,IAAI,CAAA;MACjE,IAAM0E,SAAQ,GAAI,IAAI,CAACC,IAAI,CAACR,GAAG,CAAA,IAAK,CAAC,CAACC,MAAM,CAACD,GAAG,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;MAC/D,IAAAC,KAAA,GAAoE,IAAI,CAACb,aAAa,CAAC,WAAW,CAAA,KAAA,CAAAO,sBAAA,GAAK,IAAI,CAAC3G,eAAe,cAAA2G,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,sBAAA,CAAsBhJ,SAAU,CAAG,IAAA,EAAE;QAAAuJ,mBAAA,GAAAD,KAAA,CAApIE,aAAc;AAAdA,QAAAA,aAAc,GAAAD,mBAAA,KAAE,KAAA,CAAA,GAAA,IAAI,GAAAA,mBAAA;QAAAE,gBAAA,GAAAH,KAAA,CAAEtE,UAAU;AAAE0E,QAAAA,aAAc,GAAAD,gBAAA,KAAE,KAAA,CAAA,GAAA,KAAM,GAAAA,gBAAA,CAAA;AAChE,MAAA,IAAME,SAAST,iBAAkB,GAAGC,SAAQ,GAAI,IAAI,CAACnD,YAAY,CAAC,IAAI,CAAC4D,gBAAgB,EAAEhB,GAAG,EAAEC,MAAM,CAAA,GAAI,IAAI,CAACxE,aAAa,CAAC,IAAI,CAACuF,gBAAgB,EAAEhB,GAAG,EAAEC,MAAM,CAAC,GAAI9I,SAAS,CAAA;MAC3K,IAAM8J,IAAK,GAAEV,SAAQ,GAAIpJ,SAAQ,GAAI,IAAI,CAAC+J,UAAU,CAACb,GAAG,EAAE,IAAI,CAACW,gBAAgB,EAAEhB,GAAG,EAAAtF,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAOuF,MAAM,CAAA,EAAA,EAAA,EAAA;QAAEc,MAAM,EAAEA,MAAK,IAAK,EAAC;AAAE,OAAA,CAAC,CAAC,CAAA;AAC1H,MAAA,IAAMI,QAAS,GAAE,IAAI,CAACC,cAAc,CAACpB,GAAG,CAAC,CAAA;AAEzC,MAAA,OAAOY,aAAc,IAAI,CAACA,iBAAiBK,IAAI,GAAKH,aAAc,GAAE,IAAI,CAACpF,WAAW,CAACoF,aAAa,EAAEC,MAAM,EAAEE,IAAI,EAAEE,QAAQ,CAAA,GAAAzG,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAASqG,EAAAA,EAAAA,MAAM,GAAKE,IAAI,CAAA,EAAKE,QAAS,CAAC,GAAAzG,aAAA,CAAAA,aAAA,KAASuG,IAAI,CAAA,EAAKE,SAAU,CAAA;KAChM;IACDD,UAAU,EAAA,SAAAA,aAAoB;AAAA,MAAA,IAAnBb,0EAAM,EAAE,CAAA;MAAA,KAAAgB,IAAAA,KAAA,GAAAxF,SAAA,CAAAC,MAAA,EAAKC,IAAI,OAAAC,KAAA,CAAAqF,KAAA,GAAAA,CAAAA,GAAAA,KAAA,WAAAC,KAAA,GAAA,CAAA,EAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA,EAAA,EAAA;AAAJvF,QAAAA,IAAI,CAAAuF,KAAA,GAAAzF,CAAAA,CAAAA,GAAAA,SAAA,CAAAyF,KAAA,CAAA,CAAA;AAAA,OAAA;MACxB,OAAOlF,UAAU,CACb,IAAI,CAACf,MAAM,CAAAc,KAAA,CAAX,IAAI,EAAA,CAAQ,IAAI,CAACb,MAAM,CAAC+E,GAAG,EAAE,IAAI,CAACkB,KAAK,CAAC,CAAAlH,CAAAA,MAAA,CAAK0B,IAAI,CAAC,CAAA;AAAE;AACpD,MAAA,IAAI,CAACV,MAAM,CAAAc,KAAA,CAAX,IAAI,EAAA,CAAQ,IAAI,CAACqF,SAAS,CAAAnH,CAAAA,MAAA,CAAK0B,IAAI,EAAE;OACxC,CAAA;KACJ;IACDqF,cAAc,EAAA,SAAAA,iBAAW;MAAA,IAAAK,SAAA,EAAAC,SAAA,CAAA;AAAA,MAAA,IAAV1B,0EAAM,EAAE,CAAA;MACnB,IAAM2B,aAAY,GAAI,UAAU,CAAA;MAChC,IAAMC,aAAa5B,GAAE,KAAM,MAAK,IAAK3C,UAAU,EAAAoE,SAAA,GAAC,IAAI,CAACzK,EAAE,cAAAyK,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,SAAA,CAAU,iBAAiB,CAAC,CAAC,CAAA;AAE7E,MAAA,OACIzB,GAAI,KAAI,YAAW,IAAAtF,aAAA,CAAAA,aAAA,CAAA,EAAA,EACXsF,QAAQ,MAAK,IAAAtF,aAAA,CAAAmH,eAAA,QAAAxH,MAAA,CACTsH,aAAa,EAAA,MAAA,CAAA,EAASrH,UAAU,CAACsH,UAAS,GAAAF,CAAAA,SAAA,GAAI,IAAI,CAAC1K,EAAE,MAAA,IAAA,IAAA0K,SAAA,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAA,CAAU,iBAAiB,CAAE,GAAE,IAAI,CAACtI,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAC,GAC9F8K,UAAS,IAAAC,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAxH,MAAA,CAAWsH,aAAa,EAAWrH,QAAAA,CAAAA,EAAAA,UAAU,CAAC,IAAI,CAAClB,CAAC,CAACnC,IAAI,CAACH,IAAI,EAAG,CACjF,CAAA+K,EAAAA,EAAAA,EAAAA,eAAA,CAAAxH,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACGsH,aAAa,EAAA,SAAA,CAAA,EAAYrH,UAAU,CAAC0F,GAAG,CAAA,CAC/C,CAAA,CAAA;KAEP;IACDgB,gBAAgB,EAAA,SAAAA,mBAAU;MACtB,IAAM3H,KAAM,GAAE,IAAI,CAACkC,eAAe,CAAAY,KAAA,CAApB,IAAI,EAAAN,SAAwB,CAAC,CAAA;MAE3C,OAAOiG,QAAQ,CAACzI,KAAK,CAAE,IAAG0I,OAAO,CAAC1I,KAAK,CAAA,GAAI;QAAE,OAAOA,EAAAA,KAAAA;AAAM,OAAE,GAAEA,KAAK,CAAA;KACtE;IACDiC,MAAM,EAAA,SAAAA,MAACtE,CAAAA,EAAE,EAAsB;AAAA,MAAA,IAAAgL,MAAA,GAAA,IAAA,CAAA;AAAA,MAAA,IAApBhC,GAAE,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAI,EAAE,CAAA;MAAA,IAAE0D,QAAQ,GAAA1D,SAAA,CAAAC,MAAA,GAAAD,CAAAA,GAAAA,SAAA,MAAA1E,SAAA,CAAA;AACzB,MAAA,IAAM8K,WAAW,SAAXA,SAAY5I,KAAK,EAA2B;AAAA,QAAA,IAAA6I,KAAA,CAAA;AAAA,QAAA,IAAzBC,YAAa,GAAAtG,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,KAAK,CAAA;QACzC,IAAMuG,gBAAgB7C,QAAO,GAAIA,QAAQ,CAAClG,KAAK,CAAA,GAAIA,KAAK,CAAA;AACxD,QAAA,IAAMgJ,IAAK,GAAE/H,UAAU,CAAC0F,GAAG,CAAC,CAAA;AAC5B,QAAA,IAAMsC,KAAM,GAAEhI,UAAU,CAAC0H,MAAI,CAACT,KAAK,CAAC,CAAA;AAEpC,QAAA,OAAA,CAAAW,KAAA,GAAQC,eAAgBE,IAAG,KAAMC,KAAM,GAAEF,aAAa,KAAbA,IAAAA,IAAAA,aAAa,KAAbA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAGC,IAAI,CAAA,GAAIlL,SAAS,GAAIiL,aAAa,KAAbA,IAAAA,IAAAA,aAAa,uBAAbA,aAAa,CAAGC,IAAI,CAAC,MAAAH,IAAAA,IAAAA,KAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAA,GAAKE,aAAa,CAAA;OACxH,CAAA;MAED,OAAOpL,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,IAAAA,EAAE,CAAEuL,cAAc,CAAC,QAAQ,CAAA,GAC5B;AACIrJ,QAAAA,MAAM,EAAElC,EAAE,CAAC,QAAQ,CAAC;AACpBmC,QAAAA,aAAa,EAAE8I,QAAQ,CAACjL,EAAE,CAACmC,aAAa,CAAC;AACzCE,QAAAA,KAAK,EAAE4I,QAAQ,CAACjL,EAAE,CAACqC,KAAK,CAAA;AAC5B,OAAA,GACA4I,QAAQ,CAACjL,EAAE,EAAE,IAAI,CAAC,CAAA;KAC3B;IACDqE,MAAM,EAAA,SAAAA,OAACrE,EAAE,EAAEuI,QAAQ,EAAES,GAAG,EAAEC,MAAM,EAAE;AAC9B,MAAA,IAAMtE,EAAC,GAAI,SAALA,EAACA,CAAKtC,KAAK,EAAA;AAAA,QAAA,OAAKkG,QAAQ,CAAClG,KAAK,EAAE2G,GAAG,EAAEC,MAAM,CAAC,CAAA;AAAA,OAAA,CAAA;MAElD,IAAIjJ,EAAE,KAAFA,IAAAA,IAAAA,EAAE,KAAFA,KAAAA,CAAAA,IAAAA,EAAE,CAAEuL,cAAc,CAAC,QAAQ,CAAC,EAAE;AAAA,QAAA,IAAAC,sBAAA,CAAA;QAC9B,IAAAC,KAAA,GAAoEzL,EAAE,CAAC,QAAQ,CAAA,KAAA,CAAAwL,sBAAA,GAAK,IAAI,CAAC/I,eAAe,MAAA,IAAA,IAAA+I,sBAAA,KAApBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAsBpL,SAAU,CAAA,IAAG,EAAE;UAAAsL,mBAAA,GAAAD,KAAA,CAAjH7B,aAAY;AAAZA,UAAAA,aAAY,GAAA8B,mBAAA,KAAI,KAAA,CAAA,GAAA,IAAI,GAAAA,mBAAA;UAAAC,gBAAA,GAAAF,KAAA,CAAErG,UAAU;AAAE0E,UAAAA,aAAY,GAAA6B,gBAAA,KAAI,KAAA,CAAA,GAAA,KAAM,GAAAA,gBAAA,CAAA;AAChE,QAAA,IAAMxJ,aAAc,GAAEwC,EAAE,CAAC3E,EAAE,CAACmC,aAAa,CAAC,CAAA;AAC1C,QAAA,IAAME,KAAM,GAAEsC,EAAE,CAAC3E,EAAE,CAACqC,KAAK,CAAC,CAAA;AAE1B,QAAA,IAAIF,aAAc,KAAIhC,SAAU,IAAGkC,KAAI,KAAMlC,SAAS,EAAE,OAAOA,SAAS,CAAA,KACnE,IAAI2K,QAAQ,CAACzI,KAAK,CAAC,EAAE,OAAOA,KAAK,CAAA,KACjC,IAAIyI,QAAQ,CAAC3I,aAAa,CAAC,EAAE,OAAOA,aAAa,CAAA;AAEtD,QAAA,OAAOyH,aAAY,IAAM,CAACA,aAAY,IAAKvH,KAAO,GAAGyH,aAAc,GAAE,IAAI,CAACpF,WAAW,CAACoF,aAAa,EAAE3H,aAAa,EAAEE,KAAK,CAAE,GAAAqB,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAOvB,aAAa,CAAA,EAAKE,KAAM,CAAC,GAAIA,KAAK,CAAA;AACxK,OAAA;MAEA,OAAOsC,EAAE,CAAC3E,EAAE,CAAC,CAAA;KAChB;AACDoG,IAAAA,YAAY,WAAAA,YAACmC,CAAAA,QAAQ,EAAES,GAAG,EAAEC,MAAM,EAAE;AAChC,MAAA,OAAO,IAAI,CAAC5E,MAAM,CAAC,IAAI,CAACuH,QAAQ,EAAErD,QAAQ,EAAES,GAAG,EAAEC,MAAM,CAAC,CAAA;KAC3D;AACDxE,IAAAA,aAAa,WAAAA,aAAC8D,CAAAA,QAAQ,EAAES,GAAG,EAAEC,MAAM,EAAE;AACjC,MAAA,OAAO,IAAI,CAAC5E,MAAM,CAAC,IAAI,CAACwH,SAAS,EAAEtD,QAAQ,EAAES,GAAG,EAAEC,MAAM,CAAC,CAAA;KAC5D;IACD6C,GAAG,EAAA,SAAAA,MAAwB;AAAA,MAAA,IAAvB9C,GAAE,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAI,EAAE,CAAA;AAAA,MAAA,IAAEoE,6EAAS,EAAE,CAAA;MACrB,OAAO,IAAI,CAACE,WAAW,CAAC,IAAI,CAACnJ,EAAE,EAAEgJ,GAAG,EAAAtF,aAAA,CAAAA,aAAA,KAAO,IAAI,CAACC,OAAO,CAAKsF,EAAAA,MAAK,CAAG,CAAC,CAAA;KACxE;IACD8C,IAAI,EAAA,SAAAA,OAAwB;AAAA,MAAA,IAAvB/C,GAAE,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAI,EAAE,CAAA;AAAA,MAAA,IAAEoE,6EAAS,EAAE,CAAA;AACtB;AACA,MAAA,OAAO7D,UAAU,CAAC,IAAI,CAAC4G,gBAAgB,EAAE,IAAI,CAACF,GAAG,CAAC9C,GAAG,EAAEC,MAAM,CAAC,CAAC,CAAA;KAClE;IACDgD,IAAI,EAAA,SAAAA,OAAkC;AAAA,MAAA,IAAjC5C,GAAE,GAAAxE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAI,EAAE,CAAA;AAAA,MAAA,IAAEmE,GAAI,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AAAA,MAAA,IAAEoE,MAAO,GAAApE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;MAChC,OAAO,IAAI,CAACsE,WAAW,CAACE,GAAG,EAAEL,GAAG,EAAAtF,aAAA,CAAA;AAAIkF,QAAAA,QAAQ,EAAE,IAAA;OAASK,EAAAA,MAAK,CAAK,EAAA,KAAK,CAAC,CAAA;KAC1E;IACDiD,EAAE,EAAA,SAAAA,KAAwB;AAAA,MAAA,IAAvBlD,GAAI,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AAAA,MAAA,IAAEoE,6EAAS,EAAE,CAAA;AACpB,MAAA,OAAO,CAAC,IAAI,CAACtI,UAAS,GAAI,IAAI,CAAC4D,eAAe,CAAC,IAAI,CAACyB,MAAM,CAACmG,OAAO,EAAEnD,GAAG,EAAAtF,aAAA,CAAAA,aAAA,CAAO,EAAA,EAAA,IAAI,CAACC,OAAO,CAAKsF,EAAAA,OAAQ,CAAA,GAAI9I,SAAS,CAAA;KACvH;IACDiM,EAAE,EAAA,SAAAA,KAAqC;AAAA,MAAA,IAApCpD,GAAI,GAAAnE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AAAA,MAAA,IAAEwH,IAAK,GAAAxH,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,IAAI,CAAA;AAAA,MAAA,IAAEoE,MAAO,GAAApE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAA1E,SAAA,GAAA0E,SAAA,CAAA,CAAA,CAAA,GAAE,EAAE,CAAA;AACjC,MAAA,IAAIwH,IAAI,EAAE;QACN,IAAMpC,IAAK,GAAE,IAAI,CAAC1F,eAAe,CAAC,IAAI,CAACyB,MAAM,CAACsG,YAAY,EAAEtD,GAAG,EAAAtF,aAAA,CAAAA,aAAA,CAAO,EAAA,EAAA,IAAI,CAACC,OAAO,CAAA,EAAKsF,MAAK,CAAG,CAAC,CAAA;QAChG,IAAMsD,OAAO,IAAI,CAAChI,eAAe,CAAC0B,kBAAkB,CAACqG,YAAY,EAAEtD,GAAG,EAAAtF,aAAA,CAAAA,aAAA,CAAO,EAAA,EAAA,IAAI,CAACC,OAAO,CAAA,EAAKsF,MAAO,CAAC,CAAC,CAAA;AAEvG,QAAA,OAAO,CAACsD,IAAI,EAAEtC,IAAI,CAAC,CAAA;AACvB,OAAA;AAEA,MAAA,OAAO9J,SAAS,CAAA;AACpB,KAAA;GACH;AACDqM,EAAAA,QAAQ,EAAE;IACNZ,QAAQ,EAAA,SAAAA,WAAG;AAAA,MAAA,IAAAa,sBAAA;QAAAC,MAAA,GAAA,IAAA,CAAA;AACP,MAAA,OAAO,IAAI,CAACpI,MAAM,EAAAmI,sBAAA,GAAC,IAAI,CAAChK,eAAe,cAAAgK,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,sBAAA,CAAsBzM,EAAE,EAAEG,SAAS,EAAE,UAACkC,KAAK,EAAA;QAAA,OAAKsK,OAAO,CAACtK,KAAK,EAAE;AAAEuG,UAAAA,QAAQ,EAAE8D,MAAAA;AAAK,SAAC,CAAC,CAAA;OAAC,CAAA,CAAA;KACzG;IACDb,SAAS,EAAA,SAAAA,YAAG;AAAA,MAAA,IAAAe,sBAAA;QAAAC,MAAA,GAAA,IAAA,CAAA;AACR,MAAA,OAAO,IAAI,CAACvI,MAAM,EAAAsI,sBAAA,GAAC,IAAI,CAACnK,eAAe,cAAAmK,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,sBAAA,CAAsB5M,EAAE,EAAEG,SAAS,EAAE,UAACkC,KAAK,EAAA;AAAA,QAAA,OAAKwK,MAAI,CAACtI,eAAe,CAAClC,KAAK,EAAEwK,MAAI,CAACtC,KAAK,EAAA7G,aAAA,CAAA,EAAA,EAAOmJ,MAAI,CAAClJ,OAAQ,CAAC,CAAE,IAAGgJ,OAAO,CAACtK,KAAK,EAAAqB,aAAA,CAAA,EAAA,EAAOmJ,MAAI,CAAClJ,OAAQ,CAAC,CAAC,CAAA;OAAC,CAAA,CAAA;KAC1K;IACDhD,UAAU,EAAA,SAAAA,aAAG;AAAA,MAAA,IAAAmM,sBAAA,CAAA;MACT,OAAO,IAAI,CAACzM,QAAS,KAAIF,YAAY,IAAI,CAACE,qCAAW,IAAI,CAACoC,eAAe,MAAA,IAAA,IAAAqK,sBAAA,KAApBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAsBzM,QAAQ,CAAA;KACtF;IACD0M,MAAM,EAAA,SAAAA,SAAG;AAAA,MAAA,IAAAC,sBAAA,CAAA;MACL,OAAAA,CAAAA,sBAAA,GAAO,IAAI,CAACvK,eAAe,cAAAuK,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAApBA,sBAAA,CAAsBC,KAAK,CAAA;KACrC;IACDjH,MAAM,EAAA,SAAAA,SAAG;MACL,OAAAtC,aAAA,CAAAA,aAAA,CAAA;AAASyI,QAAAA,OAAO,EAAEhM,SAAS;AAAEmM,QAAAA,YAAY,EAAEnM,SAAS;AAAEmG,QAAAA,IAAI,EAAE,SAAAA,IAAA,GAAM,EAAE;AAAEb,QAAAA,OAAO,EAAE,SAAAA,OAAA,GAAM,EAAE;AAAEwB,QAAAA,SAAS,EAAE,SAAAA,SAAA,GAAM,EAAC;AAAC,OAAA,EAAK,CAAC,IAAI,CAAC0B,gBAAgB,CAAC,IAAI,CAAE,IAAG,EAAE,EAAE3C,MAAM,CAAA,EAAK,IAAI,CAAC9B,QAAQ,CAACgC;KACjL;IACDR,aAAa,EAAA,SAAAA,gBAAG;AAAA,MAAA,IAAAwH,sBAAA,CAAA;MACZ,OAAO;AAAEC,QAAAA,KAAK,GAAAD,sBAAA,GAAE,IAAI,CAACzK,eAAe,cAAAyK,sBAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,sBAAA,GAApBA,sBAAA,CAAsBE,GAAG,cAAAF,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAzBA,sBAAA,CAA2BC,KAAAA;OAAO,CAAA;KACrD;IACD1K,eAAe,EAAA,SAAAA,kBAAG;AAAA,MAAA,IAAA4K,gBAAA,CAAA;MACd,OAAAA,CAAAA,gBAAA,GAAO,IAAI,CAAC1K,SAAS,cAAA0K,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,gBAAA,CAAgBzK,MAAM,CAAA;KAChC;IACD2H,KAAK,EAAA,SAAAA,QAAG;AACJ,MAAA,OAAO,IAAI,CAACrG,QAAQ,CAACC,QAAS,IAAG,IAAI,CAAC/B,CAAC,CAACnC,IAAI,CAACH,IAAI,CAAA;KACpD;IACD6D,OAAO,EAAA,SAAAA,UAAG;MACN,IAAM2J,cAAe,GAAE,IAAI,CAAC3E,gBAAgB,CAAC,IAAI,CAAE,IAAG,IAAI,CAAC4E,OAAO,CAAA;MAElE,OAAO;AACH3E,QAAAA,QAAQ,EAAE,IAAI;QACd7I,KAAK,EAAE,IAAI,CAACyN,MAAM;QAClBC,KAAK,EAAE,IAAI,CAACC,KAAK;QACjBC,KAAK,EAAE,IAAI,CAACC,MAAM;AAClBC,QAAAA,MAAM,EAAE;AACJjF,UAAAA,QAAQ,EAAE0E,cAAc;AACxBvN,UAAAA,KAAK,EAAEuN,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAdA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAc,CAAEE,MAAM;AAC7BC,UAAAA,KAAK,EAAEH,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAdA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAc,CAAEI,KAAK;AAC5BC,UAAAA,KAAK,EAAEL,cAAc,KAAA,IAAA,IAAdA,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,cAAc,CAAEM,MAAAA;AAC3B,SAAA;OACH,CAAA;KACJ;IACDpD,SAAS,EAAA,SAAAA,YAAG;AACR,MAAA,OAAOtK,MAAM,CAAC4N,OAAO,CAAC,IAAI,CAACF,MAAK,IAAK,EAAE,CAAA,CAClCG,MAAM,CAAC,UAAAC,MAAA,EAAA;AAAA,QAAA,IAAAC,MAAA,GAAAC,cAAA,CAAAF,MAAA,EAAA,CAAA,CAAA;AAAEhF,UAAAA,GAAG,GAAAiF,MAAA,CAAA,CAAA,CAAA,CAAA;QAAA,OAAMjF,GAAG,aAAHA,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAHA,GAAG,CAAEmF,UAAU,CAAC,KAAK,CAAC,CAAA;AAAA,OAAA,CAAA,CACxCC,MAAM,CAAC,UAACC,MAAM,EAAAC,MAAA,EAAmB;AAAA,QAAA,IAAAC,MAAA,GAAAL,cAAA,CAAAI,MAAA,EAAA,CAAA,CAAA;AAAhBtF,UAAAA,GAAG,GAAAuF,MAAA,CAAA,CAAA,CAAA;AAAElM,UAAAA,KAAK,GAAAkM,MAAA,CAAA,CAAA,CAAA,CAAA;AACxB,QAAA,IAAAC,UAAA,GAAoBxF,GAAG,CAACS,KAAK,CAAC,GAAG,CAAC;UAAAgF,WAAA,GAAAC,QAAA,CAAAF,UAAA,CAAA;UAAtBG,IAAI,GAAAF,WAAA,CAAAG,KAAA,CAAA,CAAA,CAAA,CAAA;AAEhBD,QAAAA,IAAI,KAAJA,IAAAA,IAAAA,IAAI,KAAJA,KAAAA,CAAAA,IAAAA,IAAI,CAAEP,MAAM,CAAC,UAACS,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,EAAK;UAClD,CAACH,UAAU,CAACC,SAAS,MAAMD,UAAU,CAACC,SAAS,CAAA,GAAIC,UAAUC,KAAK,CAAClK,SAAS,CAAA,GAAIzC,QAAQ,EAAE,CAAC,CAAA;UAE3F,OAAOwM,UAAU,CAACC,SAAS,CAAC,CAAA;SAC/B,EAAET,MAAM,CAAC,CAAA;AAEV,QAAA,OAAOA,MAAM,CAAA;OAChB,EAAE,EAAE,CAAC,CAAA;KACb;IACDrC,gBAAgB,EAAA,SAAAA,mBAAG;AACf,MAAA,OAAO9L,MAAM,CAAC4N,OAAO,CAAC,IAAI,CAACF,MAAK,IAAK,EAAE,CAAA,CAClCG,MAAM,CAAC,UAAAkB,MAAA,EAAA;AAAA,QAAA,IAAAC,MAAA,GAAAhB,cAAA,CAAAe,MAAA,EAAA,CAAA,CAAA;AAAEjG,UAAAA,GAAG,GAAAkG,MAAA,CAAA,CAAA,CAAA,CAAA;QAAA,OAAM,EAAClG,GAAG,KAAA,IAAA,IAAHA,GAAG,KAAA,KAAA,CAAA,IAAHA,GAAG,CAAEmF,UAAU,CAAC,KAAK,CAAC,CAAA,CAAA;AAAA,OAAA,CAAA,CACzCC,MAAM,CAAC,UAACe,GAAG,EAAAC,MAAA,EAAmB;AAAA,QAAA,IAAAC,MAAA,GAAAnB,cAAA,CAAAkB,MAAA,EAAA,CAAA,CAAA;AAAhBpG,UAAAA,GAAG,GAAAqG,MAAA,CAAA,CAAA,CAAA;AAAEhN,UAAAA,KAAK,GAAAgN,MAAA,CAAA,CAAA,CAAA,CAAA;AACrBF,QAAAA,GAAG,CAACnG,GAAG,CAAE,GAAE3G,KAAK,CAAA;AAEhB,QAAA,OAAO8M,GAAG,CAAA;OACb,EAAE,EAAE,CAAC,CAAA;KACb;IACD3L,aAAa,EAAA,SAAAA,gBAAG;MACZ,OAAO8L,iBAAiB,CAAC,IAAI,CAAC,CAAA;AAClC,KAAA;AACJ,GAAA;AACJ,CAAC;;;;"}