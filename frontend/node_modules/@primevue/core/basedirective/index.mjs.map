{"version":3,"file":"index.mjs","sources":["../../src/basedirective/BaseDirective.js"],"sourcesContent":["import { Theme, ThemeService } from '@primeuix/styled';\nimport { getKeyValue, isArray, isEmpty, isFunction, isObject, isString, resolve, toCapitalCase, toFlatCase } from '@primeuix/utils/object';\nimport { uuid } from '@primeuix/utils/uuid';\nimport Base from '@primevue/core/base';\nimport BaseStyle from '@primevue/core/base/style';\nimport PrimeVueService from '@primevue/core/service';\nimport { mergeProps } from 'vue';\n\nconst BaseDirective = {\n    _getMeta: (...args) => [isObject(args[0]) ? undefined : args[0], resolve(isObject(args[0]) ? args[0] : args[1])],\n    _getConfig: (binding, vnode) => (binding?.instance?.$primevue || vnode?.ctx?.appContext?.config?.globalProperties?.$primevue)?.config,\n    _getOptionValue: getKeyValue,\n    _getPTValue: (instance = {}, obj = {}, key = '', params = {}, searchInDefaultPT = true) => {\n        const getValue = (...args) => {\n            const value = BaseDirective._getOptionValue(...args);\n\n            return isString(value) || isArray(value) ? { class: value } : value;\n        };\n\n        const { mergeSections = true, mergeProps: useMergeProps = false } = instance.binding?.value?.ptOptions || instance.$primevueConfig?.ptOptions || {};\n        const global = searchInDefaultPT ? BaseDirective._useDefaultPT(instance, instance.defaultPT(), getValue, key, params) : undefined;\n        const self = BaseDirective._usePT(instance, BaseDirective._getPT(obj, instance.$name), getValue, key, { ...params, global: global || {} });\n        const datasets = BaseDirective._getPTDatasets(instance, key);\n\n        return mergeSections || (!mergeSections && self) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, global, self, datasets) : { ...global, ...self, ...datasets }) : { ...self, ...datasets };\n    },\n    _getPTDatasets(instance = {}, key = '') {\n        const datasetPrefix = 'data-pc-';\n\n        return {\n            ...(key === 'root' && { [`${datasetPrefix}name`]: toFlatCase(instance.$name) }),\n            [`${datasetPrefix}section`]: toFlatCase(key)\n        };\n    },\n    _getPT: (pt, key = '', callback) => {\n        const getValue = (value) => {\n            const computedValue = callback ? callback(value) : value;\n            const _key = toFlatCase(key);\n\n            return computedValue?.[_key] ?? computedValue;\n        };\n\n        return pt?.hasOwnProperty('_usept')\n            ? {\n                  _usept: pt['_usept'],\n                  originalValue: getValue(pt.originalValue),\n                  value: getValue(pt.value)\n              }\n            : getValue(pt);\n    },\n    _usePT: (instance = {}, pt, callback, key, params) => {\n        const fn = (value) => callback(value, key, params);\n\n        if (pt?.hasOwnProperty('_usept')) {\n            const { mergeSections = true, mergeProps: useMergeProps = false } = pt['_usept'] || instance.$primevueConfig?.ptOptions || {};\n            const originalValue = fn(pt.originalValue);\n            const value = fn(pt.value);\n\n            if (originalValue === undefined && value === undefined) return undefined;\n            else if (isString(value)) return value;\n            else if (isString(originalValue)) return originalValue;\n\n            return mergeSections || (!mergeSections && value) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, originalValue, value) : { ...originalValue, ...value }) : value;\n        }\n\n        return fn(pt);\n    },\n    _useDefaultPT: (instance = {}, defaultPT = {}, callback, key, params) => {\n        return BaseDirective._usePT(instance, defaultPT, callback, key, params);\n    },\n    _loadStyles: (el, binding, vnode) => {\n        const config = BaseDirective._getConfig(binding, vnode);\n        const useStyleOptions = { nonce: config?.csp?.nonce };\n\n        BaseDirective._loadCoreStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadThemeStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadScopedThemeStyles(el.$instance, useStyleOptions);\n\n        BaseDirective._themeChangeListener(() => BaseDirective._loadThemeStyles(el.$instance, useStyleOptions));\n    },\n    _loadCoreStyles(instance = {}, useStyleOptions) {\n        if (!Base.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            BaseStyle.loadCSS(useStyleOptions);\n            instance.$style?.loadCSS(useStyleOptions);\n\n            Base.setLoadedStyleName(instance.$style.name);\n        }\n    },\n    _loadThemeStyles: (instance = {}, useStyleOptions) => {\n        if (instance?.isUnstyled() || instance?.theme?.() === 'none') return;\n\n        // common\n        if (!Theme.isStyleNameLoaded('common')) {\n            const { primitive, semantic, global, style } = instance.$style?.getCommonTheme?.() || {};\n\n            BaseStyle.load(primitive?.css, { name: 'primitive-variables', ...useStyleOptions });\n            BaseStyle.load(semantic?.css, { name: 'semantic-variables', ...useStyleOptions });\n            BaseStyle.load(global?.css, { name: 'global-variables', ...useStyleOptions });\n            BaseStyle.loadTheme({ name: 'global-style', ...useStyleOptions }, style);\n\n            Theme.setLoadedStyleName('common');\n        }\n\n        // directive\n        if (!Theme.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            const { css, style } = instance.$style?.getDirectiveTheme?.() || {};\n\n            instance.$style?.load(css, { name: `${instance.$style.name}-variables`, ...useStyleOptions });\n            instance.$style?.loadTheme({ name: `${instance.$style.name}-style`, ...useStyleOptions }, style);\n\n            Theme.setLoadedStyleName(instance.$style.name);\n        }\n\n        // layer order\n        if (!Theme.isStyleNameLoaded('layer-order')) {\n            const layerOrder = instance.$style?.getLayerOrderThemeCSS?.();\n\n            BaseStyle.load(layerOrder, { name: 'layer-order', first: true, ...useStyleOptions });\n\n            Theme.setLoadedStyleName('layer-order');\n        }\n    },\n    _loadScopedThemeStyles(instance = {}, useStyleOptions) {\n        const preset = instance.preset();\n\n        if (preset && instance.$attrSelector) {\n            const { css } = instance.$style?.getPresetTheme?.(preset, `[${instance.$attrSelector}]`) || {};\n            const scopedStyle = instance.$style?.load(css, { name: `${instance.$attrSelector}-${instance.$style.name}`, ...useStyleOptions });\n\n            instance.scopedStyleEl = scopedStyle.el;\n        }\n    },\n    _themeChangeListener(callback = () => {}) {\n        Base.clearLoadedStyleNames();\n        ThemeService.on('theme:change', callback);\n    },\n    _hook: (directiveName, hookName, el, binding, vnode, prevVnode) => {\n        const name = `on${toCapitalCase(hookName)}`;\n        const config = BaseDirective._getConfig(binding, vnode);\n        const instance = el?.$instance;\n        const selfHook = BaseDirective._usePT(instance, BaseDirective._getPT(binding?.value?.pt, directiveName), BaseDirective._getOptionValue, `hooks.${name}`);\n        const defaultHook = BaseDirective._useDefaultPT(instance, config?.pt?.directives?.[directiveName], BaseDirective._getOptionValue, `hooks.${name}`);\n        const options = { el, binding, vnode, prevVnode };\n\n        selfHook?.(instance, options);\n        defaultHook?.(instance, options);\n    },\n    _mergeProps(instance = {}, fn, ...args) {\n        return isFunction(fn) ? fn(...args) : mergeProps(...args);\n    },\n    _extend: (name, options = {}) => {\n        const handleHook = (hook, el, binding, vnode, prevVnode) => {\n            el._$instances = el._$instances || {};\n\n            const config = BaseDirective._getConfig(binding, vnode);\n            const $prevInstance = el._$instances[name] || {};\n            const $options = isEmpty($prevInstance) ? { ...options, ...options?.methods } : {};\n\n            el._$instances[name] = {\n                ...$prevInstance,\n                /* new instance variables to pass in directive methods */\n                $name: name,\n                $host: el,\n                $binding: binding,\n                $modifiers: binding?.modifiers,\n                $value: binding?.value,\n                $el: $prevInstance['$el'] || el || undefined,\n                $style: { classes: undefined, inlineStyles: undefined, load: () => {}, loadCSS: () => {}, loadTheme: () => {}, ...options?.style },\n                $primevueConfig: config,\n                $attrSelector: el.$pd?.[name]?.attrSelector,\n                /* computed instance variables */\n                defaultPT: () => BaseDirective._getPT(config?.pt, undefined, (value) => value?.directives?.[name]),\n                isUnstyled: () => (el.$instance?.$binding?.value?.unstyled !== undefined ? el.$instance?.$binding?.value?.unstyled : config?.unstyled),\n                theme: () => el.$instance?.$primevueConfig?.theme,\n                preset: () => el.$instance?.$binding?.value?.dt,\n                /* instance's methods */\n                ptm: (key = '', params = {}) => BaseDirective._getPTValue(el.$instance, el.$instance?.$binding?.value?.pt, key, { ...params }),\n                ptmo: (obj = {}, key = '', params = {}) => BaseDirective._getPTValue(el.$instance, obj, key, params, false),\n                cx: (key = '', params = {}) => (!el.$instance?.isUnstyled() ? BaseDirective._getOptionValue(el.$instance?.$style?.classes, key, { ...params }) : undefined),\n                sx: (key = '', when = true, params = {}) => (when ? BaseDirective._getOptionValue(el.$instance?.$style?.inlineStyles, key, { ...params }) : undefined),\n                ...$options\n            };\n\n            el.$instance = el._$instances[name]; // pass instance data to hooks\n            el.$instance[hook]?.(el, binding, vnode, prevVnode); // handle hook in directive implementation\n            el[`$${name}`] = el.$instance; // expose all options with $<directive_name>\n            BaseDirective._hook(name, hook, el, binding, vnode, prevVnode); // handle hooks during directive uses (global and self-definition)\n\n            el.$pd ||= {};\n            el.$pd[name] = { ...el.$pd?.[name], name, instance: el.$instance };\n        };\n\n        const handleWatch = (el) => {\n            const watchers = el.$instance?.watch;\n\n            // for 'config'\n            watchers?.['config']?.call(el.$instance, el.$instance?.$primevueConfig);\n            PrimeVueService.on('config:change', ({ newValue, oldValue }) => watchers?.['config']?.call(el.$instance, newValue, oldValue));\n\n            // for 'config.ripple'\n            watchers?.['config.ripple']?.call(el.$instance, el.$instance?.$primevueConfig?.ripple);\n            PrimeVueService.on('config:ripple:change', ({ newValue, oldValue }) => watchers?.['config.ripple']?.call(el.$instance, newValue, oldValue));\n        };\n\n        return {\n            created: (el, binding, vnode, prevVnode) => {\n                el.$pd ||= {};\n                el.$pd[name] = { name, attrSelector: uuid('pd') };\n                handleHook('created', el, binding, vnode, prevVnode);\n            },\n            beforeMount: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('beforeMount', el, binding, vnode, prevVnode);\n                handleWatch(el);\n            },\n            mounted: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('mounted', el, binding, vnode, prevVnode);\n            },\n            beforeUpdate: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUpdate', el, binding, vnode, prevVnode);\n            },\n            updated: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('updated', el, binding, vnode, prevVnode);\n            },\n            beforeUnmount: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUnmount', el, binding, vnode, prevVnode);\n            },\n            unmounted: (el, binding, vnode, prevVnode) => {\n                el.$instance?.scopedStyleEl?.value?.remove();\n                handleHook('unmounted', el, binding, vnode, prevVnode);\n            }\n        };\n    },\n    extend: (...args) => {\n        const [name, options] = BaseDirective._getMeta(...args);\n\n        return {\n            extend: (..._args) => {\n                const [_name, _options] = BaseDirective._getMeta(..._args);\n\n                return BaseDirective.extend(_name, { ...options, ...options?.methods, ..._options });\n            },\n            ...BaseDirective._extend(name, options)\n        };\n    }\n};\n\nexport default BaseDirective;\n"],"names":["BaseDirective","_getMeta","isObject","arguments","length","undefined","resolve","_getConfig","binding","vnode","_ref","_binding$instance","_vnode$ctx","instance","$primevue","ctx","appContext","config","globalProperties","_getOptionValue","getKeyValue","_getPTValue","_instance$binding","_instance$$primevueCo","obj","key","params","searchInDefaultPT","getValue","value","apply","isString","isArray","_ref2","ptOptions","$primevueConfig","_ref2$mergeSections","mergeSections","_ref2$mergeProps","mergeProps","useMergeProps","global","_useDefaultPT","defaultPT","self","_usePT","_getPT","$name","_objectSpread","datasets","_getPTDatasets","_mergeProps","datasetPrefix","_defineProperty","concat","toFlatCase","pt","callback","_computedValue$_key","computedValue","_key","hasOwnProperty","_usept","originalValue","fn","_instance$$primevueCo2","_ref4","_ref4$mergeSections","_ref4$mergeProps","_loadStyles","el","_config$csp","useStyleOptions","nonce","csp","_loadCoreStyles","$instance","_loadThemeStyles","_loadScopedThemeStyles","_themeChangeListener","_instance$$style","_instance$$style2","Base","isStyleNameLoaded","$style","name","_instance$$style3","BaseStyle","loadCSS","setLoadedStyleName","_instance$theme","_instance$$style5","_instance$$style6","isUnstyled","theme","call","Theme","_instance$$style4","_instance$$style4$get","_ref5","getCommonTheme","primitive","semantic","style","load","css","loadTheme","_instance$$style7","_instance$$style7$get","_instance$$style8","_instance$$style9","_ref6","getDirectiveTheme","_instance$$style10","_instance$$style10$ge","layerOrder","getLayerOrderThemeCSS","first","preset","$attrSelector","_instance$$style11","_instance$$style11$ge","_instance$$style12","_ref7","getPresetTheme","scopedStyle","scopedStyleEl","clearLoadedStyleNames","ThemeService","on","_hook","directiveName","hookName","prevVnode","_binding$value","_config$pt","toCapitalCase","selfHook","defaultHook","directives","options","_len","args","Array","_key2","isFunction","_extend","handleHook","hook","_el$$pd","_el$$instance$hook","_el$$instance9","_el$$pd2","_$instances","$prevInstance","$options","isEmpty","methods","$host","$binding","$modifiers","modifiers","$value","$el","classes","inlineStyles","$pd","attrSelector","_value$directives","_el$$instance","_el$$instance2","unstyled","_el$$instance3","_el$$instance4","dt","ptm","_el$$instance5","ptmo","cx","_el$$instance6","_el$$instance7","sx","_el$$instance8","when","handleWatch","_el$$instance10","_watchers$config","_el$$instance11","_watchers$configRipp","_el$$instance12","watchers","watch","PrimeVueService","_ref8","_watchers$config2","newValue","oldValue","ripple","_ref9","_watchers$configRipp2","created","uuid","beforeMount","mounted","beforeUpdate","updated","beforeUnmount","unmounted","_el$$instance13","remove","extend","_BaseDirective$_getMe","_BaseDirective$_getMe2","_slicedToArray","_BaseDirective$_getMe3","_BaseDirective$_getMe4","_name","_options"],"mappings":"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"}