{"version":3,"file":"index.mjs","sources":["../../src/basedirective/BaseDirective.js"],"sourcesContent":["import { Theme, ThemeService } from '@primeuix/styled';\nimport { getKeyValue, isArray, isEmpty, isFunction, isObject, isString, resolve, toCapitalCase, toFlatCase } from '@primeuix/utils/object';\nimport Base from '@primevue/core/base';\nimport BaseStyle from '@primevue/core/base/style';\nimport PrimeVueService from '@primevue/core/service';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport { mergeProps } from 'vue';\n\nconst BaseDirective = {\n    _getMeta: (...args) => [isObject(args[0]) ? undefined : args[0], resolve(isObject(args[0]) ? args[0] : args[1])],\n    _getConfig: (binding, vnode) => (binding?.instance?.$primevue || vnode?.ctx?.appContext?.config?.globalProperties?.$primevue)?.config,\n    _getOptionValue: getKeyValue,\n    _getPTValue: (instance = {}, obj = {}, key = '', params = {}, searchInDefaultPT = true) => {\n        const getValue = (...args) => {\n            const value = BaseDirective._getOptionValue(...args);\n\n            return isString(value) || isArray(value) ? { class: value } : value;\n        };\n\n        const { mergeSections = true, mergeProps: useMergeProps = false } = instance.binding?.value?.ptOptions || instance.$primevueConfig?.ptOptions || {};\n        const global = searchInDefaultPT ? BaseDirective._useDefaultPT(instance, instance.defaultPT(), getValue, key, params) : undefined;\n        const self = BaseDirective._usePT(instance, BaseDirective._getPT(obj, instance.$name), getValue, key, { ...params, global: global || {} });\n        const datasets = BaseDirective._getPTDatasets(instance, key);\n\n        return mergeSections || (!mergeSections && self) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, global, self, datasets) : { ...global, ...self, ...datasets }) : { ...self, ...datasets };\n    },\n    _getPTDatasets(instance = {}, key = '') {\n        const datasetPrefix = 'data-pc-';\n\n        return {\n            ...(key === 'root' && { [`${datasetPrefix}name`]: toFlatCase(instance.$name) }),\n            [`${datasetPrefix}section`]: toFlatCase(key)\n        };\n    },\n    _getPT: (pt, key = '', callback) => {\n        const getValue = (value) => {\n            const computedValue = callback ? callback(value) : value;\n            const _key = toFlatCase(key);\n\n            return computedValue?.[_key] ?? computedValue;\n        };\n\n        return pt?.hasOwnProperty('_usept')\n            ? {\n                  _usept: pt['_usept'],\n                  originalValue: getValue(pt.originalValue),\n                  value: getValue(pt.value)\n              }\n            : getValue(pt);\n    },\n    _usePT: (instance = {}, pt, callback, key, params) => {\n        const fn = (value) => callback(value, key, params);\n\n        if (pt?.hasOwnProperty('_usept')) {\n            const { mergeSections = true, mergeProps: useMergeProps = false } = pt['_usept'] || instance.$primevueConfig?.ptOptions || {};\n            const originalValue = fn(pt.originalValue);\n            const value = fn(pt.value);\n\n            if (originalValue === undefined && value === undefined) return undefined;\n            else if (isString(value)) return value;\n            else if (isString(originalValue)) return originalValue;\n\n            return mergeSections || (!mergeSections && value) ? (useMergeProps ? BaseDirective._mergeProps(instance, useMergeProps, originalValue, value) : { ...originalValue, ...value }) : value;\n        }\n\n        return fn(pt);\n    },\n    _useDefaultPT: (instance = {}, defaultPT = {}, callback, key, params) => {\n        return BaseDirective._usePT(instance, defaultPT, callback, key, params);\n    },\n    _loadStyles: (el, binding, vnode) => {\n        const config = BaseDirective._getConfig(binding, vnode);\n        const useStyleOptions = { nonce: config?.csp?.nonce };\n\n        BaseDirective._loadCoreStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadThemeStyles(el.$instance, useStyleOptions);\n        BaseDirective._loadScopedThemeStyles(el.$instance, useStyleOptions);\n\n        BaseDirective._themeChangeListener(() => BaseDirective._loadThemeStyles(el.$instance, useStyleOptions));\n    },\n    _loadCoreStyles(instance = {}, useStyleOptions) {\n        if (!Base.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            BaseStyle.loadCSS(useStyleOptions);\n            instance.isUnstyled() && instance.$style?.loadCSS(useStyleOptions);\n\n            Base.setLoadedStyleName(instance.$style.name);\n        }\n    },\n    _loadThemeStyles: (instance = {}, useStyleOptions) => {\n        if (instance?.isUnstyled()) return;\n\n        // common\n        if (!Theme.isStyleNameLoaded('common')) {\n            const { primitive, semantic } = instance.$style?.getCommonTheme?.() || {};\n\n            BaseStyle.load(primitive?.css, { name: 'primitive-variables', ...useStyleOptions });\n            BaseStyle.load(semantic?.css, { name: 'semantic-variables', ...useStyleOptions });\n            BaseStyle.loadTheme({ name: 'global-style', ...useStyleOptions });\n\n            Theme.setLoadedStyleName('common');\n        }\n\n        // directive\n        if (!Theme.isStyleNameLoaded(instance.$style?.name) && instance.$style?.name) {\n            const { css } = instance.$style?.getDirectiveTheme?.() || {};\n\n            instance.$style?.load(css, { name: `${instance.$style.name}-variables`, ...useStyleOptions });\n            instance.$style?.loadTheme({ name: `${instance.$style.name}-style`, ...useStyleOptions });\n\n            Theme.setLoadedStyleName(instance.$style.name);\n        }\n\n        // layer order\n        if (!Theme.isStyleNameLoaded('layer-order')) {\n            const layerOrder = instance.$style?.getLayerOrderThemeCSS?.();\n\n            BaseStyle.load(layerOrder, { name: 'layer-order', first: true, ...useStyleOptions });\n\n            Theme.setLoadedStyleName('layer-order');\n        }\n    },\n    _loadScopedThemeStyles(instance = {}, useStyleOptions) {\n        const preset = instance.preset();\n\n        if (preset && instance.$attrSelector) {\n            const { css } = instance.$style?.getPresetTheme?.(preset, `[${instance.$attrSelector}]`) || {};\n            const scopedStyle = instance.$style?.load(css, { name: `${instance.$attrSelector}-${instance.$style.name}`, ...useStyleOptions });\n\n            instance.scopedStyleEl = scopedStyle.el;\n        }\n    },\n    _themeChangeListener(callback = () => {}) {\n        Base.clearLoadedStyleNames();\n        ThemeService.on('theme:change', callback);\n    },\n    _hook: (directiveName, hookName, el, binding, vnode, prevVnode) => {\n        const name = `on${toCapitalCase(hookName)}`;\n        const config = BaseDirective._getConfig(binding, vnode);\n        const instance = el?.$instance;\n        const selfHook = BaseDirective._usePT(instance, BaseDirective._getPT(binding?.value?.pt, directiveName), BaseDirective._getOptionValue, `hooks.${name}`);\n        const defaultHook = BaseDirective._useDefaultPT(instance, config?.pt?.directives?.[directiveName], BaseDirective._getOptionValue, `hooks.${name}`);\n        const options = { el, binding, vnode, prevVnode };\n\n        selfHook?.(instance, options);\n        defaultHook?.(instance, options);\n    },\n    _mergeProps(instance = {}, fn, ...args) {\n        return isFunction(fn) ? fn(...args) : mergeProps(...args);\n    },\n    _extend: (name, options = {}) => {\n        const handleHook = (hook, el, binding, vnode, prevVnode) => {\n            el._$instances = el._$instances || {};\n\n            const config = BaseDirective._getConfig(binding, vnode);\n            const $prevInstance = el._$instances[name] || {};\n            const $options = isEmpty($prevInstance) ? { ...options, ...options?.methods } : {};\n\n            el._$instances[name] = {\n                ...$prevInstance,\n                /* new instance variables to pass in directive methods */\n                $name: name,\n                $host: el,\n                $binding: binding,\n                $modifiers: binding?.modifiers,\n                $value: binding?.value,\n                $el: $prevInstance['$el'] || el || undefined,\n                $style: { classes: undefined, inlineStyles: undefined, load: () => {}, loadCSS: () => {}, loadTheme: () => {}, ...options?.style },\n                $primevueConfig: config,\n                $attrSelector: el.$attrSelector,\n                /* computed instance variables */\n                defaultPT: () => BaseDirective._getPT(config?.pt, undefined, (value) => value?.directives?.[name]),\n                isUnstyled: () => (el.$instance?.$binding?.value?.unstyled !== undefined ? el.$instance?.$binding?.value?.unstyled : config?.unstyled),\n                theme: () => el.$instance?.$primevueConfig?.theme,\n                preset: () => el.$instance?.$binding?.value?.dt,\n                /* instance's methods */\n                ptm: (key = '', params = {}) => BaseDirective._getPTValue(el.$instance, el.$instance?.$binding?.value?.pt, key, { ...params }),\n                ptmo: (obj = {}, key = '', params = {}) => BaseDirective._getPTValue(el.$instance, obj, key, params, false),\n                cx: (key = '', params = {}) => (!el.$instance?.isUnstyled() ? BaseDirective._getOptionValue(el.$instance?.$style?.classes, key, { ...params }) : undefined),\n                sx: (key = '', when = true, params = {}) => (when ? BaseDirective._getOptionValue(el.$instance?.$style?.inlineStyles, key, { ...params }) : undefined),\n                ...$options\n            };\n\n            el.$instance = el._$instances[name]; // pass instance data to hooks\n            el.$instance[hook]?.(el, binding, vnode, prevVnode); // handle hook in directive implementation\n            el[`$${name}`] = el.$instance; // expose all options with $<directive_name>\n            BaseDirective._hook(name, hook, el, binding, vnode, prevVnode); // handle hooks during directive uses (global and self-definition)\n\n            el.$pd ||= {};\n            el.$pd[name] = { ...el.$pd?.[name], name, instance: el.$instance };\n        };\n\n        const handleWatch = (el) => {\n            const watchers = el.$instance?.watch;\n\n            // for 'config'\n            watchers?.['config']?.call(el.$instance, el.$instance?.$primevueConfig);\n            PrimeVueService.on('config:change', ({ newValue, oldValue }) => watchers?.['config']?.call(el.$instance, newValue, oldValue));\n\n            // for 'config.ripple'\n            watchers?.['config.ripple']?.call(el.$instance, el.$instance?.$primevueConfig?.ripple);\n            PrimeVueService.on('config:ripple:change', ({ newValue, oldValue }) => watchers?.['config.ripple']?.call(el.$instance, newValue, oldValue));\n        };\n\n        return {\n            created: (el, binding, vnode, prevVnode) => {\n                handleHook('created', el, binding, vnode, prevVnode);\n            },\n            beforeMount: (el, binding, vnode, prevVnode) => {\n                el.$attrSelector = UniqueComponentId('pd');\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('beforeMount', el, binding, vnode, prevVnode);\n                handleWatch(el);\n            },\n            mounted: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('mounted', el, binding, vnode, prevVnode);\n            },\n            beforeUpdate: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUpdate', el, binding, vnode, prevVnode);\n            },\n            updated: (el, binding, vnode, prevVnode) => {\n                BaseDirective._loadStyles(el, binding, vnode);\n                handleHook('updated', el, binding, vnode, prevVnode);\n            },\n            beforeUnmount: (el, binding, vnode, prevVnode) => {\n                handleHook('beforeUnmount', el, binding, vnode, prevVnode);\n            },\n            unmounted: (el, binding, vnode, prevVnode) => {\n                el.$instance?.scopedStyleEl?.value?.remove();\n                handleHook('unmounted', el, binding, vnode, prevVnode);\n            }\n        };\n    },\n    extend: (...args) => {\n        const [name, options] = BaseDirective._getMeta(...args);\n\n        return {\n            extend: (..._args) => {\n                const [_name, _options] = BaseDirective._getMeta(..._args);\n\n                return BaseDirective.extend(_name, { ...options, ...options?.methods, ..._options });\n            },\n            ...BaseDirective._extend(name, options)\n        };\n    }\n};\n\nexport default BaseDirective;\n"],"names":["BaseDirective","_getMeta","isObject","arguments","length","undefined","resolve","_getConfig","binding","vnode","_ref","_binding$instance","_vnode$ctx","instance","$primevue","ctx","appContext","config","globalProperties","_getOptionValue","getKeyValue","_getPTValue","_instance$binding","_instance$$primevueCo","obj","key","params","searchInDefaultPT","getValue","value","apply","isString","isArray","_ref2","ptOptions","$primevueConfig","_ref2$mergeSections","mergeSections","_ref2$mergeProps","mergeProps","useMergeProps","global","_useDefaultPT","defaultPT","self","_usePT","_getPT","$name","_objectSpread","datasets","_getPTDatasets","_mergeProps","datasetPrefix","_defineProperty","concat","toFlatCase","pt","callback","_computedValue$_key","computedValue","_key","hasOwnProperty","_usept","originalValue","fn","_instance$$primevueCo2","_ref4","_ref4$mergeSections","_ref4$mergeProps","_loadStyles","el","_config$csp","useStyleOptions","nonce","csp","_loadCoreStyles","$instance","_loadThemeStyles","_loadScopedThemeStyles","_themeChangeListener","_instance$$style","_instance$$style2","Base","isStyleNameLoaded","$style","name","_instance$$style3","BaseStyle","loadCSS","isUnstyled","setLoadedStyleName","_instance$$style5","_instance$$style6","Theme","_instance$$style4","_instance$$style4$get","_ref5","getCommonTheme","call","primitive","semantic","load","css","loadTheme","_instance$$style7","_instance$$style7$get","_instance$$style8","_instance$$style9","_ref6","getDirectiveTheme","_instance$$style10","_instance$$style10$ge","layerOrder","getLayerOrderThemeCSS","first","preset","$attrSelector","_instance$$style11","_instance$$style11$ge","_instance$$style12","_ref7","getPresetTheme","scopedStyle","scopedStyleEl","clearLoadedStyleNames","ThemeService","on","_hook","directiveName","hookName","prevVnode","_binding$value","_config$pt","toCapitalCase","selfHook","defaultHook","directives","options","_len","args","Array","_key2","isFunction","_extend","handleHook","hook","_el$$instance$hook","_el$$instance9","_el$$pd","_$instances","$prevInstance","$options","isEmpty","methods","$host","$binding","$modifiers","modifiers","$value","$el","classes","inlineStyles","style","_value$directives","_el$$instance","_el$$instance2","unstyled","theme","_el$$instance3","_el$$instance4","dt","ptm","_el$$instance5","ptmo","cx","_el$$instance6","_el$$instance7","sx","_el$$instance8","when","$pd","handleWatch","_el$$instance10","_watchers$config","_el$$instance11","_watchers$configRipp","_el$$instance12","watchers","watch","PrimeVueService","_ref8","_watchers$config2","newValue","oldValue","ripple","_ref9","_watchers$configRipp2","created","beforeMount","UniqueComponentId","mounted","beforeUpdate","updated","beforeUnmount","unmounted","_el$$instance13","remove","extend","_BaseDirective$_getMe","_BaseDirective$_getMe2","_slicedToArray","_BaseDirective$_getMe3","_BaseDirective$_getMe4","_name","_options"],"mappings":"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"}