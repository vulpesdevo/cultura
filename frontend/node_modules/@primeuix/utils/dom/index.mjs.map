{"version":3,"sources":["../../src/dom/methods/hasClass.ts","../../src/dom/methods/addClass.ts","../../src/dom/methods/calculateBodyScrollbarWidth.ts","../../src/dom/methods/getCSSVariableByRegex.ts","../../src/dom/helpers/blockBodyScroll.ts","../../src/dom/helpers/saveAs.ts","../../src/dom/helpers/exportCSV.ts","../../src/dom/methods/removeClass.ts","../../src/dom/helpers/unblockBodyScroll.ts","../../src/dom/methods/getHiddenElementDimensions.ts","../../src/dom/methods/getViewport.ts","../../src/dom/methods/getWindowScrollLeft.ts","../../src/dom/methods/getWindowScrollTop.ts","../../src/dom/methods/absolutePosition.ts","../../src/dom/methods/addStyle.ts","../../src/dom/methods/getOuterWidth.ts","../../src/dom/methods/relativePosition.ts","../../src/dom/methods/alignOverlay.ts","../../src/dom/methods/isElement.ts","../../src/dom/methods/toElement.ts","../../src/dom/methods/appendChild.ts","../../src/dom/methods/calculateScrollbarHeight.ts","../../src/dom/methods/calculateScrollbarWidth.ts","../../src/dom/methods/clearSelection.ts","../../src/dom/methods/setAttributes.ts","../../src/dom/methods/createElement.ts","../../src/dom/methods/createStyleAsString.ts","../../src/dom/methods/createStyleTag.ts","../../src/dom/methods/fadeIn.ts","../../src/dom/methods/fadeOut.ts","../../src/dom/methods/find.ts","../../src/dom/methods/findSingle.ts","../../src/dom/methods/focus.ts","../../src/dom/methods/getAttribute.ts","../../src/dom/methods/resolveUserAgent.ts","../../src/dom/methods/getBrowser.ts","../../src/dom/methods/getBrowserLanguage.ts","../../src/dom/methods/getCSSProperty.ts","../../src/dom/methods/getCursorOffset.ts","../../src/dom/methods/getFocusableElements.ts","../../src/dom/methods/getFirstFocusableElement.ts","../../src/dom/methods/getHeight.ts","../../src/dom/methods/getHiddenElementOuterHeight.ts","../../src/dom/methods/getHiddenElementOuterWidth.ts","../../src/dom/methods/getParentNode.ts","../../src/dom/methods/getIndex.ts","../../src/dom/methods/getInnerWidth.ts","../../src/dom/methods/getLastFocusableElement.ts","../../src/dom/methods/getNextElementSibling.ts","../../src/dom/methods/getNextFocusableElement.ts","../../src/dom/methods/getOffset.ts","../../src/dom/methods/getOuterHeight.ts","../../src/dom/methods/getParents.ts","../../src/dom/methods/getPreviousElementSibling.ts","../../src/dom/methods/getScrollableParents.ts","../../src/dom/methods/getSelection.ts","../../src/dom/methods/isExist.ts","../../src/dom/methods/getTargetElement.ts","../../src/dom/methods/getUserAgent.ts","../../src/dom/methods/getWidth.ts","../../src/dom/methods/hasCSSAnimation.ts","../../src/dom/methods/hasCSSTransition.ts","../../src/dom/methods/invokeElementMethod.ts","../../src/dom/methods/isAndroid.ts","../../src/dom/methods/isAttributeEquals.ts","../../src/dom/methods/isAttributeNotEquals.ts","../../src/dom/methods/isClickable.ts","../../src/dom/methods/isClient.ts","../../src/dom/methods/isFocusableElement.ts","../../src/dom/methods/isVisible.ts","../../src/dom/methods/isHidden.ts","../../src/dom/methods/isIOS.ts","../../src/dom/methods/isRTL.ts","../../src/dom/methods/isServer.ts","../../src/dom/methods/isTouchDevice.ts","../../src/dom/methods/nestedPosition.ts","../../src/dom/methods/remove.ts","../../src/dom/methods/removeChild.ts","../../src/dom/methods/removeStyleTag.ts","../../src/dom/methods/scrollInView.ts","../../src/dom/methods/setAttribute.ts","../../src/dom/methods/setCSSProperty.ts"],"sourcesContent":["export default function hasClass(element: Element, className: string): boolean {\n    if (element) {\n        if (element.classList) return element.classList.contains(className);\n        else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n\n    return false;\n}\n","import hasClass from './hasClass';\n\nexport default function addClass(element: Element, className: string | string[]): void {\n    if (element && className) {\n        const fn = (_className: string) => {\n            if (!hasClass(element, _className)) {\n                if (element.classList) element.classList.add(_className);\n                else element.className += ' ' + _className;\n            }\n        };\n\n        [className]\n            .flat()\n            .filter(Boolean)\n            .forEach((_classNames) => _classNames.split(' ').forEach(fn));\n    }\n}\n","export default function calculateBodyScrollbarWidth(): number {\n    return window.innerWidth - document.documentElement.offsetWidth;\n}\n","export default function getCSSVariableByRegex(variableRegex: RegExp): { name: string | undefined; value: string | undefined } | null {\n    for (const sheet of document?.styleSheets) {\n        try {\n            for (const rule of sheet?.cssRules) {\n                for (const property of (rule as CSSStyleRule)?.style) {\n                    if (variableRegex.test(property)) {\n                        return { name: property, value: (rule as CSSStyleRule).style.getPropertyValue(property).trim() };\n                    }\n                }\n            }\n        } catch {}\n    }\n\n    return null;\n}\n","import addClass from '../methods/addClass';\nimport calculateBodyScrollbarWidth from '../methods/calculateBodyScrollbarWidth';\nimport getCSSVariableByRegex from '../methods/getCSSVariableByRegex';\n\nexport default function blockBodyScroll(className: string = 'p-overflow-hidden'): void {\n    const variableData = getCSSVariableByRegex(/-scrollbar-width$/);\n    variableData?.name && document.body.style.setProperty(variableData.name, calculateBodyScrollbarWidth() + 'px');\n    addClass(document.body, className);\n}\n","export default function saveAs(file: { name: string; src: string }): boolean {\n    if (file) {\n        let link = document.createElement('a');\n\n        if (link.download !== undefined) {\n            const { name, src } = file;\n\n            link.setAttribute('href', src);\n            link.setAttribute('download', name);\n            link.style.display = 'none';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n\n            return true;\n        }\n    }\n\n    return false;\n}\n","import saveAs from './saveAs';\n\nexport default function exportCSV(csv: any, filename: string): void {\n    let blob = new Blob([csv], {\n        type: 'application/csv;charset=utf-8;'\n    });\n\n    if ((window.navigator as any).msSaveOrOpenBlob) {\n        (navigator as any).msSaveOrOpenBlob(blob, filename + '.csv');\n    } else {\n        const isDownloaded = saveAs({ name: filename + '.csv', src: URL.createObjectURL(blob) });\n\n        if (!isDownloaded) {\n            csv = 'data:text/csv;charset=utf-8,' + csv;\n            window.open(encodeURI(csv));\n        }\n    }\n}\n","export default function removeClass(element: Element, className: string | string[]): void {\n    if (element && className) {\n        const fn = (_className: string) => {\n            if (element.classList) element.classList.remove(_className);\n            else element.className = element.className.replace(new RegExp('(^|\\\\b)' + _className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        };\n\n        [className]\n            .flat()\n            .filter(Boolean)\n            .forEach((_classNames) => _classNames.split(' ').forEach(fn));\n    }\n}\n","import getCSSVariableByRegex from '../methods/getCSSVariableByRegex';\nimport removeClass from '../methods/removeClass';\n\nexport default function unblockBodyScroll(className: string = 'p-overflow-hidden'): void {\n    const variableData = getCSSVariableByRegex(/-scrollbar-width$/);\n    variableData?.name && document.body.style.removeProperty(variableData.name);\n    removeClass(document.body, className);\n}\n","export default function getHiddenElementDimensions(element?: HTMLElement): { width: number; height: number } {\n    let dimensions: { width: number; height: number } = { width: 0, height: 0 };\n\n    if (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n    }\n\n    return dimensions;\n}\n","export default function getViewport(): { width: number; height: number } {\n    let win = window,\n        d = document,\n        e = d.documentElement,\n        g = d.getElementsByTagName('body')[0],\n        w = win.innerWidth || e.clientWidth || g.clientWidth,\n        h = win.innerHeight || e.clientHeight || g.clientHeight;\n\n    return { width: w, height: h };\n}\n","export default function getWindowScrollLeft(): number {\n    let doc = document.documentElement;\n\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n}\n","export default function getWindowScrollTop(): number {\n    let doc = document.documentElement;\n\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n}\n","import getCSSVariableByRegex from './getCSSVariableByRegex';\nimport getHiddenElementDimensions from './getHiddenElementDimensions';\nimport getViewport from './getViewport';\nimport getWindowScrollLeft from './getWindowScrollLeft';\nimport getWindowScrollTop from './getWindowScrollTop';\n\nexport default function absolutePosition(element: HTMLElement, target: HTMLElement, gutter: boolean = true): void {\n    if (element) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : getHiddenElementDimensions(element);\n        const elementOuterHeight = elementDimensions.height;\n        const elementOuterWidth = elementDimensions.width;\n        const targetOuterHeight = target.offsetHeight;\n        const targetOuterWidth = target.offsetWidth;\n        const targetOffset = target.getBoundingClientRect();\n        const windowScrollTop = getWindowScrollTop();\n        const windowScrollLeft = getWindowScrollLeft();\n        const viewport = getViewport();\n        let top,\n            left,\n            origin = 'top';\n\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            origin = 'bottom';\n\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        } else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n        }\n\n        if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else left = targetOffset.left + windowScrollLeft;\n\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        element.style.transformOrigin = origin;\n        gutter && (element.style.marginTop = origin === 'bottom' ? `calc(${getCSSVariableByRegex(/-anchor-gutter$/)?.value ?? '2px'} * -1)` : (getCSSVariableByRegex(/-anchor-gutter$/)?.value ?? ''));\n    }\n}\n","export default function addStyle(element: HTMLElement, style: string | object): void {\n    if (element) {\n        if (typeof style === 'string') {\n            element.style.cssText = style;\n        } else {\n            Object.entries(style || {}).forEach(([key, value]: [string, string]) => ((element.style as any)[key] = value));\n        }\n    }\n}\n","export default function getOuterWidth(element: unknown, margin?: boolean): number {\n    if (element instanceof HTMLElement) {\n        let width = element.offsetWidth;\n\n        if (margin) {\n            let style = getComputedStyle(element);\n\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n\n        return width;\n    }\n\n    return 0;\n}\n","import getCSSVariableByRegex from './getCSSVariableByRegex';\nimport getHiddenElementDimensions from './getHiddenElementDimensions';\nimport getViewport from './getViewport';\n\nexport default function relativePosition(element: HTMLElement, target: HTMLElement, gutter: boolean = true): void {\n    if (element) {\n        const elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const viewport = getViewport();\n        let top,\n            left,\n            origin = 'top';\n\n        if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n            top = -1 * elementDimensions.height;\n            origin = 'bottom';\n\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        } else {\n            top = targetHeight;\n        }\n\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = targetOffset.left * -1;\n        } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n        } else {\n            // element fits on screen (align with target)\n            left = 0;\n        }\n\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n        element.style.transformOrigin = origin;\n        gutter && (element.style.marginTop = origin === 'bottom' ? `calc(${getCSSVariableByRegex(/-anchor-gutter$/)?.value ?? '2px'} * -1)` : (getCSSVariableByRegex(/-anchor-gutter$/)?.value ?? ''));\n    }\n}\n","import absolutePosition from './absolutePosition';\nimport getOuterWidth from './getOuterWidth';\nimport relativePosition from './relativePosition';\n\nexport default function alignOverlay(overlay: HTMLElement, target: HTMLElement, appendTo: string, calculateMinWidth: boolean = true) {\n    if (overlay && target) {\n        if (appendTo === 'self') {\n            relativePosition(overlay, target);\n        } else {\n            calculateMinWidth && (overlay.style.minWidth = getOuterWidth(target) + 'px');\n            absolutePosition(overlay, target);\n        }\n    }\n}\n","export default function isElement(element: any): boolean {\n    return typeof HTMLElement === 'object' ? element instanceof HTMLElement : element && typeof element === 'object' && element !== null && element.nodeType === 1 && typeof element.nodeName === 'string';\n}\n","import isElement from './isElement';\n\nexport default function toElement(element: any): Element | undefined {\n    let target = element;\n\n    if (element && typeof element === 'object') {\n        if (element.hasOwnProperty('current')) {\n            // For React\n            target = element.current;\n        } else if (element.hasOwnProperty('el')) {\n            if (element.el.hasOwnProperty('nativeElement')) {\n                // For Angular\n                target = element.el.nativeElement;\n            } else {\n                // For Vue\n                target = element.el;\n            }\n        }\n    }\n\n    return isElement(target) ? target : undefined;\n}\n","import toElement from './toElement';\n\nexport default function appendChild(element: unknown, child: Node) {\n    const target: Element | undefined = toElement(element);\n\n    if (target) target.appendChild(child);\n    else throw new Error('Cannot append ' + child + ' to ' + element);\n}\n","import addStyle from './addStyle';\n\nlet calculatedScrollbarHeight: number | undefined = undefined;\n\nexport default function calculateScrollbarHeight(element?: HTMLElement): number {\n    if (element) {\n        let style = getComputedStyle(element);\n        return element.offsetHeight - element.clientHeight - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth);\n    } else {\n        if (calculatedScrollbarHeight != null) return calculatedScrollbarHeight;\n\n        let scrollDiv = document.createElement('div');\n\n        addStyle(scrollDiv, {\n            width: '100px',\n            height: '100px',\n            overflow: 'scroll',\n            position: 'absolute',\n            top: '-9999px'\n        });\n        document.body.appendChild(scrollDiv);\n\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n\n        document.body.removeChild(scrollDiv);\n\n        calculatedScrollbarHeight = scrollbarHeight;\n\n        return scrollbarHeight;\n    }\n}\n","import addStyle from './addStyle';\n\nlet calculatedScrollbarWidth: number | undefined = undefined;\n\nexport default function calculateScrollbarWidth(element?: HTMLElement): number {\n    if (element) {\n        let style = getComputedStyle(element);\n        return element.offsetWidth - element.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n    } else {\n        if (calculatedScrollbarWidth != null) return calculatedScrollbarWidth;\n\n        let scrollDiv = document.createElement('div');\n\n        addStyle(scrollDiv, {\n            width: '100px',\n            height: '100px',\n            overflow: 'scroll',\n            position: 'absolute',\n            top: '-9999px'\n        });\n        document.body.appendChild(scrollDiv);\n\n        let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        document.body.removeChild(scrollDiv);\n\n        calculatedScrollbarWidth = scrollbarWidth;\n\n        return scrollbarWidth;\n    }\n}\n","export default function clearSelection(): void {\n    if (window.getSelection) {\n        const selection: any = window.getSelection() || {};\n\n        if (selection.empty) {\n            selection.empty();\n        } else if (selection.removeAllRanges && selection.rangeCount > 0 && selection.getRangeAt(0).getClientRects().length > 0) {\n            selection.removeAllRanges();\n        }\n    }\n}\n","import isElement from './isElement';\n\nexport default function setAttributes(element: HTMLElement, attributes: { [key: string]: any } = {}): void {\n    if (isElement(element)) {\n        const computedStyles = (rule: string, value: any): string[] => {\n            const styles = (element as any)?.$attrs?.[rule] ? [(element as any)?.$attrs?.[rule]] : [];\n\n            return [value].flat().reduce((cv, v) => {\n                if (v !== null && v !== undefined) {\n                    const type = typeof v;\n\n                    if (type === 'string' || type === 'number') {\n                        cv.push(v);\n                    } else if (type === 'object') {\n                        const _cv = Array.isArray(v) ? computedStyles(rule, v) : Object.entries(v).map(([_k, _v]) => (rule === 'style' && (!!_v || _v === 0) ? `${_k.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()}:${_v}` : !!_v ? _k : undefined));\n\n                        cv = _cv.length ? cv.concat(_cv.filter((c) => !!c)) : cv;\n                    }\n                }\n\n                return cv;\n            }, styles);\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            if (value !== undefined && value !== null) {\n                const matchedEvent = key.match(/^on(.+)/);\n\n                if (matchedEvent) {\n                    element.addEventListener(matchedEvent[1].toLowerCase(), value);\n                } else if (key === 'p-bind' || key === 'pBind') {\n                    setAttributes(element, value);\n                } else {\n                    value = key === 'class' ? [...new Set(computedStyles('class', value))].join(' ').trim() : key === 'style' ? computedStyles('style', value).join(';').trim() : value;\n                    ((element as any).$attrs = (element as any).$attrs || {}) && ((element as any).$attrs[key] = value);\n                    element.setAttribute(key, value);\n                }\n            }\n        });\n    }\n}\n","import setAttributes from './setAttributes';\n\nexport default function createElement(type: string, attributes: { [key: string]: any } = {}, ...children: (string | Node)[]): HTMLElement | undefined {\n    if (type) {\n        const element = document.createElement(type);\n\n        setAttributes(element, attributes);\n        element.append(...children);\n\n        return element;\n    }\n\n    return undefined;\n}\n","export default function createStyleAsString(css: string, options: any = {}) {\n    return css ? `'<style ${Object.entries(options).reduce((s, [k, v]) => s + `${k}=\"${v}\"`, ' ')}>${css}</style>'` : '';\n}\n","import setAttributes from './setAttributes';\n\nexport default function createStyleTag(attributes: { [key: string]: any } = {}, container: Element): HTMLStyleElement {\n    let element = document.createElement('style');\n    setAttributes(element, attributes);\n\n    if (!container) {\n        container = document.head;\n    }\n\n    container.appendChild(element);\n\n    return element;\n}\n","export default function fadeIn(element: HTMLElement, duration: number): void {\n    if (element) {\n        element.style.opacity = '0';\n\n        let last = +new Date();\n        let opacity = '0';\n\n        let tick = function () {\n            opacity = `${+element.style.opacity + (new Date().getTime() - last) / duration}`;\n            element.style.opacity = opacity;\n            last = +new Date();\n\n            if (+opacity < 1) {\n                (!!window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n\n        tick();\n    }\n}\n","export default function fadeOut(element: HTMLElement, duration: number): void {\n    if (element) {\n        let opacity = 1,\n            interval = 50,\n            gap = interval / duration;\n\n        let fading = setInterval(() => {\n            opacity -= gap;\n\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n\n            element.style.opacity = opacity.toString();\n        }, interval);\n    }\n}\n","import isElement from './isElement';\n\nexport default function find(element: Element, selector: string): Element[] {\n    return isElement(element) ? Array.from(element.querySelectorAll(selector)) : [];\n}\n","import isElement from './isElement';\n\nexport default function findSingle(element: Element, selector: string): Element | null {\n    return isElement(element) ? (element.matches(selector) ? element : element.querySelector(selector)) : null;\n}\n","export default function focus(element: HTMLElement, options?: FocusOptions): void {\n    element && document.activeElement !== element && element.focus(options);\n}\n","import isElement from './isElement';\n\nexport default function getAttribute(element: Element, name: string): any {\n    if (isElement(element)) {\n        const value = element.getAttribute(name);\n\n        if (!isNaN(value as any)) {\n            return +(value as string);\n        }\n\n        if (value === 'true' || value === 'false') {\n            return value === 'true';\n        }\n\n        return value;\n    }\n\n    return undefined;\n}\n","export default function resolveUserAgent(): { browser: string | undefined; version: string | undefined } {\n    let ua = navigator.userAgent.toLowerCase();\n    let match = /(chrome)[ ]([\\w.]+)/.exec(ua) || /(webkit)[ ]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ ]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) || [];\n\n    return {\n        browser: match[1] || '',\n        version: match[2] || '0'\n    };\n}\n","import resolveUserAgent from './resolveUserAgent';\n\ntype BrowserType = {\n    [key: string]: string | boolean | undefined;\n};\n\nlet browser: BrowserType | null = null;\n\nexport default function getBrowser(): BrowserType {\n    if (!browser) {\n        browser = {};\n\n        let matched = resolveUserAgent();\n\n        if (matched.browser) {\n            browser[matched.browser] = true;\n            browser['version'] = matched.version;\n        }\n\n        if (browser['chrome']) {\n            browser['webkit'] = true;\n        } else if (browser['webkit']) {\n            browser['safari'] = true;\n        }\n    }\n\n    return browser;\n}\n","export default function getBrowserLanguage(): string {\n    return (navigator.languages && navigator.languages.length && navigator.languages[0]) || navigator.language || 'en';\n}\n","export default function getCSSProperty(element?: HTMLElement, property?: string, inline?: boolean): string | null {\n    if (element && property) {\n        return inline ? element?.style?.getPropertyValue(property) : getComputedStyle(element).getPropertyValue(property);\n    }\n\n    return null;\n}\n","export default function getCursorOffset(element: Element, prevText: string, nextText: string, currentText: string): { top: number | string; left: number | string } {\n    if (element) {\n        let style = getComputedStyle(element);\n        let ghostDiv = document.createElement('div');\n\n        ghostDiv.style.position = 'absolute';\n        ghostDiv.style.top = '0px';\n        ghostDiv.style.left = '0px';\n        ghostDiv.style.visibility = 'hidden';\n        ghostDiv.style.pointerEvents = 'none';\n        ghostDiv.style.overflow = style.overflow;\n        ghostDiv.style.width = style.width;\n        ghostDiv.style.height = style.height;\n        ghostDiv.style.padding = style.padding;\n        ghostDiv.style.border = style.border;\n        ghostDiv.style.overflowWrap = style.overflowWrap;\n        ghostDiv.style.whiteSpace = style.whiteSpace;\n        ghostDiv.style.lineHeight = style.lineHeight;\n        ghostDiv.innerHTML = prevText.replace(/\\r\\n|\\r|\\n/g, '<br />');\n\n        let ghostSpan = document.createElement('span');\n\n        ghostSpan.textContent = currentText;\n        ghostDiv.appendChild(ghostSpan);\n\n        let text = document.createTextNode(nextText);\n\n        ghostDiv.appendChild(text);\n        document.body.appendChild(ghostDiv);\n\n        const { offsetLeft, offsetTop, clientHeight } = ghostSpan;\n\n        document.body.removeChild(ghostDiv);\n\n        return {\n            left: Math.abs(offsetLeft - element.scrollLeft),\n            top: Math.abs(offsetTop - element.scrollTop) + clientHeight\n        };\n    }\n\n    return {\n        top: 'auto',\n        left: 'auto'\n    };\n}\n","import find from './find';\n\nexport default function getFocusableElements(element: Element, selector: string = ''): Element[] {\n    let focusableElements = find(\n        element,\n        `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`\n    );\n\n    let visibleFocusableElements: Element[] = [];\n\n    for (let focusableElement of focusableElements) {\n        if (getComputedStyle(focusableElement).display != 'none' && getComputedStyle(focusableElement).visibility != 'hidden') visibleFocusableElements.push(focusableElement);\n    }\n\n    return visibleFocusableElements;\n}\n","import getFocusableElements from './getFocusableElements';\n\nexport default function getFirstFocusableElement(element: Element, selector?: string): Element | null {\n    const focusableElements = getFocusableElements(element, selector);\n\n    return focusableElements.length > 0 ? focusableElements[0] : null;\n}\n","export default function getHeight(element: HTMLElement): number {\n    if (element) {\n        let height = element.offsetHeight;\n        let style = getComputedStyle(element);\n\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n\n        return height;\n    }\n\n    return 0;\n}\n","export default function getHiddenElementOuterHeight(element: HTMLElement): number {\n    if (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n\n        return elementHeight;\n    }\n\n    return 0;\n}\n","export default function getHiddenElementOuterWidth(element: HTMLElement): number {\n    if (element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n\n        return elementWidth;\n    }\n\n    return 0;\n}\n","export default function getParentNode(element: Node): ParentNode | null {\n    if (element) {\n        let parent = element.parentNode;\n\n        if (parent && parent instanceof ShadowRoot && parent.host) {\n            parent = parent.host;\n        }\n\n        return parent;\n    }\n\n    return null;\n}\n","import getParentNode from './getParentNode';\n\nexport default function getIndex(element: HTMLElement): number {\n    if (element) {\n        let children = getParentNode(element)?.childNodes;\n        let num = 0;\n\n        if (children) {\n            for (let i = 0; i < children.length; i++) {\n                if (children[i] === element) return num;\n                if (children[i].nodeType === 1) num++;\n            }\n        }\n    }\n\n    return -1;\n}\n","export default function getInnerWidth(element: HTMLElement): number {\n    if (element) {\n        let width = element.offsetWidth;\n        let style = getComputedStyle(element);\n\n        width -= parseFloat(style.borderLeft) + parseFloat(style.borderRight);\n\n        return width;\n    }\n\n    return 0;\n}\n","import getFocusableElements from './getFocusableElements';\n\nexport default function getLastFocusableElement(element: Element, selector?: string): Element | null {\n    const focusableElements = getFocusableElements(element, selector);\n\n    return focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;\n}\n","export default function getNextElementSibling(element: Element, selector: string): Element | null {\n    let nextElement = element.nextElementSibling;\n\n    while (nextElement) {\n        if (nextElement.matches(selector)) {\n            return nextElement;\n        } else {\n            nextElement = nextElement.nextElementSibling;\n        }\n    }\n\n    return null;\n}\n","import getFocusableElements from './getFocusableElements';\n\nexport default function getNextFocusableElement(container: Element, element: Element, selector?: string): Element | null {\n    const focusableElements: Element[] = getFocusableElements(container, selector);\n    const index = focusableElements.length > 0 ? focusableElements.findIndex((el) => el === element) : -1;\n    const nextIndex = index > -1 && focusableElements.length >= index + 1 ? index + 1 : -1;\n\n    return nextIndex > -1 ? focusableElements[nextIndex] : null;\n}\n","export default function getOffset(element?: Element | null): { top: number | string; left: number | string } {\n    if (element) {\n        let rect = element.getBoundingClientRect();\n\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n        };\n    }\n\n    return {\n        top: 'auto',\n        left: 'auto'\n    };\n}\n","export default function getOuterHeight(element: HTMLElement, margin?: boolean): number {\n    if (element) {\n        let height = element.offsetHeight;\n\n        if (margin) {\n            let style = getComputedStyle(element);\n\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n\n        return height;\n    }\n\n    return 0;\n}\n","import getParentNode from './getParentNode';\n\nexport default function getParents(element: Node, parents: ParentNode[] = []): ParentNode[] {\n    const parent = getParentNode(element);\n\n    return parent === null ? parents : getParents(parent, parents.concat([parent]));\n}\n","export default function getPreviousElementSibling(element: Element, selector: string): Element | null {\n    let previousElement = element.previousElementSibling;\n\n    while (previousElement) {\n        if (previousElement.matches(selector)) {\n            return previousElement;\n        } else {\n            previousElement = previousElement.previousElementSibling;\n        }\n    }\n\n    return null;\n}\n","import findSingle from './findSingle';\nimport getParents from './getParents';\n\nexport default function getScrollableParents(element: Element): Element[] {\n    let scrollableParents = [];\n\n    if (element) {\n        let parents = getParents(element) as HTMLElement[];\n        const overflowRegex = /(auto|scroll)/;\n\n        const overflowCheck = (node: Element) => {\n            try {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            } catch (err) {\n                return false;\n            }\n        };\n\n        for (let parent of parents) {\n            let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n\n            if (scrollSelectors) {\n                let selectors = scrollSelectors.split(',');\n\n                for (let selector of selectors) {\n                    let el = findSingle(parent, selector);\n\n                    if (el && overflowCheck(el)) {\n                        scrollableParents.push(el);\n                    }\n                }\n            }\n\n            if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                scrollableParents.push(parent);\n            }\n        }\n    }\n\n    return scrollableParents;\n}\n","export default function getSelection(): string | undefined {\n    if (window.getSelection) return (window.getSelection() as any).toString();\n    else if (document.getSelection) return (document.getSelection() as any).toString();\n\n    return undefined;\n}\n","import getParentNode from './getParentNode';\n\nexport default function isExist(element: Node): boolean {\n    return !!(element !== null && typeof element !== 'undefined' && element.nodeName && getParentNode(element));\n}\n","import isExist from './isExist';\nimport toElement from './toElement';\n\nexport default function getTargetElement(target: any, currentElement: Element): Window | Document | Element | null | undefined {\n    if (!target) return undefined;\n\n    switch (target) {\n        case 'document':\n            return document;\n        case 'window':\n            return window;\n        case 'body':\n            return document.body;\n        case '@next':\n            return currentElement?.nextElementSibling;\n        case '@prev':\n            return currentElement?.previousElementSibling;\n        case '@parent':\n            return currentElement?.parentElement;\n        case '@grandparent':\n            return currentElement?.parentElement?.parentElement;\n        default:\n            if (typeof target === 'string') {\n                return document.querySelector(target);\n            }\n\n            const isFunction = (obj: any): obj is Function => !!(obj && obj.constructor && obj.call && obj.apply);\n            const element = toElement(isFunction(target) ? target() : target);\n\n            return element?.nodeType === 9 || isExist(element as Element) ? element : undefined;\n    }\n}\n","export default function getUserAgent(): string {\n    return navigator.userAgent;\n}\n","export default function getWidth(element: HTMLElement): number {\n    if (element) {\n        let width = element.offsetWidth;\n        let style = getComputedStyle(element);\n\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n\n        return width;\n    }\n\n    return 0;\n}\n","export default function hasCSSAnimation(element: Element): boolean {\n    if (element) {\n        const style = getComputedStyle(element);\n        const animationDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n\n        return animationDuration > 0;\n    }\n\n    return false;\n}\n","export default function hasCSSTransition(element: Element): boolean {\n    if (element) {\n        const style = getComputedStyle(element);\n        const transitionDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n\n        return transitionDuration > 0;\n    }\n\n    return false;\n}\n","export default function invokeElementMethod(element: Element, methodName: string, args?: any[]): void {\n    (element as any)[methodName].apply(element, args);\n}\n","export default function isAndroid(): boolean {\n    return /(android)/i.test(navigator.userAgent);\n}\n","import getAttribute from './getAttribute';\nimport isElement from './isElement';\n\nexport default function isAttributeEquals(element: Element, name: string, value: any): boolean {\n    return isElement(element) ? getAttribute(element, name) === value : false;\n}\n","import isAttributeEquals from './isAttributeEquals';\n\nexport default function isAttributeNotEquals(element: Element, name: string, value: any): boolean {\n    return !isAttributeEquals(element, name, value);\n}\n","export default function isClickable(element: Element): boolean {\n    if (element) {\n        const targetNode = element.nodeName;\n        const parentNode = element.parentElement && element.parentElement.nodeName;\n\n        return (\n            targetNode === 'INPUT' ||\n            targetNode === 'TEXTAREA' ||\n            targetNode === 'BUTTON' ||\n            targetNode === 'A' ||\n            parentNode === 'INPUT' ||\n            parentNode === 'TEXTAREA' ||\n            parentNode === 'BUTTON' ||\n            parentNode === 'A' ||\n            !!element.closest('.p-button, .p-checkbox, .p-radiobutton') // @todo Add [data-pc-section=\"button\"]\n        );\n    }\n\n    return false;\n}\n","export default function isClient(): boolean {\n    return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n}\n","import isElement from './isElement';\n\nexport default function isFocusableElement(element: unknown, selector: string = ''): boolean {\n    return isElement(element)\n        ? (element as Element).matches(`button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector},\n            [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])${selector}`)\n        : false;\n}\n","export default function isVisible(element?: HTMLElement): boolean {\n    return !!(element && element.offsetParent != null);\n}\n","import isVisible from './isVisible';\n\nexport default function isHidden(element: HTMLElement): boolean {\n    return !isVisible(element);\n}\n","export default function isIOS(): boolean {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any)['MSStream'];\n}\n","export default function isRTL(element?: HTMLElement): boolean {\n    return element ? getComputedStyle(element).direction === 'rtl' : false;\n}\n","import isClient from './isClient';\n\nexport default function isServer(): boolean {\n    return !isClient();\n}\n","export default function isTouchDevice(): boolean {\n    return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || (navigator as any).msMaxTouchPoints > 0;\n}\n","import calculateScrollbarWidth from './calculateScrollbarWidth';\nimport getHiddenElementOuterHeight from './getHiddenElementOuterHeight';\nimport getHiddenElementOuterWidth from './getHiddenElementOuterWidth';\nimport getOffset from './getOffset';\nimport getOuterHeight from './getOuterHeight';\nimport getOuterWidth from './getOuterWidth';\nimport getViewport from './getViewport';\n\nexport default function nestedPosition(element: HTMLElement, level: number): void {\n    if (element) {\n        const parentItem = element.parentElement;\n        const elementOffset = getOffset(parentItem);\n        const viewport = getViewport();\n        const sublistWidth = element.offsetParent ? element.offsetWidth : getHiddenElementOuterWidth(element);\n        const sublistHeight = element.offsetParent ? element.offsetHeight : getHiddenElementOuterHeight(element);\n        const itemOuterWidth = getOuterWidth(parentItem?.children?.[0]);\n        const itemOuterHeight = getOuterHeight(parentItem?.children?.[0] as HTMLElement);\n\n        let left: string = '';\n        let top: string = '';\n\n        if ((elementOffset.left as number) + itemOuterWidth + sublistWidth > viewport.width - calculateScrollbarWidth()) {\n            if ((elementOffset.left as number) < sublistWidth) {\n                // for too small screens\n                if (level % 2 === 1) {\n                    left = (elementOffset.left as number) ? '-' + (elementOffset.left as number) + 'px' : '100%';\n                } else if (level % 2 === 0) {\n                    left = viewport.width - sublistWidth - calculateScrollbarWidth() + 'px';\n                }\n            } else {\n                left = '-100%';\n            }\n        } else {\n            left = '100%';\n        }\n\n        // getBoundingClientRect returns a top position from the current visible viewport area\n        if (element.getBoundingClientRect().top + itemOuterHeight + sublistHeight > viewport.height) {\n            top = `-${sublistHeight - itemOuterHeight}px`;\n        } else {\n            top = '0px';\n        }\n\n        element.style.top = top;\n        element.style.left = left;\n    }\n}\n","export default function remove(element: Element) {\n    if (element) {\n        if (!('remove' in Element.prototype)) element.parentNode?.removeChild(element);\n        else element.remove();\n    }\n}\n","import toElement from './toElement';\n\nexport default function removeChild(element: unknown, child: Node) {\n    const target = toElement(element);\n\n    if (target) target.removeChild(child);\n    else throw new Error('Cannot remove ' + child + ' from ' + element);\n}\n","import isExist from './isExist';\n\nexport default function removeStyleTag(element: Node): Node | null {\n    if (isExist(element)) {\n        try {\n            element.parentNode?.removeChild(element);\n        } catch (error) {\n            // style element may have already been removed in a fast refresh\n        }\n\n        return null;\n    }\n\n    return element;\n}\n","import getOuterHeight from './getOuterHeight';\n\nexport default function scrollInView(container: HTMLElement, item: HTMLElement): void {\n    let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    let scroll = container.scrollTop;\n    let elementHeight = container.clientHeight;\n    let itemHeight = getOuterHeight(item);\n\n    if (offset < 0) {\n        container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n        container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n}\n","import isElement from './isElement';\n\nexport default function setAttribute(element: HTMLElement, attribute: string = '', value: any): void {\n    if (isElement(element) && value !== null && value !== undefined) {\n        element.setAttribute(attribute, value);\n    }\n}\n","export default function setCSSProperty(element?: HTMLElement, property?: string, value: any = null, priority?: string): void {\n    property && element?.style?.setProperty(property, value, priority);\n}\n"],"mappings":"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","names":[]}