{"version":3,"file":"index.mjs","sources":["../../src/inlinemessage/BaseInlineMessage.vue","../../src/inlinemessage/InlineMessage.vue","../../src/inlinemessage/InlineMessage.vue?vue&type=template&id=0df2fa28&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport InlineMessageStyle from 'primevue/inlinemessage/style';\n\nexport default {\n    name: 'BaseInlineMessage',\n    extends: BaseComponent,\n    props: {\n        severity: {\n            type: String,\n            default: 'error'\n        },\n        icon: {\n            type: String,\n            default: undefined\n        }\n    },\n    style: InlineMessageStyle,\n    provide() {\n        return {\n            $pcInlineMessage: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"icon\">\n            <component :is=\"icon ? 'span' : iconComponent\" :class=\"cx('icon')\" v-bind=\"ptm('icon')\"></component>\n        </slot>\n        <div v-if=\"$slots.default\" :class=\"cx('text')\" v-bind=\"ptm('text')\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseInlineMessage from './BaseInlineMessage.vue';\n\nexport default {\n    name: 'InlineMessage',\n    extends: BaseInlineMessage,\n    inheritAttrs: false,\n    timeout: null,\n    data() {\n        return {\n            visible: true\n        };\n    },\n    mounted() {\n        if (!this.sticky) {\n            setTimeout(() => {\n                this.visible = false;\n            }, this.life);\n        }\n    },\n    computed: {\n        iconComponent() {\n            return {\n                info: InfoCircleIcon,\n                success: CheckIcon,\n                warn: ExclamationTriangleIcon,\n                error: TimesCircleIcon\n            }[this.severity];\n        }\n    }\n};\n</script>\n","<template>\n    <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <slot name=\"icon\">\n            <component :is=\"icon ? 'span' : iconComponent\" :class=\"cx('icon')\" v-bind=\"ptm('icon')\"></component>\n        </slot>\n        <div v-if=\"$slots.default\" :class=\"cx('text')\" v-bind=\"ptm('text')\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CheckIcon from '@primevue/icons/check';\nimport ExclamationTriangleIcon from '@primevue/icons/exclamationtriangle';\nimport InfoCircleIcon from '@primevue/icons/infocircle';\nimport TimesCircleIcon from '@primevue/icons/timescircle';\nimport BaseInlineMessage from './BaseInlineMessage.vue';\n\nexport default {\n    name: 'InlineMessage',\n    extends: BaseInlineMessage,\n    inheritAttrs: false,\n    timeout: null,\n    data() {\n        return {\n            visible: true\n        };\n    },\n    mounted() {\n        if (!this.sticky) {\n            setTimeout(() => {\n                this.visible = false;\n            }, this.life);\n        }\n    },\n    computed: {\n        iconComponent() {\n            return {\n                info: InfoCircleIcon,\n                success: CheckIcon,\n                warn: ExclamationTriangleIcon,\n                error: TimesCircleIcon\n            }[this.severity];\n        }\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","severity","type","String","icon","undefined","style","InlineMessageStyle","provide","$pcInlineMessage","$parentInstance","BaseInlineMessage","inheritAttrs","timeout","data","visible","mounted","_this","sticky","setTimeout","life","computed","iconComponent","info","InfoCircleIcon","success","CheckIcon","warn","ExclamationTriangleIcon","error","TimesCircleIcon","_openBlock","_createElementBlock","_mergeProps","role","_ctx","cx","ptmi","_renderSlot","_createBlock","_resolveDynamicComponent","$options","ptm","$slots"],"mappings":";;;;;;;;AAIA,eAAe;AACXA,EAAAA,IAAI,EAAE,mBAAmB;AACzB,EAAA,SAAA,EAASC,aAAa;AACtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAAS,EAAA,OAAA;KACZ;AACDC,IAAAA,IAAI,EAAE;AACFF,MAAAA,IAAI,EAAEC,MAAM;MACZ,SAASE,EAAAA,SAAAA;AACb,KAAA;GACH;AACDC,EAAAA,KAAK,EAAEC,kBAAkB;EACzBC,OAAO,EAAA,SAAAA,UAAG;IACN,OAAO;AACHC,MAAAA,gBAAgB,EAAE,IAAI;AACtBC,MAAAA,eAAe,EAAE,IAAA;KACpB,CAAA;AACL,GAAA;AACJ,CAAC;;ACND,aAAe;AACXZ,EAAAA,IAAI,EAAE,eAAe;AACrB,EAAA,SAAA,EAASa,QAAiB;AAC1BC,EAAAA,YAAY,EAAE,KAAK;AACnBC,EAAAA,OAAO,EAAE,IAAI;EACbC,IAAI,EAAA,SAAAA,OAAG;IACH,OAAO;AACHC,MAAAA,OAAO,EAAE,IAAA;KACZ,CAAA;GACJ;EACDC,OAAO,EAAA,SAAAA,UAAG;AAAA,IAAA,IAAAC,KAAA,GAAA,IAAA,CAAA;AACN,IAAA,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;AACdC,MAAAA,UAAU,CAAC,YAAM;QACbF,KAAI,CAACF,UAAU,KAAK,CAAA;AACxB,OAAC,EAAE,IAAI,CAACK,IAAI,CAAC,CAAA;AACjB,KAAA;GACH;AACDC,EAAAA,QAAQ,EAAE;IACNC,aAAa,EAAA,SAAAA,gBAAG;MACZ,OAAO;AACHC,QAAAA,IAAI,EAAEC,cAAc;AACpBC,QAAAA,OAAO,EAAEC,SAAS;AAClBC,QAAAA,IAAI,EAAEC,uBAAuB;AAC7BC,QAAAA,KAAK,EAAEC,eAAAA;AACX,OAAC,CAAC,IAAI,CAAC7B,QAAQ,CAAC,CAAA;AACpB,KAAA;AACJ,GAAA;AACJ,CAAC;;;EC5CG,OAAA8B,SAAA,EAAA,EAAAC,kBAAA,CAOK,OAPLC,UAOK,CAAA;AAPAC,IAAAA,IAAI,EAAC,OAAQ;AAAA,IAAA,WAAS,EAAC,WAAY;AAAA,IAAA,aAAW,EAAC,MAAO;AAAC,IAAA,OAAA,EAAOC,IAAE,CAAAC,EAAA,CAAA,MAAA,CAAA;KAAkBD,IAAI,CAAAE,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CACvFC,UAAA,CAEMH,yBAFN,YAAA;IAAA,OAEM,EADFJ,SAAA,EAAA,EAAAQ,WAAA,CAAmGC,uBAAnF,CAAAL,IAAA,CAAA/B,IAAG,GAAa,MAAA,GAAAqC,QAAA,CAAAnB,aAAa,GAA7CW,UAAmG,CAAA;AAAnD,MAAA,OAAA,EAAOE,IAAE,CAAAC,EAAA,CAAA,MAAA,CAAA;OAAkBD,IAAG,CAAAO,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA,OAAA,CAAA,CAAA;MAEvEP,IAAA,CAAAQ,MAAM,WAAQ,IAAzBZ,SAAA,EAAA,EAAAC,kBAAA,CAEK,OAFLC,UAEK,CAAA;;AAFuB,IAAA,OAAA,EAAOE,IAAE,CAAAC,EAAA,CAAA,MAAA,CAAA;KAAkBD,IAAG,CAAAO,GAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CACtDJ,UAAY,CAAAH,IAAA,CAAAQ,MAAA,EAAA,SAAA,CAAA;;;;;;;"}