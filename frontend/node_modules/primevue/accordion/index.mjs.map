{"version":3,"file":"index.mjs","sources":["../../src/accordion/BaseAccordion.vue","../../src/accordion/Accordion.vue","../../src/accordion/Accordion.vue?vue&type=template&id=63600a5e&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport AccordionStyle from 'primevue/accordion/style';\n\nexport default {\n    name: 'BaseAccordion',\n    extends: BaseComponent,\n    props: {\n        value: {\n            type: [String, Array],\n            default: undefined\n        },\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        lazy: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        expandIcon: {\n            type: String,\n            default: undefined\n        },\n        collapseIcon: {\n            type: String,\n            default: undefined\n        },\n        // @deprecated since v4.\n        activeIndex: {\n            type: [Number, Array],\n            default: null\n        }\n    },\n    style: AccordionStyle,\n    provide() {\n        return {\n            $pcAccordion: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-if=\"hasAccordionTab\">\n            <AccordionPanel v-for=\"(tab, i) of tabs\" :key=\"getKey(tab, i)\" :value=\"`${i}`\" :pt=\"{ root: getTabPT(tab, 'root', i) }\" :disabled=\"getTabProp(tab, 'disabled')\">\n                <AccordionHeader :class=\"getTabProp(tab, 'headerClass')\" :pt=\"getHeaderPT(tab, i)\">\n                    <component v-if=\"tab.children && tab.children.headericon\" :is=\"tab.children.headericon\" :isTabActive=\"isItemActive(`${i}`)\" :active=\"isItemActive(`${i}`)\" :index=\"i\"></component>\n                    <span v-if=\"tab.props && tab.props.header\" v-bind=\"getTabPT(tab, 'headertitle', i)\">{{ tab.props.header }}</span>\n                    <template #toggleicon=\"slotProps\">\n                        <component\n                            v-if=\"slotProps.active\"\n                            :is=\"$slots.collapseicon ? $slots.collapseicon : collapseIcon ? 'span' : 'ChevronDownIcon'\"\n                            :class=\"[collapseIcon, slotProps.class]\"\n                            aria-hidden=\"true\"\n                            v-bind=\"getTabPT(tab, 'headericon', i)\"\n                        />\n                        <component v-else :is=\"$slots.expandicon ? $slots.expandicon : expandIcon ? 'span' : 'ChevronUpIcon'\" :class=\"[expandIcon, slotProps.class]\" aria-hidden=\"true\" v-bind=\"getTabPT(tab, 'headericon', i)\" />\n                    </template>\n                    <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                </AccordionHeader>\n                <AccordionContent :pt=\"getContentPT(tab, i)\">\n                    <component :is=\"tab\"></component>\n                </AccordionContent>\n            </AccordionPanel>\n        </template>\n\n        <slot v-else></slot>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport AccordionContent from 'primevue/accordioncontent';\nimport AccordionHeader from 'primevue/accordionheader';\nimport AccordionPanel from 'primevue/accordionpanel';\nimport { mergeProps } from 'vue';\nimport BaseAccordion from './BaseAccordion.vue';\n\nexport default {\n    name: 'Accordion',\n    extends: BaseAccordion,\n    inheritAttrs: false,\n    emits: ['update:value', 'update:activeIndex', 'tab-open', 'tab-close', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_value: this.value\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        value(newValue) {\n            this.d_value = newValue;\n        },\n        activeIndex: {\n            immediate: true,\n            handler(newValue) {\n                if (this.hasAccordionTab) {\n                    this.d_value = this.multiple ? newValue?.map(String) : newValue?.toString();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        isItemActive(value) {\n            return this.multiple ? this.d_value?.includes(value) : this.d_value === value;\n        },\n        updateValue(newValue) {\n            const active = this.isItemActive(newValue);\n\n            if (this.multiple) {\n                if (active) {\n                    this.d_value = this.d_value.filter((v) => v !== newValue);\n                } else {\n                    if (this.d_value) this.d_value.push(newValue);\n                    else this.d_value = [newValue];\n                }\n            } else {\n                this.d_value = active ? null : newValue;\n            }\n\n            this.$emit('update:value', this.d_value);\n\n            // @deprecated since v4.\n            this.$emit('update:activeIndex', this.multiple ? this.d_value?.map(Number) : Number(this.d_value));\n            this.$emit(active ? 'tab-close' : 'tab-open', { originalEvent: undefined, index: Number(newValue) });\n        },\n        // @deprecated since v4. Use new structure instead.\n        isAccordionTab(child) {\n            return child.type.name === 'AccordionTab';\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getHeaderPT(tab, index) {\n            return {\n                root: mergeProps({ onClick: (event) => this.onTabClick(event, index) }, this.getTabProp(tab, 'headerProps'), this.getTabPT(tab, 'header', index)),\n                toggleicon: mergeProps(this.getTabProp(tab, 'headeractionprops'), this.getTabPT(tab, 'headeraction', index))\n            };\n        },\n        getContentPT(tab, index) {\n            return {\n                root: mergeProps(this.getTabProp(tab, 'contentProps'), this.getTabPT(tab, 'toggleablecontent', index)),\n                transition: this.getTabPT(tab, 'transition', index),\n                content: this.getTabPT(tab, 'content', index)\n            };\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props || {},\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isItemActive(`${index}`)\n                }\n            };\n\n            return mergeProps(this.ptm(`accordiontab.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onTabClick(event, index) {\n            this.$emit('tab-click', { originalEvent: event, index });\n        }\n    },\n    computed: {\n        // @deprecated since v4.\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isAccordionTab(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isAccordionTab(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        hasAccordionTab() {\n            return this.tabs.length;\n        }\n    },\n    components: {\n        AccordionPanel,\n        AccordionHeader,\n        AccordionContent,\n        ChevronUpIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <template v-if=\"hasAccordionTab\">\n            <AccordionPanel v-for=\"(tab, i) of tabs\" :key=\"getKey(tab, i)\" :value=\"`${i}`\" :pt=\"{ root: getTabPT(tab, 'root', i) }\" :disabled=\"getTabProp(tab, 'disabled')\">\n                <AccordionHeader :class=\"getTabProp(tab, 'headerClass')\" :pt=\"getHeaderPT(tab, i)\">\n                    <component v-if=\"tab.children && tab.children.headericon\" :is=\"tab.children.headericon\" :isTabActive=\"isItemActive(`${i}`)\" :active=\"isItemActive(`${i}`)\" :index=\"i\"></component>\n                    <span v-if=\"tab.props && tab.props.header\" v-bind=\"getTabPT(tab, 'headertitle', i)\">{{ tab.props.header }}</span>\n                    <template #toggleicon=\"slotProps\">\n                        <component\n                            v-if=\"slotProps.active\"\n                            :is=\"$slots.collapseicon ? $slots.collapseicon : collapseIcon ? 'span' : 'ChevronDownIcon'\"\n                            :class=\"[collapseIcon, slotProps.class]\"\n                            aria-hidden=\"true\"\n                            v-bind=\"getTabPT(tab, 'headericon', i)\"\n                        />\n                        <component v-else :is=\"$slots.expandicon ? $slots.expandicon : expandIcon ? 'span' : 'ChevronUpIcon'\" :class=\"[expandIcon, slotProps.class]\" aria-hidden=\"true\" v-bind=\"getTabPT(tab, 'headericon', i)\" />\n                    </template>\n                    <component v-if=\"tab.children && tab.children.header\" :is=\"tab.children.header\"></component>\n                </AccordionHeader>\n                <AccordionContent :pt=\"getContentPT(tab, i)\">\n                    <component :is=\"tab\"></component>\n                </AccordionContent>\n            </AccordionPanel>\n        </template>\n\n        <slot v-else></slot>\n    </div>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport ChevronRightIcon from '@primevue/icons/chevronright';\nimport ChevronUpIcon from '@primevue/icons/chevronup';\nimport AccordionContent from 'primevue/accordioncontent';\nimport AccordionHeader from 'primevue/accordionheader';\nimport AccordionPanel from 'primevue/accordionpanel';\nimport { mergeProps } from 'vue';\nimport BaseAccordion from './BaseAccordion.vue';\n\nexport default {\n    name: 'Accordion',\n    extends: BaseAccordion,\n    inheritAttrs: false,\n    emits: ['update:value', 'update:activeIndex', 'tab-open', 'tab-close', 'tab-click'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_value: this.value\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        value(newValue) {\n            this.d_value = newValue;\n        },\n        activeIndex: {\n            immediate: true,\n            handler(newValue) {\n                if (this.hasAccordionTab) {\n                    this.d_value = this.multiple ? newValue?.map(String) : newValue?.toString();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        isItemActive(value) {\n            return this.multiple ? this.d_value?.includes(value) : this.d_value === value;\n        },\n        updateValue(newValue) {\n            const active = this.isItemActive(newValue);\n\n            if (this.multiple) {\n                if (active) {\n                    this.d_value = this.d_value.filter((v) => v !== newValue);\n                } else {\n                    if (this.d_value) this.d_value.push(newValue);\n                    else this.d_value = [newValue];\n                }\n            } else {\n                this.d_value = active ? null : newValue;\n            }\n\n            this.$emit('update:value', this.d_value);\n\n            // @deprecated since v4.\n            this.$emit('update:activeIndex', this.multiple ? this.d_value?.map(Number) : Number(this.d_value));\n            this.$emit(active ? 'tab-close' : 'tab-open', { originalEvent: undefined, index: Number(newValue) });\n        },\n        // @deprecated since v4. Use new structure instead.\n        isAccordionTab(child) {\n            return child.type.name === 'AccordionTab';\n        },\n        getTabProp(tab, name) {\n            return tab.props ? tab.props[name] : undefined;\n        },\n        getKey(tab, index) {\n            return this.getTabProp(tab, 'header') || index;\n        },\n        getHeaderPT(tab, index) {\n            return {\n                root: mergeProps({ onClick: (event) => this.onTabClick(event, index) }, this.getTabProp(tab, 'headerProps'), this.getTabPT(tab, 'header', index)),\n                toggleicon: mergeProps(this.getTabProp(tab, 'headeractionprops'), this.getTabPT(tab, 'headeraction', index))\n            };\n        },\n        getContentPT(tab, index) {\n            return {\n                root: mergeProps(this.getTabProp(tab, 'contentProps'), this.getTabPT(tab, 'toggleablecontent', index)),\n                transition: this.getTabPT(tab, 'transition', index),\n                content: this.getTabPT(tab, 'content', index)\n            };\n        },\n        getTabPT(tab, key, index) {\n            const count = this.tabs.length;\n            const tabMetaData = {\n                props: tab.props || {},\n                parent: {\n                    instance: this,\n                    props: this.$props,\n                    state: this.$data\n                },\n                context: {\n                    index,\n                    count,\n                    first: index === 0,\n                    last: index === count - 1,\n                    active: this.isItemActive(`${index}`)\n                }\n            };\n\n            return mergeProps(this.ptm(`accordiontab.${key}`, tabMetaData), this.ptmo(this.getTabProp(tab, 'pt'), key, tabMetaData));\n        },\n        onTabClick(event, index) {\n            this.$emit('tab-click', { originalEvent: event, index });\n        }\n    },\n    computed: {\n        // @deprecated since v4.\n        tabs() {\n            return this.$slots.default().reduce((tabs, child) => {\n                if (this.isAccordionTab(child)) {\n                    tabs.push(child);\n                } else if (child.children && child.children instanceof Array) {\n                    child.children.forEach((nestedChild) => {\n                        if (this.isAccordionTab(nestedChild)) {\n                            tabs.push(nestedChild);\n                        }\n                    });\n                }\n\n                return tabs;\n            }, []);\n        },\n        hasAccordionTab() {\n            return this.tabs.length;\n        }\n    },\n    components: {\n        AccordionPanel,\n        AccordionHeader,\n        AccordionContent,\n        ChevronUpIcon,\n        ChevronRightIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","value","type","String","Array","undefined","multiple","Boolean","lazy","tabindex","Number","selectOnFocus","expandIcon","collapseIcon","activeIndex","style","AccordionStyle","provide","$pcAccordion","$parentInstance","BaseAccordion","inheritAttrs","emits","data","id","$attrs","d_value","watch","$attrsId","newValue","UniqueComponentId","immediate","handler","hasAccordionTab","map","toString","mounted","methods","isItemActive","_this$d_value","includes","updateValue","_this$d_value2","active","filter","v","push","$emit","originalEvent","index","isAccordionTab","child","getTabProp","tab","getKey","getHeaderPT","_this","root","mergeProps","onClick","event","onTabClick","getTabPT","toggleicon","getContentPT","transition","content","key","count","tabs","length","tabMetaData","parent","instance","$props","state","$data","context","first","last","concat","ptm","ptmo","computed","_this2","$slots","reduce","children","forEach","nestedChild","components","AccordionPanel","AccordionHeader","AccordionContent","ChevronUpIcon","ChevronRightIcon","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","ptmi","$options","_Fragment","_renderList","i","_createBlock","_component_AccordionPanel","pt","disabled","_createVNode","_component_AccordionHeader","_normalizeClass","_withCtx","slotProps","_resolveDynamicComponent","collapseicon","expandicon","headericon","isTabActive","header","_component_AccordionContent","_renderSlot"],"mappings":"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"}