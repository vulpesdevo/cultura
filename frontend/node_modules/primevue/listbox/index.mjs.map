{"version":3,"file":"index.mjs","sources":["../../src/listbox/BaseListbox.vue","../../src/listbox/Listbox.vue","../../src/listbox/Listbox.vue?vue&type=template&id=eaa09184&lang.js"],"sourcesContent":["<script>\nimport BaseEditableHolder from '@primevue/core/baseeditableholder';\nimport ListboxStyle from 'primevue/listbox/style';\n\nexport default {\n    name: 'BaseListbox',\n    extends: BaseEditableHolder,\n    props: {\n        options: Array,\n        optionLabel: null,\n        optionValue: null,\n        optionDisabled: null,\n        optionGroupLabel: null,\n        optionGroupChildren: null,\n        listStyle: null,\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        dataKey: null,\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: false\n        },\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: true\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        highlightOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        checkmark: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        filterIcon: {\n            type: String,\n            default: undefined\n        },\n        striped: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: ListboxStyle,\n    provide() {\n        return {\n            $pcListbox: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" @focusout=\"onFocusout\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, getFirstFocusableElement, isElement } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { FilterService } from '@primevue/core/api';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            id: this.$attrs.id,\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            focus(this.list);\n\n            const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = this.getOptionValue(option);\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : this.getOptionValue(option);\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n                } else {\n                    value = metaKey ? this.d_value || [] : [];\n                    value = [...value, this.getOptionValue(option)];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.d_value || []), this.getOptionValue(option)];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value, filterValue: this.visibleOptions });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            if (this.multiple) return (this.d_value || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.d_value, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.$filled) {\n                if (this.multiple) {\n                    for (let index = this.d_value.length - 1; index >= 0; index--) {\n                        const value = this.d_value[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.$filled ? findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.$filled) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.d_value.filter((val) => !equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        optionsListFlat() {\n            return this.filterValue ? FilterService.filter(this.options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : this.options;\n        },\n        optionsListGroup() {\n            const filteredOptions = [];\n\n            (this.options || []).forEach((optionGroup) => {\n                const optionGroupChildren = this.getOptionGroupChildren(optionGroup) || [];\n                const filteredChildren = this.filterValue ? FilterService.filter(optionGroupChildren, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : optionGroupChildren;\n\n                if (filteredChildren?.length) {\n                    filteredOptions.push({ optionGroup, group: true }, ...filteredChildren);\n                }\n            });\n\n            return filteredOptions;\n        },\n        visibleOptions() {\n            return this.optionGroupLabel ? this.optionsListGroup : this.optionsListFlat;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return isNotEmpty(this.d_value);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.d_value.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n","<template>\n    <div :id=\"id\" :class=\"cx('root')\" @focusout=\"onFocusout\" v-bind=\"ptmi('root')\">\n        <span\n            ref=\"firstHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onFirstHiddenFocus\"\n            v-bind=\"ptm('hiddenFirstFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n        <div v-if=\"$slots.header\" :class=\"cx('header')\">\n            <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        </div>\n        <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n            <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                <InputText\n                    v-model=\"filterValue\"\n                    type=\"text\"\n                    :class=\"cx('pcFilter')\"\n                    :placeholder=\"filterPlaceholder\"\n                    role=\"searchbox\"\n                    autocomplete=\"off\"\n                    :disabled=\"disabled\"\n                    :unstyled=\"unstyled\"\n                    :aria-owns=\"id + '_list'\"\n                    :aria-activedescendant=\"focusedOptionId\"\n                    :tabindex=\"!disabled && !focused ? tabindex : -1\"\n                    @input=\"onFilterChange\"\n                    @blur=\"onFilterBlur\"\n                    @keydown=\"onFilterKeyDown\"\n                    :pt=\"ptm('pcFilter')\"\n                />\n                <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                    <slot name=\"filtericon\">\n                        <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                        <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                    </slot>\n                </InputIcon>\n            </IconField>\n            <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                {{ filterResultMessageText }}\n            </span>\n        </div>\n        <div :class=\"cx('listContainer')\" :style=\"[{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }, listStyle]\" v-bind=\"ptm('listContainer')\">\n            <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"[{ height: scrollHeight }, listStyle]\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                    <ul\n                        :ref=\"(el) => listRef(el, contentRef)\"\n                        :id=\"id + '_list'\"\n                        :class=\"[cx('list'), styleClass]\"\n                        :style=\"contentStyle\"\n                        :tabindex=\"-1\"\n                        role=\"listbox\"\n                        :aria-multiselectable=\"multiple\"\n                        :aria-label=\"ariaLabel\"\n                        :aria-labelledby=\"ariaLabelledby\"\n                        :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n                        :aria-disabled=\"disabled\"\n                        @focus=\"onListFocus\"\n                        @blur=\"onListBlur\"\n                        @keydown=\"onListKeyDown\"\n                        v-bind=\"ptm('list')\"\n                    >\n                        <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                            <li v-if=\"isOptionGroup(option)\" :id=\"id + '_' + getOptionIndex(i, getItemOptions)\" :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\" :class=\"cx('optionGroup')\" role=\"option\" v-bind=\"ptm('optionGroup')\">\n                                <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionGroupLabel(option.optionGroup) }}</slot>\n                            </li>\n                            <li\n                                v-else\n                                :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                v-ripple\n                                :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                :class=\"cx('option', { option, index: i, getItemOptions })\"\n                                role=\"option\"\n                                :aria-label=\"getOptionLabel(option)\"\n                                :aria-selected=\"isSelected(option)\"\n                                :aria-disabled=\"isOptionDisabled(option)\"\n                                :aria-setsize=\"ariaSetSize\"\n                                :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                @click=\"onOptionSelect($event, option, getOptionIndex(i, getItemOptions))\"\n                                @mousedown=\"onOptionMouseDown($event, getOptionIndex(i, getItemOptions))\"\n                                @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                @touchend=\"onOptionTouchEnd()\"\n                                @dblclick=\"onOptionDblClick($event, option)\"\n                                v-bind=\"getPTOptions(option, getItemOptions, i, 'option')\"\n                                :data-p-selected=\"isSelected(option)\"\n                                :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                :data-p-disabled=\"isOptionDisabled(option)\"\n                            >\n                                <template v-if=\"checkmark\">\n                                    <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                    <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                </template>\n                                <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">{{ getOptionLabel(option) }}</slot>\n                            </li>\n                        </template>\n                        <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                        </li>\n                        <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\">\n                            <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                        </li>\n                    </ul>\n                </template>\n                <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                    <slot name=\"loader\" :options=\"options\"></slot>\n                </template>\n            </VirtualScroller>\n        </div>\n        <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n        <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ emptyMessageText }}\n        </span>\n        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n            {{ selectedMessageText }}\n        </span>\n        <span\n            ref=\"lastHiddenFocusableElement\"\n            role=\"presentation\"\n            aria-hidden=\"true\"\n            class=\"p-hidden-accessible p-hidden-focusable\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            @focus=\"onLastHiddenFocus\"\n            v-bind=\"ptm('hiddenLastFocusableEl')\"\n            :data-p-hidden-accessible=\"true\"\n            :data-p-hidden-focusable=\"true\"\n        ></span>\n    </div>\n</template>\n\n<script>\nimport { findSingle, focus, getFirstFocusableElement, isElement } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { FilterService } from '@primevue/core/api';\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport SearchIcon from '@primevue/icons/search';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseListbox from './BaseListbox.vue';\n\nexport default {\n    name: 'Listbox',\n    extends: BaseListbox,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'filter', 'item-dblclick', 'option-dblclick'],\n    list: null,\n    virtualScroller: null,\n    optionTouched: false,\n    startRangeIndex: -1,\n    searchTimeout: null,\n    searchValue: '',\n    data() {\n        return {\n            id: this.$attrs.id,\n            filterValue: null,\n            focused: false,\n            focusedOptionIndex: -1\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : typeof option === 'string' ? option : null;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        onFirstHiddenFocus() {\n            focus(this.list);\n\n            const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = isElement(firstFocusableEl) ? undefined : -1;\n            this.$refs.firstHiddenFocusableElement.tabIndex = -1;\n        },\n        onLastHiddenFocus(event) {\n            const relatedTarget = event.relatedTarget;\n\n            if (relatedTarget === this.list) {\n                const firstFocusableEl = getFirstFocusableElement(this.$el, ':not([data-p-hidden-focusable=\"true\"])');\n\n                focus(firstFocusableEl);\n                this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            } else {\n                focus(this.$refs.firstHiddenFocusableElement);\n            }\n\n            this.$refs.lastHiddenFocusableElement.tabIndex = -1;\n        },\n        onFocusout(event) {\n            if (!this.$el.contains(event.relatedTarget) && this.$refs.lastHiddenFocusableElement && this.$refs.firstHiddenFocusableElement) {\n                this.$refs.lastHiddenFocusableElement.tabIndex = this.$refs.firstHiddenFocusableElement.tabIndex = undefined;\n            }\n        },\n        onListFocus(event) {\n            this.focused = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.findSelectedOptionIndex();\n            this.autoUpdateModel();\n            this.$emit('focus', event);\n        },\n        onListBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n        },\n        onListKeyDown(event) {\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Tab':\n                    //NOOP\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    if (this.multiple && event.code === 'KeyA' && metaKey) {\n                        const value = this.visibleOptions.filter((option) => this.isValidOption(option)).map((option) => this.getOptionValue(option));\n\n                        this.updateModel(event, value);\n\n                        event.preventDefault();\n                        break;\n                    }\n\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchOptions(event, event.key);\n                        event.preventDefault();\n                    }\n\n                    break;\n            }\n        },\n        onOptionSelect(event, option, index = -1) {\n            if (this.disabled || this.isOptionDisabled(option)) {\n                return;\n            }\n\n            this.multiple ? this.onOptionSelectMultiple(event, option) : this.onOptionSelectSingle(event, option);\n            this.optionTouched = false;\n            index !== -1 && (this.focusedOptionIndex = index);\n        },\n        onOptionMouseDown(event, index) {\n            this.changeFocusedOptionIndex(event, index);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover && this.focused) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onOptionTouchEnd() {\n            if (this.disabled) {\n                return;\n            }\n\n            this.optionTouched = true;\n        },\n        onOptionDblClick(event, item) {\n            this.$emit('item-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n            this.$emit('option-dblclick', {\n                originalEvent: event,\n                value: item\n            });\n        },\n        onOptionSelectSingle(event, option) {\n            let selected = this.isSelected(option);\n            let valueChanged = false;\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event && (event.metaKey || event.ctrlKey);\n\n                if (selected) {\n                    if (metaKey) {\n                        value = null;\n                        valueChanged = true;\n                    }\n                } else {\n                    value = this.getOptionValue(option);\n                    valueChanged = true;\n                }\n            } else {\n                value = selected ? null : this.getOptionValue(option);\n                valueChanged = true;\n            }\n\n            if (valueChanged) {\n                this.updateModel(event, value);\n            }\n        },\n        onOptionSelectMultiple(event, option) {\n            let selected = this.isSelected(option);\n            let value = null;\n            let metaSelection = this.optionTouched ? false : this.metaKeySelection;\n\n            if (metaSelection) {\n                let metaKey = event.metaKey || event.ctrlKey;\n\n                if (selected) {\n                    value = metaKey ? this.removeOption(option) : [this.getOptionValue(option)];\n                } else {\n                    value = metaKey ? this.d_value || [] : [];\n                    value = [...value, this.getOptionValue(option)];\n                }\n            } else {\n                value = selected ? this.removeOption(option) : [...(this.d_value || []), this.getOptionValue(option)];\n            }\n\n            this.updateModel(event, value);\n        },\n        onOptionSelectRange(event, start = -1, end = -1) {\n            start === -1 && (start = this.findNearestSelectedOptionIndex(end, true));\n            end === -1 && (end = this.findNearestSelectedOptionIndex(start));\n\n            if (start !== -1 && end !== -1) {\n                const rangeStart = Math.min(start, end);\n                const rangeEnd = Math.max(start, end);\n                const value = this.visibleOptions\n                    .slice(rangeStart, rangeEnd + 1)\n                    .filter((option) => this.isValidOption(option))\n                    .map((option) => this.getOptionValue(option));\n\n                this.updateModel(event, value);\n            }\n        },\n        onFilterChange(event) {\n            this.$emit('filter', { originalEvent: event, value: event.target.value, filterValue: this.visibleOptions });\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = this.startRangeIndex = -1;\n        },\n        onFilterKeyDown(event) {\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    this.onShiftKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.findFirstFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.findLastFocusedOptionIndex();\n\n            if (this.multiple && event.shiftKey) {\n                this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n            }\n\n            this.changeFocusedOptionIndex(event, optionIndex);\n            event.preventDefault();\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findFirstOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, optionIndex, this.startRangeIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                let metaKey = event.metaKey || event.ctrlKey;\n                let optionIndex = this.findLastOptionIndex();\n\n                if (this.multiple && event.shiftKey && metaKey) {\n                    this.onOptionSelectRange(event, this.startRangeIndex, optionIndex);\n                }\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedOptionIndex !== -1) {\n                if (this.multiple && event.shiftKey) this.onOptionSelectRange(event, this.focusedOptionIndex);\n                else this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        onSpaceKey(event) {\n            event.preventDefault();\n            this.onEnterKey(event);\n        },\n        onShiftKey() {\n            this.startRangeIndex = this.focusedOptionIndex;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isEquals(value1, value2) {\n            return equals(value1, value2, this.equalityKey);\n        },\n        isSelected(option) {\n            const optionValue = this.getOptionValue(option);\n\n            if (this.multiple) return (this.d_value || []).some((value) => this.isEquals(value, optionValue));\n            else return this.isEquals(this.d_value, optionValue);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            if (this.$filled) {\n                if (this.multiple) {\n                    for (let index = this.d_value.length - 1; index >= 0; index--) {\n                        const value = this.d_value[index];\n                        const matchedOptionIndex = this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option) && this.isEquals(value, this.getOptionValue(option)));\n\n                        if (matchedOptionIndex > -1) return matchedOptionIndex;\n                    }\n                } else {\n                    return this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option));\n                }\n            }\n\n            return -1;\n        },\n        findFirstSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findLastSelectedOptionIndex() {\n            return this.$filled ? findLastIndex(this.visibleOptions, (option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findNextSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : -1;\n        },\n        findPrevSelectedOptionIndex(index) {\n            const matchedOptionIndex = this.$filled && index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidSelectedOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : -1;\n        },\n        findNearestSelectedOptionIndex(index, firstCheckUp = false) {\n            let matchedOptionIndex = -1;\n\n            if (this.$filled) {\n                if (firstCheckUp) {\n                    matchedOptionIndex = this.findPrevSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findNextSelectedOptionIndex(index) : matchedOptionIndex;\n                } else {\n                    matchedOptionIndex = this.findNextSelectedOptionIndex(index);\n                    matchedOptionIndex = matchedOptionIndex === -1 ? this.findPrevSelectedOptionIndex(index) : matchedOptionIndex;\n                }\n            }\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findFirstSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findLastSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n        },\n        removeOption(option) {\n            return this.d_value.filter((val) => !equals(val, this.getOptionValue(option), this.equalityKey));\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus && !this.multiple) {\n                    this.onOptionSelect(event, this.visibleOptions[index]);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'nearest', behavior: 'smooth' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled && !this.multiple && this.focused) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex]);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        optionsListFlat() {\n            return this.filterValue ? FilterService.filter(this.options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : this.options;\n        },\n        optionsListGroup() {\n            const filteredOptions = [];\n\n            (this.options || []).forEach((optionGroup) => {\n                const optionGroupChildren = this.getOptionGroupChildren(optionGroup) || [];\n                const filteredChildren = this.filterValue ? FilterService.filter(optionGroupChildren, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale) : optionGroupChildren;\n\n                if (filteredChildren?.length) {\n                    filteredOptions.push({ optionGroup, group: true }, ...filteredChildren);\n                }\n            });\n\n            return filteredOptions;\n        },\n        visibleOptions() {\n            return this.optionGroupLabel ? this.optionsListGroup : this.optionsListFlat;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return isNotEmpty(this.d_value);\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', this.multiple ? this.d_value.length : '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        InputIcon,\n        IconField,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n"],"names":["name","BaseEditableHolder","props","options","Array","optionLabel","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","listStyle","scrollHeight","type","String","dataKey","multiple","Boolean","metaKeySelection","filter","filterPlaceholder","filterLocale","filterMatchMode","filterFields","virtualScrollerOptions","Object","autoOptionFocus","selectOnFocus","focusOnHover","highlightOnSelect","checkmark","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","filterIcon","undefined","striped","tabindex","Number","ariaLabel","ariaLabelledby","style","ListboxStyle","provide","$pcListbox","$parentInstance","BaseListbox","inheritAttrs","emits","list","virtualScroller","optionTouched","startRangeIndex","searchTimeout","searchValue","data","id","$attrs","filterValue","focused","focusedOptionIndex","watch","$attrsId","newValue","UniqueComponentId","autoUpdateModel","mounted","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","resolveFieldData","getOptionValue","getOptionRenderKey","getPTOptions","itemOptions","key","ptm","context","selected","isSelected","disabled","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","length","onFirstHiddenFocus","focus","firstFocusableEl","getFirstFocusableElement","$el","$refs","lastHiddenFocusableElement","tabIndex","isElement","firstHiddenFocusableElement","onLastHiddenFocus","event","relatedTarget","onFocusout","contains","onListFocus","findFirstFocusedOptionIndex","findSelectedOptionIndex","$emit","onListBlur","onListKeyDown","_this2","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onShiftKey","value","isValidOption","map","updateModel","preventDefault","isPrintableCharacter","searchOptions","onOptionSelect","arguments","onOptionSelectMultiple","onOptionSelectSingle","onOptionMouseDown","changeFocusedOptionIndex","onOptionMouseMove","onOptionTouchEnd","onOptionDblClick","item","originalEvent","valueChanged","metaSelection","removeOption","d_value","concat","_toConsumableArray","onOptionSelectRange","_this3","start","end","findNearestSelectedOptionIndex","rangeStart","Math","min","rangeEnd","max","onFilterChange","target","onFilterBlur","onFilterKeyDown","onArrowLeftKey","onEnterKey","optionIndex","findNextOptionIndex","shiftKey","findPrevOptionIndex","findLastFocusedOptionIndex","pressedInInputText","currentTarget","setSelectionRange","selectionStart","findFirstOptionIndex","len","findLastOptionIndex","scrollInView","isOptionMatched","_this$getOptionLabel","toLocaleLowerCase","startsWith","isNotEmpty","isValidSelectedOption","isEquals","value1","value2","equals","equalityKey","_this4","some","_this5","findIndex","_this6","findLastIndex","_this7","matchedOptionIndex","_this8","_this9","$filled","_loop","v","_ret","findFirstSelectedOptionIndex","_this10","findLastSelectedOptionIndex","_this11","findNextSelectedOptionIndex","_this12","findPrevSelectedOptionIndex","_this13","firstCheckUp","selectedIndex","char","_this14","clearTimeout","setTimeout","_this15","val","_this16","$nextTick","focusedOptionId","element","findSingle","scrollIntoView","block","inline","behavior","scrollToIndex","writeValue","listRef","el","contentRef","virtualScrollerRef","computed","optionsListFlat","FilterService","searchFields","optionsListGroup","_this17","filteredOptions","forEach","filteredChildren","push","apply","hasSelectedOption","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","$primevue","config","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","_this18","directives","ripple","Ripple","components","InputText","VirtualScroller","InputIcon","IconField","SearchIcon","CheckIcon","BlankIcon","_openBlock","_createElementBlock","_mergeProps","$data","_ctx","cx","$options","ptmi","_createElementVNode","ref","role","onFocus","$slots","header","_renderSlot","_createVNode","_component_IconField","unstyled","pt","_component_InputText","$event","placeholder","autocomplete","onInput","onBlur","onKeydown","_component_InputIcon","_createBlock","_component_SearchIcon","_component_VirtualScroller","items","height","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","_Fragment","_renderList","i","_withDirectives","onClick","onMousedown","onMousemove","onTouchend","onDblclick","_component_CheckIcon","_component_BlankIcon","_createTextVNode","_toDisplayString","loader","_ref2"],"mappings":"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"}