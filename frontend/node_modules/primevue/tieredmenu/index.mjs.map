{"version":3,"file":"index.mjs","sources":["../../src/tieredmenu/BaseTieredMenu.vue","../../src/tieredmenu/TieredMenuSub.vue","../../src/tieredmenu/TieredMenuSub.vue?vue&type=template&id=0e322c4a&lang.js","../../src/tieredmenu/TieredMenu.vue","../../src/tieredmenu/TieredMenu.vue?vue&type=template&id=493a2993&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport TieredMenuStyle from 'primevue/tieredmenu/style';\n\nexport default {\n    name: 'BaseTieredMenu',\n    extends: BaseComponent,\n    props: {\n        popup: {\n            type: Boolean,\n            default: false\n        },\n        model: {\n            type: Array,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        autoZIndex: {\n            type: Boolean,\n            default: true\n        },\n        baseZIndex: {\n            type: Number,\n            default: 0\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: TieredMenuStyle,\n    provide() {\n        return {\n            $pcTieredMenu: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-tieredmenu\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"level === 0 ? true : visible\" :ref=\"containerRef\" :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <TieredMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        :style=\"sx('submenu', true, { processedItem })\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        role=\"menu\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty } from '@primeuix/utils/object';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'TieredMenuSub',\n    hostName: 'TieredMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    container: null,\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onEnter() {\n            nestedPosition(this.container, this.level);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        },\n        containerRef(el) {\n            this.container = el;\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <transition name=\"p-tieredmenu\" @enter=\"onEnter\" v-bind=\"ptm('menu.transition')\">\n        <ul v-if=\"level === 0 ? true : visible\" :ref=\"containerRef\" :class=\"level === 0 ? cx('rootList') : cx('submenu')\" :tabindex=\"tabindex\" v-bind=\"level === 0 ? ptm('rootList') : ptm('submenu')\">\n            <template v-for=\"(processedItem, index) of items\" :key=\"getItemKey(processedItem)\">\n                <li\n                    v-if=\"isItemVisible(processedItem) && !getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('item', { processedItem }), getItemProp(processedItem, 'class')]\"\n                    role=\"menuitem\"\n                    :aria-label=\"getItemLabel(processedItem)\"\n                    :aria-disabled=\"isItemDisabled(processedItem) || undefined\"\n                    :aria-expanded=\"isItemGroup(processedItem) ? isItemActive(processedItem) : undefined\"\n                    :aria-haspopup=\"isItemGroup(processedItem) && !getItemProp(processedItem, 'to') ? 'menu' : undefined\"\n                    :aria-level=\"level + 1\"\n                    :aria-setsize=\"getAriaSetSize()\"\n                    :aria-posinset=\"getAriaPosInset(index)\"\n                    v-bind=\"getPTOptions(processedItem, index, 'item')\"\n                    :data-p-active=\"isItemActive(processedItem)\"\n                    :data-p-focused=\"isItemFocused(processedItem)\"\n                    :data-p-disabled=\"isItemDisabled(processedItem)\"\n                >\n                    <div\n                        :class=\"cx('itemContent')\"\n                        @click=\"onItemClick($event, processedItem)\"\n                        @mouseenter=\"onItemMouseEnter($event, processedItem)\"\n                        @mousemove=\"onItemMouseMove($event, processedItem)\"\n                        v-bind=\"getPTOptions(processedItem, index, 'itemContent')\"\n                    >\n                        <template v-if=\"!templates.item\">\n                            <a v-ripple :href=\"getItemProp(processedItem, 'url')\" :class=\"cx('itemLink')\" :target=\"getItemProp(processedItem, 'target')\" tabindex=\"-1\" aria-hidden=\"true\" v-bind=\"getPTOptions(processedItem, index, 'itemLink')\">\n                                <component v-if=\"templates.itemicon\" :is=\"templates.itemicon\" :item=\"processedItem.item\" :class=\"cx('itemIcon')\" />\n                                <span v-else-if=\"getItemProp(processedItem, 'icon')\" :class=\"[cx('itemIcon'), getItemProp(processedItem, 'icon')]\" v-bind=\"getPTOptions(processedItem, index, 'itemIcon')\" />\n                                <span :id=\"getItemLabelId(processedItem)\" :class=\"cx('itemLabel')\" v-bind=\"getPTOptions(processedItem, index, 'itemLabel')\">{{ getItemLabel(processedItem) }}</span>\n                                <template v-if=\"getItemProp(processedItem, 'items')\">\n                                    <component v-if=\"templates.submenuicon\" :is=\"templates.submenuicon\" :class=\"cx('submenuIcon')\" :active=\"isItemActive(processedItem)\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                    <AngleRightIcon v-else :class=\"cx('submenuIcon')\" v-bind=\"getPTOptions(processedItem, index, 'submenuIcon')\" />\n                                </template>\n                            </a>\n                        </template>\n                        <component v-else :is=\"templates.item\" :item=\"processedItem.item\" :hasSubmenu=\"getItemProp(processedItem, 'items')\" :label=\"getItemLabel(processedItem)\" :props=\"getMenuItemProps(processedItem, index)\"></component>\n                    </div>\n                    <TieredMenuSub\n                        v-if=\"isItemVisible(processedItem) && isItemGroup(processedItem)\"\n                        :id=\"getItemId(processedItem) + '_list'\"\n                        :style=\"sx('submenu', true, { processedItem })\"\n                        :aria-labelledby=\"getItemLabelId(processedItem)\"\n                        role=\"menu\"\n                        :menuId=\"menuId\"\n                        :focusedItemId=\"focusedItemId\"\n                        :items=\"processedItem.items\"\n                        :templates=\"templates\"\n                        :activeItemPath=\"activeItemPath\"\n                        :level=\"level + 1\"\n                        :visible=\"isItemActive(processedItem) && isItemGroup(processedItem)\"\n                        :pt=\"pt\"\n                        :unstyled=\"unstyled\"\n                        @item-click=\"$emit('item-click', $event)\"\n                        @item-mouseenter=\"$emit('item-mouseenter', $event)\"\n                        @item-mousemove=\"$emit('item-mousemove', $event)\"\n                    />\n                </li>\n                <li\n                    v-if=\"isItemVisible(processedItem) && getItemProp(processedItem, 'separator')\"\n                    :id=\"getItemId(processedItem)\"\n                    :style=\"getItemProp(processedItem, 'style')\"\n                    :class=\"[cx('separator'), getItemProp(processedItem, 'class')]\"\n                    role=\"separator\"\n                    v-bind=\"ptm('separator')\"\n                ></li>\n            </template>\n        </ul>\n    </transition>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { nestedPosition } from '@primeuix/utils/dom';\nimport { resolve, isNotEmpty } from '@primeuix/utils/object';\nimport AngleRightIcon from '@primevue/icons/angleright';\nimport Ripple from 'primevue/ripple';\nimport { mergeProps } from 'vue';\n\nexport default {\n    name: 'TieredMenuSub',\n    hostName: 'TieredMenu',\n    extends: BaseComponent,\n    emits: ['item-click', 'item-mouseenter', 'item-mousemove'],\n    container: null,\n    props: {\n        menuId: {\n            type: String,\n            default: null\n        },\n        focusedItemId: {\n            type: String,\n            default: null\n        },\n        items: {\n            type: Array,\n            default: null\n        },\n        visible: {\n            type: Boolean,\n            default: false\n        },\n        level: {\n            type: Number,\n            default: 0\n        },\n        templates: {\n            type: Object,\n            default: null\n        },\n        activeItemPath: {\n            type: Object,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    methods: {\n        getItemId(processedItem) {\n            return `${this.menuId}_${processedItem.key}`;\n        },\n        getItemKey(processedItem) {\n            return this.getItemId(processedItem);\n        },\n        getItemProp(processedItem, name, params) {\n            return processedItem && processedItem.item ? resolve(processedItem.item[name], params) : undefined;\n        },\n        getItemLabel(processedItem) {\n            return this.getItemProp(processedItem, 'label');\n        },\n        getItemLabelId(processedItem) {\n            return `${this.menuId}_${processedItem.key}_label`;\n        },\n        getPTOptions(processedItem, index, key) {\n            return this.ptm(key, {\n                context: {\n                    item: processedItem,\n                    index,\n                    active: this.isItemActive(processedItem),\n                    focused: this.isItemFocused(processedItem),\n                    disabled: this.isItemDisabled(processedItem)\n                }\n            });\n        },\n        isItemActive(processedItem) {\n            return this.activeItemPath.some((path) => path.key === processedItem.key);\n        },\n        isItemVisible(processedItem) {\n            return this.getItemProp(processedItem, 'visible') !== false;\n        },\n        isItemDisabled(processedItem) {\n            return this.getItemProp(processedItem, 'disabled');\n        },\n        isItemFocused(processedItem) {\n            return this.focusedItemId === this.getItemId(processedItem);\n        },\n        isItemGroup(processedItem) {\n            return isNotEmpty(processedItem.items);\n        },\n        onEnter() {\n            nestedPosition(this.container, this.level);\n        },\n        onItemClick(event, processedItem) {\n            this.getItemProp(processedItem, 'command', { originalEvent: event, item: processedItem.item });\n            this.$emit('item-click', { originalEvent: event, processedItem, isFocus: true });\n        },\n        onItemMouseEnter(event, processedItem) {\n            this.$emit('item-mouseenter', { originalEvent: event, processedItem });\n        },\n        onItemMouseMove(event, processedItem) {\n            this.$emit('item-mousemove', { originalEvent: event, processedItem });\n        },\n        getAriaSetSize() {\n            return this.items.filter((processedItem) => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n        },\n        getAriaPosInset(index) {\n            return index - this.items.slice(0, index).filter((processedItem) => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n        },\n        getMenuItemProps(processedItem, index) {\n            return {\n                action: mergeProps(\n                    {\n                        class: this.cx('itemLink'),\n                        tabindex: -1,\n                        'aria-hidden': true\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLink')\n                ),\n                icon: mergeProps(\n                    {\n                        class: [this.cx('itemIcon'), this.getItemProp(processedItem, 'icon')]\n                    },\n                    this.getPTOptions(processedItem, index, 'itemIcon')\n                ),\n                label: mergeProps(\n                    {\n                        class: this.cx('itemLabel')\n                    },\n                    this.getPTOptions(processedItem, index, 'itemLabel')\n                ),\n                submenuicon: mergeProps(\n                    {\n                        class: this.cx('submenuIcon')\n                    },\n                    this.getPTOptions(processedItem, index, 'submenuIcon')\n                )\n            };\n        },\n        containerRef(el) {\n            this.container = el;\n        }\n    },\n    components: {\n        AngleRightIcon: AngleRightIcon\n    },\n    directives: {\n        ripple: Ripple\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <TieredMenuSub\n                    :ref=\"menubarRef\"\n                    :id=\"id + '_list'\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    role=\"menubar\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-disabled=\"disabled || undefined\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemId : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport { focus, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { isNotEmpty, resolve, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseTieredMenu from './BaseTieredMenu.vue';\nimport TieredMenuSub from './TieredMenuSub.vue';\n\nexport default {\n    name: 'TieredMenu',\n    extends: BaseTieredMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'before-show', 'before-hide', 'hide', 'show'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    target: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: !this.popup,\n            submenuVisible: false,\n            dirty: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (!this.popup) {\n                if (isNotEmpty(newPath)) {\n                    this.bindOutsideClickListener();\n                    this.bindResizeListener();\n                } else {\n                    this.unbindOutsideClickListener();\n                    this.unbindResizeListener();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide(event, true) : this.show(event);\n        },\n        show(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-show');\n                this.visible = true;\n                this.target = this.target || event.currentTarget;\n                this.relatedTarget = event.relatedTarget || null;\n            }\n\n            isFocus && focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-hide');\n                this.visible = false;\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && focus(this.relatedTarget || this.target || this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (!this.popup) {\n                this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide(event, true);\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                if (!this.popup) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n                }\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.popup || this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n                this.popup && focus(this.target);\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            focus(this.menubar);\n            this.scrollInView();\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.container = null;\n            this.dirty = false;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.popup ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, (event) => {\n                    this.hide(event, true);\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        TieredMenuSub: TieredMenuSub,\n        Portal: Portal\n    }\n};\n</script>\n","<template>\n    <Portal :appendTo=\"appendTo\" :disabled=\"!popup\">\n        <transition name=\"p-connected-overlay\" @enter=\"onEnter\" @after-enter=\"onAfterEnter\" @leave=\"onLeave\" @after-leave=\"onAfterLeave\" v-bind=\"ptm('transition')\">\n            <div v-if=\"visible\" :ref=\"containerRef\" :id=\"id\" :class=\"cx('root')\" @click=\"onOverlayClick\" v-bind=\"ptmi('root')\">\n                <div v-if=\"$slots.start\" :class=\"cx('start')\" v-bind=\"ptm('start')\">\n                    <slot name=\"start\"></slot>\n                </div>\n                <TieredMenuSub\n                    :ref=\"menubarRef\"\n                    :id=\"id + '_list'\"\n                    :tabindex=\"!disabled ? tabindex : -1\"\n                    role=\"menubar\"\n                    :aria-label=\"ariaLabel\"\n                    :aria-labelledby=\"ariaLabelledby\"\n                    :aria-disabled=\"disabled || undefined\"\n                    aria-orientation=\"vertical\"\n                    :aria-activedescendant=\"focused ? focusedItemId : undefined\"\n                    :menuId=\"id\"\n                    :focusedItemId=\"focused ? focusedItemId : undefined\"\n                    :items=\"processedItems\"\n                    :templates=\"$slots\"\n                    :activeItemPath=\"activeItemPath\"\n                    :level=\"0\"\n                    :visible=\"submenuVisible\"\n                    :pt=\"pt\"\n                    :unstyled=\"unstyled\"\n                    @focus=\"onFocus\"\n                    @blur=\"onBlur\"\n                    @keydown=\"onKeyDown\"\n                    @item-click=\"onItemClick\"\n                    @item-mouseenter=\"onItemMouseEnter\"\n                    @item-mousemove=\"onItemMouseMove\"\n                />\n                <div v-if=\"$slots.end\" :class=\"cx('end')\" v-bind=\"ptm('end')\">\n                    <slot name=\"end\"></slot>\n                </div>\n            </div>\n        </transition>\n    </Portal>\n</template>\n\n<script>\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport { focus, findSingle, addStyle, absolutePosition, getOuterWidth, isTouchDevice } from '@primeuix/utils/dom';\nimport { isNotEmpty, resolve, isPrintableCharacter, isEmpty, findLastIndex } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport BaseTieredMenu from './BaseTieredMenu.vue';\nimport TieredMenuSub from './TieredMenuSub.vue';\n\nexport default {\n    name: 'TieredMenu',\n    extends: BaseTieredMenu,\n    inheritAttrs: false,\n    emits: ['focus', 'blur', 'before-show', 'before-hide', 'hide', 'show'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    target: null,\n    container: null,\n    menubar: null,\n    searchTimeout: null,\n    searchValue: null,\n    data() {\n        return {\n            id: this.$attrs.id,\n            focused: false,\n            focusedItemInfo: { index: -1, level: 0, parentKey: '' },\n            activeItemPath: [],\n            visible: !this.popup,\n            submenuVisible: false,\n            dirty: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        activeItemPath(newPath) {\n            if (!this.popup) {\n                if (isNotEmpty(newPath)) {\n                    this.bindOutsideClickListener();\n                    this.bindResizeListener();\n                } else {\n                    this.unbindOutsideClickListener();\n                    this.unbindResizeListener();\n                }\n            }\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.container && this.autoZIndex) {\n            ZIndex.clear(this.container);\n        }\n\n        this.target = null;\n        this.container = null;\n    },\n    methods: {\n        getItemProp(item, name) {\n            return item ? resolve(item[name]) : undefined;\n        },\n        getItemLabel(item) {\n            return this.getItemProp(item, 'label');\n        },\n        isItemDisabled(item) {\n            return this.getItemProp(item, 'disabled');\n        },\n        isItemVisible(item) {\n            return this.getItemProp(item, 'visible') !== false;\n        },\n        isItemGroup(item) {\n            return isNotEmpty(this.getItemProp(item, 'items'));\n        },\n        isItemSeparator(item) {\n            return this.getItemProp(item, 'separator');\n        },\n        getProccessedItemLabel(processedItem) {\n            return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n        },\n        isProccessedItemGroup(processedItem) {\n            return processedItem && isNotEmpty(processedItem.items);\n        },\n        toggle(event) {\n            this.visible ? this.hide(event, true) : this.show(event);\n        },\n        show(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-show');\n                this.visible = true;\n                this.target = this.target || event.currentTarget;\n                this.relatedTarget = event.relatedTarget || null;\n            }\n\n            isFocus && focus(this.menubar);\n        },\n        hide(event, isFocus) {\n            if (this.popup) {\n                this.$emit('before-hide');\n                this.visible = false;\n            }\n\n            this.activeItemPath = [];\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n\n            isFocus && focus(this.relatedTarget || this.target || this.menubar);\n            this.dirty = false;\n        },\n        onFocus(event) {\n            this.focused = true;\n\n            if (!this.popup) {\n                this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : { index: this.findFirstFocusedItemIndex(), level: 0, parentKey: '' };\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedItemInfo = { index: -1, level: 0, parentKey: '' };\n            this.searchValue = '';\n            this.dirty = false;\n            this.$emit('blur', event);\n        },\n        onKeyDown(event) {\n            if (this.disabled) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event);\n                    break;\n\n                case 'ArrowLeft':\n                    this.onArrowLeftKey(event);\n                    break;\n\n                case 'ArrowRight':\n                    this.onArrowRightKey(event);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'PageDown':\n                case 'PageUp':\n                case 'Backspace':\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        this.searchItems(event, event.key);\n                    }\n\n                    break;\n            }\n        },\n        onItemChange(event) {\n            const { processedItem, isFocus } = event;\n\n            if (isEmpty(processedItem)) return;\n\n            const { index, key, level, parentKey, items } = processedItem;\n            const grouped = isNotEmpty(items);\n\n            const activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== parentKey && p.parentKey !== key);\n\n            if (grouped) {\n                activeItemPath.push(processedItem);\n                this.submenuVisible = true;\n            }\n\n            this.focusedItemInfo = { index, level, parentKey };\n            this.activeItemPath = activeItemPath;\n\n            grouped && (this.dirty = true);\n            isFocus && focus(this.menubar);\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.target\n            });\n        },\n        onItemClick(event) {\n            const { originalEvent, processedItem } = event;\n            const grouped = this.isProccessedItemGroup(processedItem);\n            const root = isEmpty(processedItem.parent);\n            const selected = this.isSelected(processedItem);\n\n            if (selected) {\n                const { index, key, level, parentKey } = processedItem;\n\n                this.activeItemPath = this.activeItemPath.filter((p) => key !== p.key && key.startsWith(p.key));\n                this.focusedItemInfo = { index, level, parentKey };\n\n                this.dirty = !root;\n                focus(this.menubar);\n            } else {\n                if (grouped) {\n                    this.onItemChange(event);\n                } else {\n                    const rootProcessedItem = root ? processedItem : this.activeItemPath.find((p) => p.parentKey === '');\n\n                    this.hide(originalEvent);\n                    this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n\n                    focus(this.menubar);\n                }\n            }\n        },\n        onItemMouseEnter(event) {\n            if (this.dirty) {\n                this.onItemChange(event);\n            }\n        },\n        onItemMouseMove(event) {\n            if (this.focused) {\n                this.changeFocusedItemIndex(event, event.processedItem.index);\n            }\n        },\n        onArrowDownKey(event) {\n            const itemIndex = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();\n\n            this.changeFocusedItemIndex(event, itemIndex);\n            event.preventDefault();\n        },\n        onArrowUpKey(event) {\n            if (event.altKey) {\n                if (this.focusedItemInfo.index !== -1) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && this.onItemChange({ originalEvent: event, processedItem });\n                }\n\n                this.popup && this.hide(event, true);\n                event.preventDefault();\n            } else {\n                const itemIndex = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();\n\n                this.changeFocusedItemIndex(event, itemIndex);\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const parentItem = this.activeItemPath.find((p) => p.key === processedItem.parentKey);\n            const root = isEmpty(processedItem.parent);\n\n            if (!root) {\n                this.focusedItemInfo = { index: -1, parentKey: parentItem ? parentItem.parentKey : '' };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            this.activeItemPath = this.activeItemPath.filter((p) => p.parentKey !== this.focusedItemInfo.parentKey);\n\n            event.preventDefault();\n        },\n        onArrowRightKey(event) {\n            const processedItem = this.visibleItems[this.focusedItemInfo.index];\n            const grouped = this.isProccessedItemGroup(processedItem);\n\n            if (grouped) {\n                this.onItemChange({ originalEvent: event, processedItem });\n                this.focusedItemInfo = { index: -1, parentKey: processedItem.key };\n                this.searchValue = '';\n                this.onArrowDownKey(event);\n            }\n\n            event.preventDefault();\n        },\n        onHomeKey(event) {\n            this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n            event.preventDefault();\n        },\n        onEndKey(event) {\n            this.changeFocusedItemIndex(event, this.findLastItemIndex());\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const element = findSingle(this.menubar, `li[id=\"${`${this.focusedItemId}`}\"]`);\n                const anchorElement = element && findSingle(element, '[data-pc-section=\"itemlink\"]');\n\n                anchorElement ? anchorElement.click() : element && element.click();\n\n                if (!this.popup) {\n                    const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                    const grouped = this.isProccessedItemGroup(processedItem);\n\n                    !grouped && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());\n                }\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event) {\n            this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            if (this.popup || this.focusedItemInfo.level !== 0) {\n                const _focusedItemInfo = this.focusedItemInfo;\n\n                this.hide(event, false);\n                this.focusedItemInfo = { index: Number(_focusedItemInfo.parentKey.split('_')[0]), level: 0, parentKey: '' };\n                this.popup && focus(this.target);\n            }\n\n            event.preventDefault();\n        },\n        onTabKey(event) {\n            if (this.focusedItemInfo.index !== -1) {\n                const processedItem = this.visibleItems[this.focusedItemInfo.index];\n                const grouped = this.isProccessedItemGroup(processedItem);\n\n                !grouped && this.onItemChange({ originalEvent: event, processedItem });\n            }\n\n            this.hide();\n        },\n        onEnter(el) {\n            if (this.autoZIndex) {\n                ZIndex.set('menu', el, this.baseZIndex + this.$primevue.config.zIndex.menu);\n            }\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            focus(this.menubar);\n            this.scrollInView();\n        },\n        onAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            this.$emit('hide');\n            this.container = null;\n            this.dirty = false;\n        },\n        onAfterLeave(el) {\n            if (this.autoZIndex) {\n                ZIndex.clear(el);\n            }\n        },\n        alignOverlay() {\n            absolutePosition(this.container, this.target);\n            const targetWidth = getOuterWidth(this.target);\n\n            if (targetWidth > getOuterWidth(this.container)) {\n                this.container.style.minWidth = getOuterWidth(this.target) + 'px';\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    const isOutsideContainer = this.container && !this.container.contains(event.target);\n                    const isOutsideTarget = this.popup ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n\n                    if (isOutsideContainer && isOutsideTarget) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, (event) => {\n                    this.hide(event, true);\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = (event) => {\n                    if (!isTouchDevice()) {\n                        this.hide(event, true);\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isItemMatched(processedItem) {\n            return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem)?.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n        },\n        isValidItem(processedItem) {\n            return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item) && this.isItemVisible(processedItem.item);\n        },\n        isValidSelectedItem(processedItem) {\n            return this.isValidItem(processedItem) && this.isSelected(processedItem);\n        },\n        isSelected(processedItem) {\n            return this.activeItemPath.some((p) => p.key === processedItem.key);\n        },\n        findFirstItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidItem(processedItem));\n        },\n        findLastItemIndex() {\n            return findLastIndex(this.visibleItems, (processedItem) => this.isValidItem(processedItem));\n        },\n        findNextItemIndex(index) {\n            const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex((processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n        },\n        findPrevItemIndex(index) {\n            const matchedItemIndex = index > 0 ? findLastIndex(this.visibleItems.slice(0, index), (processedItem) => this.isValidItem(processedItem)) : -1;\n\n            return matchedItemIndex > -1 ? matchedItemIndex : index;\n        },\n        findSelectedItemIndex() {\n            return this.visibleItems.findIndex((processedItem) => this.isValidSelectedItem(processedItem));\n        },\n        findFirstFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n        },\n        findLastFocusedItemIndex() {\n            const selectedIndex = this.findSelectedItemIndex();\n\n            return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n        },\n        searchItems(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let itemIndex = -1;\n            let matched = false;\n\n            if (this.focusedItemInfo.index !== -1) {\n                itemIndex = this.visibleItems.slice(this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem));\n                itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex((processedItem) => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo.index;\n            } else {\n                itemIndex = this.visibleItems.findIndex((processedItem) => this.isItemMatched(processedItem));\n            }\n\n            if (itemIndex !== -1) {\n                matched = true;\n            }\n\n            if (itemIndex === -1 && this.focusedItemInfo.index === -1) {\n                itemIndex = this.findFirstFocusedItemIndex();\n            }\n\n            if (itemIndex !== -1) {\n                this.changeFocusedItemIndex(event, itemIndex);\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedItemIndex(event, index) {\n            if (this.focusedItemInfo.index !== index) {\n                this.focusedItemInfo.index = index;\n                this.scrollInView();\n            }\n        },\n        scrollInView(index = -1) {\n            const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n            const element = findSingle(this.menubar, `li[id=\"${id}\"]`);\n\n            if (element) {\n                element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n            }\n        },\n        createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n            const processedItems = [];\n\n            items &&\n                items.forEach((item, index) => {\n                    const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n                    const newItem = {\n                        item,\n                        index,\n                        level,\n                        key,\n                        parent,\n                        parentKey\n                    };\n\n                    newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n                    processedItems.push(newItem);\n                });\n\n            return processedItems;\n        },\n        containerRef(el) {\n            this.container = el;\n        },\n        menubarRef(el) {\n            this.menubar = el ? el.$el : undefined;\n        }\n    },\n    computed: {\n        processedItems() {\n            return this.createProcessedItems(this.model || []);\n        },\n        visibleItems() {\n            const processedItem = this.activeItemPath.find((p) => p.key === this.focusedItemInfo.parentKey);\n\n            return processedItem ? processedItem.items : this.processedItems;\n        },\n        focusedItemId() {\n            return this.focusedItemInfo.index !== -1 ? `${this.id}${isNotEmpty(this.focusedItemInfo.parentKey) ? '_' + this.focusedItemInfo.parentKey : ''}_${this.focusedItemInfo.index}` : null;\n        }\n    },\n    components: {\n        TieredMenuSub: TieredMenuSub,\n        Portal: Portal\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","popup","type","Boolean","model","Array","appendTo","String","Object","autoZIndex","baseZIndex","Number","disabled","tabindex","ariaLabelledby","ariaLabel","style","TieredMenuStyle","provide","$pcTieredMenu","$parentInstance","hostName","emits","container","menuId","focusedItemId","items","visible","level","templates","activeItemPath","methods","getItemId","processedItem","concat","key","getItemKey","getItemProp","params","item","resolve","undefined","getItemLabel","getItemLabelId","getPTOptions","index","ptm","context","active","isItemActive","focused","isItemFocused","isItemDisabled","some","path","isItemVisible","isItemGroup","isNotEmpty","onEnter","nestedPosition","onItemClick","event","originalEvent","$emit","isFocus","onItemMouseEnter","onItemMouseMove","getAriaSetSize","_this","filter","length","getAriaPosInset","_this2","slice","getMenuItemProps","action","mergeProps","cx","icon","label","submenuicon","containerRef","el","components","AngleRightIcon","directives","ripple","Ripple","_openBlock","_createBlock","_Transition","_mergeProps","$options","_ctx","$props","_createElementBlock","ref","_Fragment","_renderList","id","role","_createElementVNode","onClick","$event","onMouseenter","onMousemove","_withDirectives","href","target","itemicon","_resolveDynamicComponent","_toDisplayString","_hoisted_5","_component_AngleRightIcon","hasSubmenu","_component_TieredMenuSub","_normalizeStyle","sx","pt","unstyled","_cache","onItemMouseenter","onItemMousemove","_hoisted_6","BaseTieredMenu","inheritAttrs","outsideClickListener","scrollHandler","resizeListener","menubar","searchTimeout","searchValue","data","$attrs","focusedItemInfo","parentKey","submenuVisible","dirty","watch","$attrsId","newValue","UniqueComponentId","newPath","bindOutsideClickListener","bindResizeListener","unbindOutsideClickListener","unbindResizeListener","mounted","beforeUnmount","destroy","ZIndex","clear","isItemSeparator","getProccessedItemLabel","isProccessedItemGroup","toggle","hide","show","currentTarget","relatedTarget","focus","onFocus","findFirstFocusedItemIndex","onBlur","onKeyDown","preventDefault","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onArrowRightKey","onHomeKey","onEndKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","isPrintableCharacter","searchItems","onItemChange","isEmpty","grouped","p","push","onOverlayClick","OverlayEventBus","emit","root","parent","selected","isSelected","startsWith","rootProcessedItem","find","changeFocusedItemIndex","itemIndex","findNextItemIndex","altKey","visibleItems","findPrevItemIndex","findLastFocusedItemIndex","parentItem","findFirstItemIndex","findLastItemIndex","element","findSingle","anchorElement","click","_focusedItemInfo","split","set","$primevue","config","zIndex","menu","addStyle","position","top","left","alignOverlay","scrollInView","onAfterEnter","bindScrollListener","onLeave","unbindScrollListener","onAfterLeave","absolutePosition","targetWidth","getOuterWidth","minWidth","isOutsideContainer","contains","isOutsideTarget","document","addEventListener","removeEventListener","_this3","ConnectedOverlayScrollHandler","_this4","isTouchDevice","window","isItemMatched","_this$getProccessedIt","isValidItem","toLocaleLowerCase","isValidSelectedItem","_this5","findIndex","_this6","findLastIndex","_this7","matchedItemIndex","_this8","findSelectedItemIndex","_this9","selectedIndex","char","_this10","matched","clearTimeout","setTimeout","scrollIntoView","block","inline","createProcessedItems","_this11","arguments","processedItems","forEach","newItem","menubarRef","$el","computed","_this12","TieredMenuSub","Portal","_component_Portal","_createVNode","$data","apply","ptmi","$slots","start","_renderSlot","onKeydown","end"],"mappings":"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"}