{"version":3,"file":"index.mjs","sources":["../../src/chart/BaseChart.vue","../../src/chart/Chart.vue","../../src/chart/Chart.vue?vue&type=template&id=f9908118&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ChartStyle from 'primevue/chart/style';\n\nexport default {\n    name: 'BaseChart',\n    extends: BaseComponent,\n    props: {\n        type: String,\n        data: null,\n        options: null,\n        plugins: null,\n        width: {\n            type: Number,\n            default: 300\n        },\n        height: {\n            type: Number,\n            default: 150\n        },\n        canvasProps: {\n            type: null,\n            default: null\n        }\n    },\n    style: ChartStyle,\n    provide() {\n        return {\n            $pcChart: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :style=\"sx('root')\" v-bind=\"ptmi('root')\">\n        <canvas ref=\"canvas\" :width=\"width\" :height=\"height\" @click=\"onCanvasClick($event)\" v-bind=\"{ ...canvasProps, ...ptm('canvas') }\"></canvas>\n    </div>\n</template>\n\n<script>\nimport BaseChart from './BaseChart.vue';\n\nexport default {\n    name: 'Chart',\n    extends: BaseChart,\n    inheritAttrs: false,\n    emits: ['select', 'loaded'],\n    chart: null,\n    watch: {\n        /*\n         * Use deep watch to enable triggering watch for changes within structure\n         * otherwise the entire data object needs to be replaced to trigger watch\n         */\n        data: {\n            handler() {\n                this.reinit();\n            },\n            deep: true\n        },\n        type() {\n            this.reinit();\n        },\n        options() {\n            this.reinit();\n        }\n    },\n    mounted() {\n        this.initChart();\n    },\n    beforeUnmount() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    },\n    methods: {\n        initChart() {\n            import('chart.js/auto').then((module) => {\n                if (this.chart) {\n                    this.chart.destroy();\n                    this.chart = null;\n                }\n\n                if (module && module.default) {\n                    this.chart = new module.default(this.$refs.canvas, {\n                        type: this.type,\n                        data: this.data,\n                        options: this.options,\n                        plugins: this.plugins\n                    });\n                }\n\n                this.$emit('loaded', this.chart);\n            });\n        },\n        getCanvas() {\n            return this.$canvas;\n        },\n        getChart() {\n            return this.chart;\n        },\n        getBase64Image() {\n            return this.chart.toBase64Image();\n        },\n        refresh() {\n            if (this.chart) {\n                this.chart.update();\n            }\n        },\n        reinit() {\n            this.initChart();\n        },\n        onCanvasClick(event) {\n            if (this.chart) {\n                const element = this.chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n                const dataset = this.chart.getElementsAtEventForMode(event, 'dataset', { intersect: true }, false);\n\n                if (element && element[0] && dataset) {\n                    this.$emit('select', { originalEvent: event, element: element[0], dataset: dataset });\n                }\n            }\n        },\n        generateLegend() {\n            if (this.chart) {\n                return this.chart.generateLegend();\n            }\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :style=\"sx('root')\" v-bind=\"ptmi('root')\">\n        <canvas ref=\"canvas\" :width=\"width\" :height=\"height\" @click=\"onCanvasClick($event)\" v-bind=\"{ ...canvasProps, ...ptm('canvas') }\"></canvas>\n    </div>\n</template>\n\n<script>\nimport BaseChart from './BaseChart.vue';\n\nexport default {\n    name: 'Chart',\n    extends: BaseChart,\n    inheritAttrs: false,\n    emits: ['select', 'loaded'],\n    chart: null,\n    watch: {\n        /*\n         * Use deep watch to enable triggering watch for changes within structure\n         * otherwise the entire data object needs to be replaced to trigger watch\n         */\n        data: {\n            handler() {\n                this.reinit();\n            },\n            deep: true\n        },\n        type() {\n            this.reinit();\n        },\n        options() {\n            this.reinit();\n        }\n    },\n    mounted() {\n        this.initChart();\n    },\n    beforeUnmount() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    },\n    methods: {\n        initChart() {\n            import('chart.js/auto').then((module) => {\n                if (this.chart) {\n                    this.chart.destroy();\n                    this.chart = null;\n                }\n\n                if (module && module.default) {\n                    this.chart = new module.default(this.$refs.canvas, {\n                        type: this.type,\n                        data: this.data,\n                        options: this.options,\n                        plugins: this.plugins\n                    });\n                }\n\n                this.$emit('loaded', this.chart);\n            });\n        },\n        getCanvas() {\n            return this.$canvas;\n        },\n        getChart() {\n            return this.chart;\n        },\n        getBase64Image() {\n            return this.chart.toBase64Image();\n        },\n        refresh() {\n            if (this.chart) {\n                this.chart.update();\n            }\n        },\n        reinit() {\n            this.initChart();\n        },\n        onCanvasClick(event) {\n            if (this.chart) {\n                const element = this.chart.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false);\n                const dataset = this.chart.getElementsAtEventForMode(event, 'dataset', { intersect: true }, false);\n\n                if (element && element[0] && dataset) {\n                    this.$emit('select', { originalEvent: event, element: element[0], dataset: dataset });\n                }\n            }\n        },\n        generateLegend() {\n            if (this.chart) {\n                return this.chart.generateLegend();\n            }\n        }\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","type","String","data","options","plugins","width","Number","height","canvasProps","style","ChartStyle","provide","$pcChart","$parentInstance","BaseChart","inheritAttrs","emits","chart","watch","handler","reinit","deep","mounted","initChart","beforeUnmount","destroy","methods","_this","then","module","$refs","canvas","$emit","getCanvas","$canvas","getChart","getBase64Image","toBase64Image","refresh","update","onCanvasClick","event","element","getElementsAtEventForMode","intersect","dataset","originalEvent","generateLegend","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","sx","ptmi","_createElementVNode","ref","onClick","_cache","$event","$options","_objectSpread","ptm","_hoisted_1"],"mappings":"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"}