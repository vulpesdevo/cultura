{"version":3,"file":"index.mjs","sources":["../../src/deferredcontent/DeferredContent.vue","../../src/deferredcontent/DeferredContent.vue?vue&type=template&id=a323cf8a&lang.js"],"sourcesContent":["<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" v-bind=\"ptmi('root')\">\n        <slot v-if=\"loaded\"></slot>\n    </div>\n</template>\n\n<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport DeferredContentStyle from 'primevue/deferredcontent/style';\n\nexport default {\n    name: 'DeferredContent',\n    extends: BaseComponent,\n    inheritAttrs: false,\n    emits: ['load'],\n    style: DeferredContentStyle,\n    data() {\n        return {\n            loaded: false\n        };\n    },\n    mounted() {\n        if (!this.loaded) {\n            if (this.shouldLoad()) this.load();\n            else this.bindScrollListener();\n        }\n    },\n    beforeUnmount() {\n        this.unbindScrollListener();\n    },\n    methods: {\n        bindScrollListener() {\n            this.documentScrollListener = () => {\n                if (this.shouldLoad()) {\n                    this.load();\n                    this.unbindScrollListener();\n                }\n            };\n\n            window.addEventListener('scroll', this.documentScrollListener);\n        },\n        unbindScrollListener() {\n            if (this.documentScrollListener) {\n                window.removeEventListener('scroll', this.documentScrollListener);\n                this.documentScrollListener = null;\n            }\n        },\n        shouldLoad() {\n            if (this.loaded) {\n                return false;\n            } else {\n                const rect = this.$refs.container.getBoundingClientRect();\n                const docElement = document.documentElement;\n                const winHeight = docElement.clientHeight;\n\n                return winHeight >= rect.top;\n            }\n        },\n        load(event) {\n            this.loaded = true;\n            this.$emit('load', event);\n        }\n    }\n};\n</script>\n"],"names":["name","BaseComponent","inheritAttrs","emits","style","DeferredContentStyle","data","loaded","mounted","shouldLoad","load","bindScrollListener","beforeUnmount","unbindScrollListener","methods","_this","documentScrollListener","window","addEventListener","removeEventListener","rect","$refs","container","getBoundingClientRect","docElement","document","documentElement","winHeight","clientHeight","top","event","$emit","_openBlock","_createElementBlock","_mergeProps","ref","_ctx","ptmi","$data","_renderSlot","$slots","key"],"mappings":";;;;AAUA,aAAe;AACXA,EAAAA,IAAI,EAAE,iBAAiB;AACvB,EAAA,SAAA,EAASC,aAAa;AACtBC,EAAAA,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE,CAAC,MAAM,CAAC;AACfC,EAAAA,KAAK,EAAEC,oBAAoB;EAC3BC,IAAI,EAAA,SAAJA,IAAIA,GAAG;IACH,OAAO;AACHC,MAAAA,MAAM,EAAE;KACX;GACJ;EACDC,OAAO,EAAA,SAAPA,OAAOA,GAAG;AACN,IAAA,IAAI,CAAC,IAAI,CAACD,MAAM,EAAE;AACd,MAAA,IAAI,IAAI,CAACE,UAAU,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,CAAA,KAC7B,IAAI,CAACC,kBAAkB,EAAE;AAClC;GACH;EACDC,aAAa,EAAA,SAAbA,aAAaA,GAAG;IACZ,IAAI,CAACC,oBAAoB,EAAE;GAC9B;AACDC,EAAAA,OAAO,EAAE;IACLH,kBAAkB,EAAA,SAAlBA,kBAAkBA,GAAG;AAAA,MAAA,IAAAI,KAAA,GAAA,IAAA;MACjB,IAAI,CAACC,sBAAuB,GAAE,YAAM;AAChC,QAAA,IAAID,KAAI,CAACN,UAAU,EAAE,EAAE;UACnBM,KAAI,CAACL,IAAI,EAAE;UACXK,KAAI,CAACF,oBAAoB,EAAE;AAC/B;OACH;MAEDI,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACF,sBAAsB,CAAC;KACjE;IACDH,oBAAoB,EAAA,SAApBA,oBAAoBA,GAAG;MACnB,IAAI,IAAI,CAACG,sBAAsB,EAAE;QAC7BC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACH,sBAAsB,CAAC;QACjE,IAAI,CAACA,sBAAuB,GAAE,IAAI;AACtC;KACH;IACDP,UAAU,EAAA,SAAVA,UAAUA,GAAG;MACT,IAAI,IAAI,CAACF,MAAM,EAAE;AACb,QAAA,OAAO,KAAK;AAChB,OAAE,MAAK;QACH,IAAMa,IAAG,GAAI,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,qBAAqB,EAAE;AACzD,QAAA,IAAMC,aAAaC,QAAQ,CAACC,eAAe;AAC3C,QAAA,IAAMC,SAAQ,GAAIH,UAAU,CAACI,YAAY;AAEzC,QAAA,OAAOD,SAAQ,IAAKP,IAAI,CAACS,GAAG;AAChC;KACH;AACDnB,IAAAA,IAAI,EAAJA,SAAAA,IAAIA,CAACoB,KAAK,EAAE;MACR,IAAI,CAACvB,MAAO,GAAE,IAAI;AAClB,MAAA,IAAI,CAACwB,KAAK,CAAC,MAAM,EAAED,KAAK,CAAC;AAC7B;AACJ;AACJ,CAAC;;;EC9DG,OAAAE,SAAA,EAAA,EAAAC,kBAAA,CAEK,OAFLC,UAEK,CAAA;AAFAC,IAAAA,GAAG,EAAC;KAAoBC,IAAI,CAAAC,IAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CACjBC,KAAM,CAAA/B,MAAA,GAAlBgC,UAA0B,CAAAH,IAAA,CAAAI,MAAA,EAAA,SAAA,EAAA;AAAAC,IAAAA,GAAA,EAAA;GAAA,CAAA;;;;;;;"}