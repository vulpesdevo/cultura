{"version":3,"file":"index.mjs","sources":["../../src/editor/BaseEditor.vue","../../src/editor/Editor.vue","../../src/editor/Editor.vue?vue&type=template&id=46ead690&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport EditorStyle from 'primevue/editor/style';\n\nexport default {\n    name: 'BaseEditor',\n    extends: BaseComponent,\n    props: {\n        modelValue: String,\n        placeholder: String,\n        readonly: Boolean,\n        formats: Array,\n        editorStyle: null,\n        modules: null\n    },\n    style: EditorStyle,\n    provide() {\n        return {\n            $pcEditor: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div ref=\"toolbarElement\" :class=\"cx('toolbar')\" v-bind=\"ptm('toolbar')\">\n            <slot name=\"toolbar\">\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-header\" defaultValue=\"0\" v-bind=\"ptm('header')\">\n                        <option value=\"1\" v-bind=\"ptm('option')\">Heading</option>\n                        <option value=\"2\" v-bind=\"ptm('option')\">Subheading</option>\n                        <option value=\"0\" v-bind=\"ptm('option')\">Normal</option>\n                    </select>\n                    <select class=\"ql-font\" v-bind=\"ptm('font')\">\n                        <option v-bind=\"ptm('option')\"></option>\n                        <option value=\"serif\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"monospace\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-bold\" type=\"button\" v-bind=\"ptm('bold')\"></button>\n                    <button class=\"ql-italic\" type=\"button\" v-bind=\"ptm('italic')\"></button>\n                    <button class=\"ql-underline\" type=\"button\" v-bind=\"ptm('underline')\"></button>\n                </span>\n                <span :key=\"reRenderColorKey\" class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-color\" v-bind=\"ptm('color')\"></select>\n                    <select class=\"ql-background\" v-bind=\"ptm('background')\"></select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-list\" value=\"ordered\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <select class=\"ql-align\" v-bind=\"ptm('select')\">\n                        <option defaultValue v-bind=\"ptm('option')\"></option>\n                        <option value=\"center\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"right\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"justify\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-link\" type=\"button\" v-bind=\"ptm('link')\"></button>\n                    <button class=\"ql-image\" type=\"button\" v-bind=\"ptm('image')\"></button>\n                    <button class=\"ql-code-block\" type=\"button\" v-bind=\"ptm('codeBlock')\"></button>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-clean\" type=\"button\" v-bind=\"ptm('clean')\"></button>\n                </span>\n            </slot>\n        </div>\n        <div ref=\"editorElement\" :class=\"cx('content')\" :style=\"editorStyle\" v-bind=\"ptm('content')\"></div>\n    </div>\n</template>\n\n<script>\nimport { isExist } from '@primeuix/utils/dom';\nimport BaseEditor from './BaseEditor.vue';\n\nconst QuillJS = (function () {\n    try {\n        return window.Quill;\n    } catch {\n        return null;\n    }\n})();\n\nexport default {\n    name: 'Editor',\n    extends: BaseEditor,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'text-change', 'selection-change', 'load'],\n    data() {\n        return {\n            reRenderColorKey: 0\n        };\n    },\n    quill: null,\n    watch: {\n        modelValue(newValue, oldValue) {\n            if (newValue !== oldValue && this.quill && !this.quill.hasFocus()) {\n                this.reRenderColorKey++;\n                this.renderValue(newValue);\n            }\n        },\n        readonly() {\n            this.handleReadOnlyChange();\n        }\n    },\n    mounted() {\n        const configuration = {\n            modules: {\n                toolbar: this.$refs.toolbarElement,\n                ...this.modules\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            placeholder: this.placeholder\n        };\n\n        if (QuillJS) {\n            // Loaded by script only\n            this.quill = new QuillJS(this.$refs.editorElement, configuration);\n            this.initQuill();\n            this.handleLoad();\n        } else {\n            import('quill')\n                .then((module) => {\n                    if (module && isExist(this.$refs.editorElement)) {\n                        if (module.default) {\n                            // webpack\n                            this.quill = new module.default(this.$refs.editorElement, configuration);\n                        } else {\n                            // parceljs\n                            this.quill = new module(this.$refs.editorElement, configuration);\n                        }\n\n                        this.initQuill();\n                    }\n                })\n                .then(() => {\n                    this.handleLoad();\n                });\n        }\n    },\n    beforeUnmount() {\n        this.quill = null;\n    },\n    methods: {\n        renderValue(value) {\n            if (this.quill) {\n                if (value) this.quill.setContents(this.quill.clipboard.convert(value));\n                else this.quill.setText('');\n            }\n        },\n        initQuill() {\n            this.renderValue(this.modelValue);\n\n            this.quill.on('text-change', (delta, oldContents, source) => {\n                if (source === 'user') {\n                    let html = this.$refs.editorElement.children[0].innerHTML;\n                    let text = this.quill.getText().trim();\n\n                    if (html === '<p><br></p>') {\n                        html = '';\n                    }\n\n                    this.$emit('update:modelValue', html);\n                    this.$emit('text-change', {\n                        htmlValue: html,\n                        textValue: text,\n                        delta: delta,\n                        source: source,\n                        instance: this.quill\n                    });\n                }\n            });\n\n            this.quill.on('selection-change', (range, oldRange, source) => {\n                let html = this.$refs.editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n\n                this.$emit('selection-change', {\n                    htmlValue: html,\n                    textValue: text,\n                    range: range,\n                    oldRange: oldRange,\n                    source: source,\n                    instance: this.quill\n                });\n            });\n        },\n        handleLoad() {\n            if (this.quill && this.quill.getModule('toolbar')) {\n                this.$emit('load', { instance: this.quill });\n            }\n        },\n        handleReadOnlyChange() {\n            if (this.quill) this.quill.enable(!this.readonly);\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <div ref=\"toolbarElement\" :class=\"cx('toolbar')\" v-bind=\"ptm('toolbar')\">\n            <slot name=\"toolbar\">\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-header\" defaultValue=\"0\" v-bind=\"ptm('header')\">\n                        <option value=\"1\" v-bind=\"ptm('option')\">Heading</option>\n                        <option value=\"2\" v-bind=\"ptm('option')\">Subheading</option>\n                        <option value=\"0\" v-bind=\"ptm('option')\">Normal</option>\n                    </select>\n                    <select class=\"ql-font\" v-bind=\"ptm('font')\">\n                        <option v-bind=\"ptm('option')\"></option>\n                        <option value=\"serif\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"monospace\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-bold\" type=\"button\" v-bind=\"ptm('bold')\"></button>\n                    <button class=\"ql-italic\" type=\"button\" v-bind=\"ptm('italic')\"></button>\n                    <button class=\"ql-underline\" type=\"button\" v-bind=\"ptm('underline')\"></button>\n                </span>\n                <span :key=\"reRenderColorKey\" class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <select class=\"ql-color\" v-bind=\"ptm('color')\"></select>\n                    <select class=\"ql-background\" v-bind=\"ptm('background')\"></select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-list\" value=\"ordered\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" type=\"button\" v-bind=\"ptm('list')\"></button>\n                    <select class=\"ql-align\" v-bind=\"ptm('select')\">\n                        <option defaultValue v-bind=\"ptm('option')\"></option>\n                        <option value=\"center\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"right\" v-bind=\"ptm('option')\"></option>\n                        <option value=\"justify\" v-bind=\"ptm('option')\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-link\" type=\"button\" v-bind=\"ptm('link')\"></button>\n                    <button class=\"ql-image\" type=\"button\" v-bind=\"ptm('image')\"></button>\n                    <button class=\"ql-code-block\" type=\"button\" v-bind=\"ptm('codeBlock')\"></button>\n                </span>\n                <span class=\"ql-formats\" v-bind=\"ptm('formats')\">\n                    <button class=\"ql-clean\" type=\"button\" v-bind=\"ptm('clean')\"></button>\n                </span>\n            </slot>\n        </div>\n        <div ref=\"editorElement\" :class=\"cx('content')\" :style=\"editorStyle\" v-bind=\"ptm('content')\"></div>\n    </div>\n</template>\n\n<script>\nimport { isExist } from '@primeuix/utils/dom';\nimport BaseEditor from './BaseEditor.vue';\n\nconst QuillJS = (function () {\n    try {\n        return window.Quill;\n    } catch {\n        return null;\n    }\n})();\n\nexport default {\n    name: 'Editor',\n    extends: BaseEditor,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'text-change', 'selection-change', 'load'],\n    data() {\n        return {\n            reRenderColorKey: 0\n        };\n    },\n    quill: null,\n    watch: {\n        modelValue(newValue, oldValue) {\n            if (newValue !== oldValue && this.quill && !this.quill.hasFocus()) {\n                this.reRenderColorKey++;\n                this.renderValue(newValue);\n            }\n        },\n        readonly() {\n            this.handleReadOnlyChange();\n        }\n    },\n    mounted() {\n        const configuration = {\n            modules: {\n                toolbar: this.$refs.toolbarElement,\n                ...this.modules\n            },\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            placeholder: this.placeholder\n        };\n\n        if (QuillJS) {\n            // Loaded by script only\n            this.quill = new QuillJS(this.$refs.editorElement, configuration);\n            this.initQuill();\n            this.handleLoad();\n        } else {\n            import('quill')\n                .then((module) => {\n                    if (module && isExist(this.$refs.editorElement)) {\n                        if (module.default) {\n                            // webpack\n                            this.quill = new module.default(this.$refs.editorElement, configuration);\n                        } else {\n                            // parceljs\n                            this.quill = new module(this.$refs.editorElement, configuration);\n                        }\n\n                        this.initQuill();\n                    }\n                })\n                .then(() => {\n                    this.handleLoad();\n                });\n        }\n    },\n    beforeUnmount() {\n        this.quill = null;\n    },\n    methods: {\n        renderValue(value) {\n            if (this.quill) {\n                if (value) this.quill.setContents(this.quill.clipboard.convert(value));\n                else this.quill.setText('');\n            }\n        },\n        initQuill() {\n            this.renderValue(this.modelValue);\n\n            this.quill.on('text-change', (delta, oldContents, source) => {\n                if (source === 'user') {\n                    let html = this.$refs.editorElement.children[0].innerHTML;\n                    let text = this.quill.getText().trim();\n\n                    if (html === '<p><br></p>') {\n                        html = '';\n                    }\n\n                    this.$emit('update:modelValue', html);\n                    this.$emit('text-change', {\n                        htmlValue: html,\n                        textValue: text,\n                        delta: delta,\n                        source: source,\n                        instance: this.quill\n                    });\n                }\n            });\n\n            this.quill.on('selection-change', (range, oldRange, source) => {\n                let html = this.$refs.editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n\n                this.$emit('selection-change', {\n                    htmlValue: html,\n                    textValue: text,\n                    range: range,\n                    oldRange: oldRange,\n                    source: source,\n                    instance: this.quill\n                });\n            });\n        },\n        handleLoad() {\n            if (this.quill && this.quill.getModule('toolbar')) {\n                this.$emit('load', { instance: this.quill });\n            }\n        },\n        handleReadOnlyChange() {\n            if (this.quill) this.quill.enable(!this.readonly);\n        }\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","modelValue","String","placeholder","readonly","Boolean","formats","Array","editorStyle","modules","style","EditorStyle","provide","$pcEditor","$parentInstance","QuillJS","window","Quill","_unused","BaseEditor","inheritAttrs","emits","data","reRenderColorKey","quill","watch","newValue","oldValue","hasFocus","renderValue","handleReadOnlyChange","mounted","_this","configuration","_objectSpread","toolbar","$refs","toolbarElement","readOnly","theme","editorElement","initQuill","handleLoad","then","module","isExist","beforeUnmount","methods","value","setContents","clipboard","convert","setText","_this2","on","delta","oldContents","source","html","children","innerHTML","text","getText","trim","$emit","htmlValue","textValue","instance","range","oldRange","getModule","enable","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","ptmi","_createElementVNode","ref","ptm","_renderSlot","defaultValue","type","key","$data"],"mappings":"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"}