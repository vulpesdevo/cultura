{"version":3,"file":"index.mjs","sources":["../../src/toggleswitch/BaseToggleSwitch.vue","../../src/toggleswitch/ToggleSwitch.vue","../../src/toggleswitch/ToggleSwitch.vue?vue&type=template&id=5f95dadd&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport ToggleSwitchStyle from 'primevue/toggleswitch/style';\n\nexport default {\n    name: 'BaseToggleSwitch',\n    extends: BaseComponent,\n    props: {\n        modelValue: {\n            type: null,\n            default: false\n        },\n        trueValue: {\n            type: null,\n            default: true\n        },\n        falseValue: {\n            type: null,\n            default: false\n        },\n        invalid: {\n            type: Boolean,\n            default: false\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        tabindex: {\n            type: Number,\n            default: null\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: ToggleSwitchStyle,\n    provide() {\n        return {\n            $pcToggleSwitch: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :style=\"sx('root')\" v-bind=\"getPTOptions('root')\" :data-p-checked=\"checked\" :data-p-disabled=\"disabled\">\n        <input\n            :id=\"inputId\"\n            type=\"checkbox\"\n            role=\"switch\"\n            :class=\"[cx('input'), inputClass]\"\n            :style=\"inputStyle\"\n            :checked=\"checked\"\n            :tabindex=\"tabindex\"\n            :disabled=\"disabled\"\n            :readonly=\"readonly\"\n            :aria-checked=\"checked\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @change=\"onChange\"\n            v-bind=\"getPTOptions('input')\"\n        />\n        <span :class=\"cx('slider')\" v-bind=\"getPTOptions('slider')\"></span>\n    </div>\n</template>\n\n<script>\nimport BaseToggleSwitch from './BaseToggleSwitch.vue';\n\nexport default {\n    name: 'ToggleSwitch',\n    extends: BaseToggleSwitch,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur'],\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    checked: this.checked,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                const newValue = this.checked ? this.falseValue : this.trueValue;\n\n                this.$emit('update:modelValue', newValue);\n                this.$emit('change', event);\n            }\n        },\n        onFocus(event) {\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.$emit('blur', event);\n        }\n    },\n    computed: {\n        checked() {\n            return this.modelValue === this.trueValue;\n        }\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" :style=\"sx('root')\" v-bind=\"getPTOptions('root')\" :data-p-checked=\"checked\" :data-p-disabled=\"disabled\">\n        <input\n            :id=\"inputId\"\n            type=\"checkbox\"\n            role=\"switch\"\n            :class=\"[cx('input'), inputClass]\"\n            :style=\"inputStyle\"\n            :checked=\"checked\"\n            :tabindex=\"tabindex\"\n            :disabled=\"disabled\"\n            :readonly=\"readonly\"\n            :aria-checked=\"checked\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @change=\"onChange\"\n            v-bind=\"getPTOptions('input')\"\n        />\n        <span :class=\"cx('slider')\" v-bind=\"getPTOptions('slider')\"></span>\n    </div>\n</template>\n\n<script>\nimport BaseToggleSwitch from './BaseToggleSwitch.vue';\n\nexport default {\n    name: 'ToggleSwitch',\n    extends: BaseToggleSwitch,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change', 'focus', 'blur'],\n    methods: {\n        getPTOptions(key) {\n            const _ptm = key === 'root' ? this.ptmi : this.ptm;\n\n            return _ptm(key, {\n                context: {\n                    checked: this.checked,\n                    disabled: this.disabled\n                }\n            });\n        },\n        onChange(event) {\n            if (!this.disabled && !this.readonly) {\n                const newValue = this.checked ? this.falseValue : this.trueValue;\n\n                this.$emit('update:modelValue', newValue);\n                this.$emit('change', event);\n            }\n        },\n        onFocus(event) {\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.$emit('blur', event);\n        }\n    },\n    computed: {\n        checked() {\n            return this.modelValue === this.trueValue;\n        }\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","modelValue","type","trueValue","falseValue","invalid","Boolean","disabled","readonly","tabindex","Number","inputId","String","inputClass","Object","inputStyle","ariaLabelledby","ariaLabel","style","ToggleSwitchStyle","provide","$pcToggleSwitch","$parentInstance","BaseToggleSwitch","inheritAttrs","emits","methods","getPTOptions","key","_ptm","ptmi","ptm","context","checked","onChange","event","newValue","$emit","onFocus","onBlur","computed","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","sx","$options","_createElementVNode","id","role","undefined","apply","arguments","_hoisted_2"],"mappings":"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"}