{"version":3,"file":"index.mjs","sources":["../../src/knob/BaseKnob.vue","../../src/knob/Knob.vue","../../src/knob/Knob.vue?vue&type=template&id=2041ede6&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport { $dt } from '@primeuix/styled';\nimport KnobStyle from 'primevue/knob/style';\n\nexport default {\n    name: 'BaseKnob',\n    extends: BaseComponent,\n    props: {\n        modelValue: {\n            type: Number,\n            default: null\n        },\n        size: {\n            type: Number,\n            default: 100\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        readonly: {\n            type: Boolean,\n            default: false\n        },\n        step: {\n            type: Number,\n            default: 1\n        },\n        min: {\n            type: Number,\n            default: 0\n        },\n        max: {\n            type: Number,\n            default: 100\n        },\n        valueColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.value.background').variable;\n            }\n        },\n        rangeColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.range.background').variable;\n            }\n        },\n        textColor: {\n            type: String,\n            default: () => {\n                return $dt('knob.text.color').variable;\n            }\n        },\n        strokeWidth: {\n            type: Number,\n            default: 14\n        },\n        showValue: {\n            type: Boolean,\n            default: true\n        },\n        valueTemplate: {\n            type: [String, Function],\n            default: '{value}'\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        }\n    },\n    style: KnobStyle,\n    provide() {\n        return {\n            $pcKnob: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <svg\n            viewBox=\"0 0 100 100\"\n            role=\"slider\"\n            :width=\"size\"\n            :height=\"size\"\n            :tabindex=\"readonly || disabled ? -1 : tabindex\"\n            :aria-valuemin=\"min\"\n            :aria-valuemax=\"max\"\n            :aria-valuenow=\"modelValue\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            @click=\"onClick\"\n            @keydown=\"onKeyDown\"\n            @mousedown=\"onMouseDown\"\n            @mouseup=\"onMouseUp\"\n            @touchstart.passive=\"onTouchStart\"\n            @touchend=\"onTouchEnd\"\n            v-bind=\"ptm('svg')\"\n        >\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" :class=\"cx('range')\" v-bind=\"ptm('range')\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" :class=\"cx('value')\" v-bind=\"ptm('value')\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" :class=\"cx('text')\" v-bind=\"ptm('text')\">{{ valueToDisplay }}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseKnob from './BaseKnob.vue';\n\n// Set fix value for SSR.\nconst Math_PI = 3.14159265358979;\n\nexport default {\n    name: 'Knob',\n    extends: BaseKnob,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: (4 * Math_PI) / 3,\n            maxRadians: -Math_PI / 3\n        };\n    },\n    methods: {\n        updateValue(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy = this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math_PI / 2 - Math_PI / 6;\n\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n\n            if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n\n            this.$emit('update:modelValue', newValue);\n            this.$emit('change', newValue);\n        },\n        updateModelValue(newValue) {\n            if (newValue > this.max) this.$emit('update:modelValue', this.max);\n            else if (newValue < this.min) this.$emit('update:modelValue', this.min);\n            else this.$emit('update:modelValue', newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n            }\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n\n                this.updateValue(offsetX, offsetY);\n            }\n        },\n        onKeyDown(event) {\n            if (!this.disabled && !this.readonly) {\n                switch (event.code) {\n                    case 'ArrowRight':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue + this.step);\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue - this.step);\n                        break;\n                    }\n\n                    case 'Home': {\n                        event.preventDefault();\n                        this.$emit('update:modelValue', this.min);\n                        break;\n                    }\n\n                    case 'End': {\n                        event.preventDefault();\n                        this.$emit('update:modelValue', this.max);\n                        break;\n                    }\n\n                    case 'PageUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue + 10);\n                        break;\n                    }\n\n                    case 'PageDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue - 10);\n                        break;\n                    }\n                }\n            }\n        }\n    },\n    computed: {\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.modelValue, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            if (typeof this.valueTemplate === 'string') {\n                return this.valueTemplate.replace(/{value}/g, this.modelValue);\n            } else {\n                return this.valueTemplate(this.modelValue);\n            }\n        }\n    }\n};\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n","<template>\n    <div :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <svg\n            viewBox=\"0 0 100 100\"\n            role=\"slider\"\n            :width=\"size\"\n            :height=\"size\"\n            :tabindex=\"readonly || disabled ? -1 : tabindex\"\n            :aria-valuemin=\"min\"\n            :aria-valuemax=\"max\"\n            :aria-valuenow=\"modelValue\"\n            :aria-labelledby=\"ariaLabelledby\"\n            :aria-label=\"ariaLabel\"\n            @click=\"onClick\"\n            @keydown=\"onKeyDown\"\n            @mousedown=\"onMouseDown\"\n            @mouseup=\"onMouseUp\"\n            @touchstart.passive=\"onTouchStart\"\n            @touchend=\"onTouchEnd\"\n            v-bind=\"ptm('svg')\"\n        >\n            <path :d=\"rangePath\" :stroke-width=\"strokeWidth\" :stroke=\"rangeColor\" :class=\"cx('range')\" v-bind=\"ptm('range')\"></path>\n            <path :d=\"valuePath\" :stroke-width=\"strokeWidth\" :stroke=\"valueColor\" :class=\"cx('value')\" v-bind=\"ptm('value')\"></path>\n            <text v-if=\"showValue\" :x=\"50\" :y=\"57\" text-anchor=\"middle\" :fill=\"textColor\" :class=\"cx('text')\" v-bind=\"ptm('text')\">{{ valueToDisplay }}</text>\n        </svg>\n    </div>\n</template>\n\n<script>\nimport BaseKnob from './BaseKnob.vue';\n\n// Set fix value for SSR.\nconst Math_PI = 3.14159265358979;\n\nexport default {\n    name: 'Knob',\n    extends: BaseKnob,\n    inheritAttrs: false,\n    emits: ['update:modelValue', 'change'],\n    data() {\n        return {\n            radius: 40,\n            midX: 50,\n            midY: 50,\n            minRadians: (4 * Math_PI) / 3,\n            maxRadians: -Math_PI / 3\n        };\n    },\n    methods: {\n        updateValue(offsetX, offsetY) {\n            let dx = offsetX - this.size / 2;\n            let dy = this.size / 2 - offsetY;\n            let angle = Math.atan2(dy, dx);\n            let start = -Math_PI / 2 - Math_PI / 6;\n\n            this.updateModel(angle, start);\n        },\n        updateModel(angle, start) {\n            let mappedValue;\n\n            if (angle > this.maxRadians) mappedValue = this.mapRange(angle, this.minRadians, this.maxRadians, this.min, this.max);\n            else if (angle < start) mappedValue = this.mapRange(angle + 2 * Math_PI, this.minRadians, this.maxRadians, this.min, this.max);\n            else return;\n\n            let newValue = Math.round((mappedValue - this.min) / this.step) * this.step + this.min;\n\n            this.$emit('update:modelValue', newValue);\n            this.$emit('change', newValue);\n        },\n        updateModelValue(newValue) {\n            if (newValue > this.max) this.$emit('update:modelValue', this.max);\n            else if (newValue < this.min) this.$emit('update:modelValue', this.min);\n            else this.$emit('update:modelValue', newValue);\n        },\n        mapRange(x, inMin, inMax, outMin, outMax) {\n            return ((x - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n        },\n        onClick(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n            }\n        },\n        onMouseDown(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('mousemove', this.onMouseMove);\n                window.addEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onMouseUp(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('mousemove', this.onMouseMove);\n                window.removeEventListener('mouseup', this.onMouseUp);\n                event.preventDefault();\n            }\n        },\n        onTouchStart(event) {\n            if (!this.disabled && !this.readonly) {\n                window.addEventListener('touchmove', this.onTouchMove);\n                window.addEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onTouchEnd(event) {\n            if (!this.disabled && !this.readonly) {\n                window.removeEventListener('touchmove', this.onTouchMove);\n                window.removeEventListener('touchend', this.onTouchEnd);\n                event.preventDefault();\n            }\n        },\n        onMouseMove(event) {\n            if (!this.disabled && !this.readonly) {\n                this.updateValue(event.offsetX, event.offsetY);\n                event.preventDefault();\n            }\n        },\n        onTouchMove(event) {\n            if (!this.disabled && !this.readonly && event.touches.length == 1) {\n                const rect = this.$el.getBoundingClientRect();\n                const touch = event.targetTouches.item(0);\n                const offsetX = touch.clientX - rect.left;\n                const offsetY = touch.clientY - rect.top;\n\n                this.updateValue(offsetX, offsetY);\n            }\n        },\n        onKeyDown(event) {\n            if (!this.disabled && !this.readonly) {\n                switch (event.code) {\n                    case 'ArrowRight':\n\n                    case 'ArrowUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue + this.step);\n                        break;\n                    }\n\n                    case 'ArrowLeft':\n\n                    case 'ArrowDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue - this.step);\n                        break;\n                    }\n\n                    case 'Home': {\n                        event.preventDefault();\n                        this.$emit('update:modelValue', this.min);\n                        break;\n                    }\n\n                    case 'End': {\n                        event.preventDefault();\n                        this.$emit('update:modelValue', this.max);\n                        break;\n                    }\n\n                    case 'PageUp': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue + 10);\n                        break;\n                    }\n\n                    case 'PageDown': {\n                        event.preventDefault();\n                        this.updateModelValue(this.modelValue - 10);\n                        break;\n                    }\n                }\n            }\n        }\n    },\n    computed: {\n        rangePath() {\n            return `M ${this.minX} ${this.minY} A ${this.radius} ${this.radius} 0 1 1 ${this.maxX} ${this.maxY}`;\n        },\n        valuePath() {\n            return `M ${this.zeroX} ${this.zeroY} A ${this.radius} ${this.radius} 0 ${this.largeArc} ${this.sweep} ${this.valueX} ${this.valueY}`;\n        },\n        zeroRadians() {\n            if (this.min > 0 && this.max > 0) return this.mapRange(this.min, this.min, this.max, this.minRadians, this.maxRadians);\n            else return this.mapRange(0, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        valueRadians() {\n            return this.mapRange(this.modelValue, this.min, this.max, this.minRadians, this.maxRadians);\n        },\n        minX() {\n            return this.midX + Math.cos(this.minRadians) * this.radius;\n        },\n        minY() {\n            return this.midY - Math.sin(this.minRadians) * this.radius;\n        },\n        maxX() {\n            return this.midX + Math.cos(this.maxRadians) * this.radius;\n        },\n        maxY() {\n            return this.midY - Math.sin(this.maxRadians) * this.radius;\n        },\n        zeroX() {\n            return this.midX + Math.cos(this.zeroRadians) * this.radius;\n        },\n        zeroY() {\n            return this.midY - Math.sin(this.zeroRadians) * this.radius;\n        },\n        valueX() {\n            return this.midX + Math.cos(this.valueRadians) * this.radius;\n        },\n        valueY() {\n            return this.midY - Math.sin(this.valueRadians) * this.radius;\n        },\n        largeArc() {\n            return Math.abs(this.zeroRadians - this.valueRadians) < Math_PI ? 0 : 1;\n        },\n        sweep() {\n            return this.valueRadians > this.zeroRadians ? 0 : 1;\n        },\n        valueToDisplay() {\n            if (typeof this.valueTemplate === 'string') {\n                return this.valueTemplate.replace(/{value}/g, this.modelValue);\n            } else {\n                return this.valueTemplate(this.modelValue);\n            }\n        }\n    }\n};\n//Derived and forked from https://github.com/kramer99/vue-knob-control\n</script>\n"],"names":["name","BaseComponent","props","modelValue","type","Number","size","disabled","Boolean","readonly","step","min","max","valueColor","String","_default","$dt","variable","rangeColor","textColor","strokeWidth","showValue","valueTemplate","Function","tabindex","ariaLabelledby","ariaLabel","style","KnobStyle","provide","$pcKnob","$parentInstance","Math_PI","BaseKnob","inheritAttrs","emits","data","radius","midX","midY","minRadians","maxRadians","methods","updateValue","offsetX","offsetY","dx","dy","angle","Math","atan2","start","updateModel","mappedValue","mapRange","newValue","round","$emit","updateModelValue","x","inMin","inMax","outMin","outMax","onClick","event","onMouseDown","window","addEventListener","onMouseMove","onMouseUp","preventDefault","removeEventListener","onTouchStart","onTouchMove","onTouchEnd","touches","length","rect","$el","getBoundingClientRect","touch","targetTouches","item","clientX","left","clientY","top","onKeyDown","code","computed","rangePath","concat","minX","minY","maxX","maxY","valuePath","zeroX","zeroY","largeArc","sweep","valueX","valueY","zeroRadians","valueRadians","cos","sin","abs","valueToDisplay","replace","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","ptmi","viewBox","role","width","height","$options","apply","arguments","onKeydown","onMousedown","onMouseup","onTouchend","ptm","_createElementVNode","d","stroke","_hoisted_2","_hoisted_3","y","fill","_hoisted_4"],"mappings":"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"}