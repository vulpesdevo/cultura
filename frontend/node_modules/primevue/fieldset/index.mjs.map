{"version":3,"file":"index.mjs","sources":["../../src/fieldset/BaseFieldset.vue","../../src/fieldset/Fieldset.vue","../../src/fieldset/Fieldset.vue?vue&type=template&id=7155738a&lang.js"],"sourcesContent":["<script>\nimport BaseComponent from '@primevue/core/basecomponent';\nimport FieldsetStyle from 'primevue/fieldset/style';\n\nexport default {\n    name: 'BaseFieldset',\n    extends: BaseComponent,\n    props: {\n        legend: String,\n        toggleable: Boolean,\n        collapsed: Boolean,\n        toggleButtonProps: {\n            type: null,\n            default: null\n        }\n    },\n    style: FieldsetStyle,\n    provide() {\n        return {\n            $pcFieldset: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <fieldset :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <legend :class=\"cx('legend')\" v-bind=\"ptm('legend')\">\n            <slot name=\"legend\" :toggleCallback=\"toggle\">\n                <span v-if=\"!toggleable\" :id=\"id + '_header'\" :class=\"cx('legendLabel')\" v-bind=\"ptm('legendLabel')\">{{ legend }}</span>\n                <button\n                    v-if=\"toggleable\"\n                    :id=\"id + '_header'\"\n                    v-ripple\n                    type=\"button\"\n                    :aria-controls=\"id + '_content'\"\n                    :aria-expanded=\"!d_collapsed\"\n                    :aria-label=\"buttonAriaLabel\"\n                    :class=\"cx('toggleButton')\"\n                    @click=\"toggle\"\n                    @keydown=\"onKeyDown\"\n                    v-bind=\"{ ...toggleButtonProps, ...ptm('toggleButton') }\"\n                >\n                    <!--TODO: togglericon deprecated since v4.0-->\n                    <slot :name=\"$slots.toggleicon ? 'toggleicon' : 'togglericon'\" :collapsed=\"d_collapsed\">\n                        <component :is=\"d_collapsed ? 'PlusIcon' : 'MinusIcon'\" :class=\"cx('toggleIcon')\" v-bind=\"ptm('toggleIcon')\" />\n                    </slot>\n                    <span :class=\"cx('legendLabel')\" v-bind=\"ptm('legendLabel')\">{{ legend }}</span>\n                </button>\n            </slot>\n        </legend>\n        <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n            <div v-show=\"!d_collapsed\" :id=\"id + '_content'\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"id + '_header'\" v-bind=\"ptm('contentContainer')\">\n                <div :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                    <slot></slot>\n                </div>\n            </div>\n        </transition>\n    </fieldset>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport MinusIcon from '@primevue/icons/minus';\nimport PlusIcon from '@primevue/icons/plus';\nimport Ripple from 'primevue/ripple';\nimport BaseFieldset from './BaseFieldset.vue';\n\nexport default {\n    name: 'Fieldset',\n    extends: BaseFieldset,\n    inheritAttrs: false,\n    emits: ['update:collapsed', 'toggle'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_collapsed: this.collapsed\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        collapsed(newValue) {\n            this.d_collapsed = newValue;\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        toggle(event) {\n            this.d_collapsed = !this.d_collapsed;\n            this.$emit('update:collapsed', this.d_collapsed);\n            this.$emit('toggle', {\n                originalEvent: event,\n                value: this.d_collapsed\n            });\n        },\n        onKeyDown(event) {\n            if (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') {\n                this.toggle(event);\n                event.preventDefault();\n            }\n        }\n    },\n    computed: {\n        buttonAriaLabel() {\n            return this.toggleButtonProps && this.toggleButtonProps.ariaLabel ? this.toggleButtonProps.ariaLabel : this.legend;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        PlusIcon,\n        MinusIcon\n    }\n};\n</script>\n","<template>\n    <fieldset :class=\"cx('root')\" v-bind=\"ptmi('root')\">\n        <legend :class=\"cx('legend')\" v-bind=\"ptm('legend')\">\n            <slot name=\"legend\" :toggleCallback=\"toggle\">\n                <span v-if=\"!toggleable\" :id=\"id + '_header'\" :class=\"cx('legendLabel')\" v-bind=\"ptm('legendLabel')\">{{ legend }}</span>\n                <button\n                    v-if=\"toggleable\"\n                    :id=\"id + '_header'\"\n                    v-ripple\n                    type=\"button\"\n                    :aria-controls=\"id + '_content'\"\n                    :aria-expanded=\"!d_collapsed\"\n                    :aria-label=\"buttonAriaLabel\"\n                    :class=\"cx('toggleButton')\"\n                    @click=\"toggle\"\n                    @keydown=\"onKeyDown\"\n                    v-bind=\"{ ...toggleButtonProps, ...ptm('toggleButton') }\"\n                >\n                    <!--TODO: togglericon deprecated since v4.0-->\n                    <slot :name=\"$slots.toggleicon ? 'toggleicon' : 'togglericon'\" :collapsed=\"d_collapsed\">\n                        <component :is=\"d_collapsed ? 'PlusIcon' : 'MinusIcon'\" :class=\"cx('toggleIcon')\" v-bind=\"ptm('toggleIcon')\" />\n                    </slot>\n                    <span :class=\"cx('legendLabel')\" v-bind=\"ptm('legendLabel')\">{{ legend }}</span>\n                </button>\n            </slot>\n        </legend>\n        <transition name=\"p-toggleable-content\" v-bind=\"ptm('transition')\">\n            <div v-show=\"!d_collapsed\" :id=\"id + '_content'\" :class=\"cx('contentContainer')\" role=\"region\" :aria-labelledby=\"id + '_header'\" v-bind=\"ptm('contentContainer')\">\n                <div :class=\"cx('content')\" v-bind=\"ptm('content')\">\n                    <slot></slot>\n                </div>\n            </div>\n        </transition>\n    </fieldset>\n</template>\n\n<script>\nimport { UniqueComponentId } from '@primevue/core/utils';\nimport MinusIcon from '@primevue/icons/minus';\nimport PlusIcon from '@primevue/icons/plus';\nimport Ripple from 'primevue/ripple';\nimport BaseFieldset from './BaseFieldset.vue';\n\nexport default {\n    name: 'Fieldset',\n    extends: BaseFieldset,\n    inheritAttrs: false,\n    emits: ['update:collapsed', 'toggle'],\n    data() {\n        return {\n            id: this.$attrs.id,\n            d_collapsed: this.collapsed\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        collapsed(newValue) {\n            this.d_collapsed = newValue;\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n    },\n    methods: {\n        toggle(event) {\n            this.d_collapsed = !this.d_collapsed;\n            this.$emit('update:collapsed', this.d_collapsed);\n            this.$emit('toggle', {\n                originalEvent: event,\n                value: this.d_collapsed\n            });\n        },\n        onKeyDown(event) {\n            if (event.code === 'Enter' || event.code === 'NumpadEnter' || event.code === 'Space') {\n                this.toggle(event);\n                event.preventDefault();\n            }\n        }\n    },\n    computed: {\n        buttonAriaLabel() {\n            return this.toggleButtonProps && this.toggleButtonProps.ariaLabel ? this.toggleButtonProps.ariaLabel : this.legend;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        PlusIcon,\n        MinusIcon\n    }\n};\n</script>\n"],"names":["name","BaseComponent","props","legend","String","toggleable","Boolean","collapsed","toggleButtonProps","type","style","FieldsetStyle","provide","$pcFieldset","$parentInstance","BaseFieldset","inheritAttrs","emits","data","id","$attrs","d_collapsed","watch","$attrsId","newValue","UniqueComponentId","mounted","methods","toggle","event","$emit","originalEvent","value","onKeyDown","code","preventDefault","computed","buttonAriaLabel","ariaLabel","directives","ripple","Ripple","components","PlusIcon","MinusIcon","_openBlock","_createElementBlock","_mergeProps","_ctx","cx","ptmi","_createElementVNode","ptm","_renderSlot","$slots","toggleCallback","$options","$data","_hoisted_1","_withDirectives","onClick","apply","arguments","onKeydown","_objectSpread","toggleicon","_createBlock","_resolveDynamicComponent","_createVNode","_Transition","role"],"mappings":"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"}